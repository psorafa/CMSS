//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
//Warning: '<xsd:anyType>' element anyType has been converted to string in GenerateLoanPDFRequestBodyType
	
public class LoanServiceDataTypes {
	private static final String s_ns0 = 'http://service.cmss.cz/loan/LoanService/v05/datatypes';
	public static DateTime parseDateTime(String nodeText){
			String iso8601 = nodeText;
			JSONParser parser = JSON.createParser( '{"t":"' + iso8601 + '"}');
			parser.nextToken();
			parser.nextValue();
			DateTime dt = parser.getDateTimeValue();
			//System.debug('dt: ' + dt);
			return dt;
		}
	public class AccountDetailListType {
		public LoanServiceDataTypes.AccountDetailType[] accountDetail;
		private transient String[] accountDetail_type_info = new String[]{'accountDetail',s_ns0,'AccountDetailType','0','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'accountDetail'};
		public AccountDetailListType(){
		}
		public AccountDetailListType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] accountDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.AccountDetailType[] accountDetailList = new List<LoanServiceDataTypes.AccountDetailType>();
			if(accountDetailChildren == null || accountDetailChildren.size() == 0){
				this.accountDetail = null;
			} else{
				for(DOM.XmlNode childNode : accountDetailChildren){
					if(childNode.GetName() == 'accountDetail'){
						LoanServiceDataTypes.AccountDetailType Obj = new LoanServiceDataTypes.AccountDetailType(childNode);
						accountDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.accountDetail = accountDetailList;
			}
			//System.debug(this.accountDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.AccountDetailType[] accountDetailObj = this.accountDetail;
			if(accountDetailObj != null){
				for(LoanServiceDataTypes.AccountDetailType element: accountDetailObj){
					Dom.XmlNode accountDetailNode = outerNode.addChildElement('accountDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(accountDetailNode);
				}
			}			
		}
	}
	public class AccountDetailType {
		public BasicTypesService.AccountNumberType accountNumber;
		// Restriction enumeration: USS, MU
		public String LoanContractType;
		public LoanServiceDataTypes.LoanContractDetailType muDetail;
		public LoanServiceDataTypes.LoanContractDetailType ussDetail;
		// Restriction enumeration: 
		public String creditFacility;
		public DateTime expectedDrowdownDate;
		// Restriction enumeration: 
		public String expectedDrowdownAmount;
		// Restriction enumeration: 
		public String loanChangeAmount;
		// Restriction enumeration: 
		public String totalPaymentAmount;
		// Restriction enumeration: 
		public String MUFee;
		public String ZkratkaVarianty;
		public LoanServiceDataTypes.AccountEventListType events;
		private transient String[] accountNumber_type_info = new String[]{'accountNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] LoanContractType_type_info = new String[]{'LoanContractType',s_ns0,'LoanContractType','1','1','false'};
		private transient String[] muDetail_type_info = new String[]{'muDetail',s_ns0,'LoanContractDetailType','0','1','false'};
		private transient String[] ussDetail_type_info = new String[]{'ussDetail',s_ns0,'LoanContractDetailType','1','1','false'};
		private transient String[] creditFacility_type_info = new String[]{'creditFacility',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] expectedDrowdownDate_type_info = new String[]{'expectedDrowdownDate',s_ns0,'CommonDateTimeType','1','1','false'};
		private transient String[] expectedDrowdownAmount_type_info = new String[]{'expectedDrowdownAmount',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] loanChangeAmount_type_info = new String[]{'loanChangeAmount',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] totalPaymentAmount_type_info = new String[]{'totalPaymentAmount',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] MUFee_type_info = new String[]{'MUFee',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] ZkratkaVarianty_type_info = new String[]{'ZkratkaVarianty',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] events_type_info = new String[]{'events',s_ns0,'AccountEventListType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'accountNumber','LoanContractType','muDetail','ussDetail','creditFacility','expectedDrowdownDate','expectedDrowdownAmount','loanChangeAmount','totalPaymentAmount','MUFee','ZkratkaVarianty','events'};
		public AccountDetailType(){
		}
		public AccountDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode accountNumberNode = responseNode.getChildElement('accountNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(accountNumberNode == null){
				this.accountNumber = null;
			} else{
				BasicTypesService.AccountNumberType accountNumberObj = new BasicTypesService.AccountNumberType(accountNumberNode);
				nodesParsed.add(accountNumberNode);
				this.accountNumber = accountNumberObj;
			}
			//System.debug(this.accountNumber);			
			DOM.XmlNode LoanContractTypeNode = responseNode.getChildElement('LoanContractType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.LoanContractType = (LoanContractTypeNode == null) ? null : LoanContractTypeNode.getText();
			nodesParsed.add(LoanContractTypeNode);
			//System.debug(this.LoanContractType);			
			DOM.XmlNode muDetailNode = responseNode.getChildElement('muDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(muDetailNode == null){
				this.muDetail = null;
			} else{
				LoanServiceDataTypes.LoanContractDetailType muDetailObj = new LoanServiceDataTypes.LoanContractDetailType(muDetailNode);
				nodesParsed.add(muDetailNode);
				this.muDetail = muDetailObj;
			}
			//System.debug(this.muDetail);			
			DOM.XmlNode ussDetailNode = responseNode.getChildElement('ussDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(ussDetailNode == null){
				this.ussDetail = null;
			} else{
				LoanServiceDataTypes.LoanContractDetailType ussDetailObj = new LoanServiceDataTypes.LoanContractDetailType(ussDetailNode);
				nodesParsed.add(ussDetailNode);
				this.ussDetail = ussDetailObj;
			}
			//System.debug(this.ussDetail);			
			DOM.XmlNode creditFacilityNode = responseNode.getChildElement('creditFacility', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.creditFacility = (creditFacilityNode == null) ? null : creditFacilityNode.getText();
			nodesParsed.add(creditFacilityNode);
			//System.debug(this.creditFacility);			
			DOM.XmlNode expectedDrowdownDateNode = responseNode.getChildElement('expectedDrowdownDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.expectedDrowdownDate = (expectedDrowdownDateNode == null) ? null :  LoanServiceDataTypes.parseDateTime(expectedDrowdownDateNode.getText());
			nodesParsed.add(expectedDrowdownDateNode);
			//System.debug(this.expectedDrowdownDate);			
			DOM.XmlNode expectedDrowdownAmountNode = responseNode.getChildElement('expectedDrowdownAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.expectedDrowdownAmount = (expectedDrowdownAmountNode == null) ? null : expectedDrowdownAmountNode.getText();
			nodesParsed.add(expectedDrowdownAmountNode);
			//System.debug(this.expectedDrowdownAmount);			
			DOM.XmlNode loanChangeAmountNode = responseNode.getChildElement('loanChangeAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.loanChangeAmount = (loanChangeAmountNode == null) ? null : loanChangeAmountNode.getText();
			nodesParsed.add(loanChangeAmountNode);
			//System.debug(this.loanChangeAmount);			
			DOM.XmlNode totalPaymentAmountNode = responseNode.getChildElement('totalPaymentAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.totalPaymentAmount = (totalPaymentAmountNode == null) ? null : totalPaymentAmountNode.getText();
			nodesParsed.add(totalPaymentAmountNode);
			//System.debug(this.totalPaymentAmount);			
			DOM.XmlNode MUFeeNode = responseNode.getChildElement('MUFee', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.MUFee = (MUFeeNode == null) ? null : MUFeeNode.getText();
			nodesParsed.add(MUFeeNode);
			//System.debug(this.MUFee);			
			DOM.XmlNode ZkratkaVariantyNode = responseNode.getChildElement('ZkratkaVarianty', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.ZkratkaVarianty = (ZkratkaVariantyNode == null) ? null : ZkratkaVariantyNode.getText();
			nodesParsed.add(ZkratkaVariantyNode);
			//System.debug(this.ZkratkaVarianty);			
			DOM.XmlNode eventsNode = responseNode.getChildElement('events', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(eventsNode == null){
				this.events = null;
			} else{
				LoanServiceDataTypes.AccountEventListType eventsObj = new LoanServiceDataTypes.AccountEventListType(eventsNode);
				nodesParsed.add(eventsNode);
				this.events = eventsObj;
			}
			//System.debug(this.events);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType accountNumberObj = this.accountNumber;
			Dom.XmlNode accountNumberNode = outerNode.addChildElement('accountNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(accountNumberObj != null){
				accountNumberObj.populateXmlNode(accountNumberNode);
			}
			Dom.XmlNode LoanContractTypeNode = outerNode.addChildElement('LoanContractType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.LoanContractType != null){
				LoanContractTypeNode.addTextNode(this.LoanContractType);
			}
			
			LoanServiceDataTypes.LoanContractDetailType muDetailObj = this.muDetail;
			Dom.XmlNode muDetailNode = outerNode.addChildElement('muDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(muDetailObj != null){
				muDetailObj.populateXmlNode(muDetailNode);
			}
			
			LoanServiceDataTypes.LoanContractDetailType ussDetailObj = this.ussDetail;
			Dom.XmlNode ussDetailNode = outerNode.addChildElement('ussDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(ussDetailObj != null){
				ussDetailObj.populateXmlNode(ussDetailNode);
			}
			Dom.XmlNode creditFacilityNode = outerNode.addChildElement('creditFacility', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.creditFacility != null){
				creditFacilityNode.addTextNode(this.creditFacility);
			}
			Dom.XmlNode expectedDrowdownDateNode = outerNode.addChildElement('expectedDrowdownDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.expectedDrowdownDate != null){
				expectedDrowdownDateNode.addTextNode(String.valueOf(this.expectedDrowdownDate));
			}
			Dom.XmlNode expectedDrowdownAmountNode = outerNode.addChildElement('expectedDrowdownAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.expectedDrowdownAmount != null){
				expectedDrowdownAmountNode.addTextNode(this.expectedDrowdownAmount);
			}
			Dom.XmlNode loanChangeAmountNode = outerNode.addChildElement('loanChangeAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			loanChangeAmountNode.addTextNode((this.loanChangeAmount == null) ? '' : this.loanChangeAmount);
			Dom.XmlNode totalPaymentAmountNode = outerNode.addChildElement('totalPaymentAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.totalPaymentAmount != null){
				totalPaymentAmountNode.addTextNode(this.totalPaymentAmount);
			}
			Dom.XmlNode MUFeeNode = outerNode.addChildElement('MUFee', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.MUFee != null){
				MUFeeNode.addTextNode(this.MUFee);
			}
			Dom.XmlNode ZkratkaVariantyNode = outerNode.addChildElement('ZkratkaVarianty', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.ZkratkaVarianty != null){
				ZkratkaVariantyNode.addTextNode(this.ZkratkaVarianty);
			}
			
			LoanServiceDataTypes.AccountEventListType eventsObj = this.events;
			Dom.XmlNode eventsNode = outerNode.addChildElement('events', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(eventsObj != null){
				eventsObj.populateXmlNode(eventsNode);
			}
		}
	}
	public class AccountEventItemType {
		public BasicTypesService.AccountNumberType accountNumber;
		public Long accountType;
		public DateTime eventDate;
		public String eventDescription;
		// Restriction enumeration: 
		public String paymentSS;
		// Restriction enumeration: 
		public String paymentMU;
		// Restriction enumeration: 
		public String paymentUSS;
		// Restriction enumeration: 
		public String paymentTotal;
		private transient String[] accountNumber_type_info = new String[]{'accountNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] accountType_type_info = new String[]{'accountType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] eventDate_type_info = new String[]{'eventDate',s_ns0,'CommonDateTimeType','0','1','false'};
		private transient String[] eventDescription_type_info = new String[]{'eventDescription',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] paymentSS_type_info = new String[]{'paymentSS',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] paymentMU_type_info = new String[]{'paymentMU',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] paymentUSS_type_info = new String[]{'paymentUSS',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] paymentTotal_type_info = new String[]{'paymentTotal',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'accountNumber','accountType','eventDate','eventDescription','paymentSS','paymentMU','paymentUSS','paymentTotal'};
		public AccountEventItemType(){
		}
		public AccountEventItemType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode accountNumberNode = responseNode.getChildElement('accountNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(accountNumberNode == null){
				this.accountNumber = null;
			} else{
				BasicTypesService.AccountNumberType accountNumberObj = new BasicTypesService.AccountNumberType(accountNumberNode);
				nodesParsed.add(accountNumberNode);
				this.accountNumber = accountNumberObj;
			}
			//System.debug(this.accountNumber);			
			DOM.XmlNode accountTypeNode = responseNode.getChildElement('accountType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.accountType = (accountTypeNode == null) ? null : Long.valueOf(accountTypeNode.getText());
			nodesParsed.add(accountTypeNode);
			//System.debug(this.accountType);			
			DOM.XmlNode eventDateNode = responseNode.getChildElement('eventDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.eventDate = (eventDateNode == null) ? null :  LoanServiceDataTypes.parseDateTime(eventDateNode.getText());
			nodesParsed.add(eventDateNode);
			//System.debug(this.eventDate);			
			DOM.XmlNode eventDescriptionNode = responseNode.getChildElement('eventDescription', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.eventDescription = (eventDescriptionNode == null) ? null : eventDescriptionNode.getText();
			nodesParsed.add(eventDescriptionNode);
			//System.debug(this.eventDescription);			
			DOM.XmlNode paymentSSNode = responseNode.getChildElement('paymentSS', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.paymentSS = (paymentSSNode == null) ? null : paymentSSNode.getText();
			nodesParsed.add(paymentSSNode);
			//System.debug(this.paymentSS);			
			DOM.XmlNode paymentMUNode = responseNode.getChildElement('paymentMU', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.paymentMU = (paymentMUNode == null) ? null : paymentMUNode.getText();
			nodesParsed.add(paymentMUNode);
			//System.debug(this.paymentMU);			
			DOM.XmlNode paymentUSSNode = responseNode.getChildElement('paymentUSS', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.paymentUSS = (paymentUSSNode == null) ? null : paymentUSSNode.getText();
			nodesParsed.add(paymentUSSNode);
			//System.debug(this.paymentUSS);			
			DOM.XmlNode paymentTotalNode = responseNode.getChildElement('paymentTotal', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.paymentTotal = (paymentTotalNode == null) ? null : paymentTotalNode.getText();
			nodesParsed.add(paymentTotalNode);
			//System.debug(this.paymentTotal);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType accountNumberObj = this.accountNumber;
			Dom.XmlNode accountNumberNode = outerNode.addChildElement('accountNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(accountNumberObj != null){
				accountNumberObj.populateXmlNode(accountNumberNode);
			}
			Dom.XmlNode accountTypeNode = outerNode.addChildElement('accountType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			accountTypeNode.addTextNode((this.accountType == null) ? '' : String.valueOf(this.accountType));
			Dom.XmlNode eventDateNode = outerNode.addChildElement('eventDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			eventDateNode.addTextNode((this.eventDate == null) ? '' : String.valueOf(this.eventDate));
			Dom.XmlNode eventDescriptionNode = outerNode.addChildElement('eventDescription', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			eventDescriptionNode.addTextNode((this.eventDescription == null) ? '' : this.eventDescription);
			Dom.XmlNode paymentSSNode = outerNode.addChildElement('paymentSS', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.paymentSS != null){
				paymentSSNode.addTextNode(this.paymentSS);
			}
			Dom.XmlNode paymentMUNode = outerNode.addChildElement('paymentMU', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.paymentMU != null){
				paymentMUNode.addTextNode(this.paymentMU);
			}
			Dom.XmlNode paymentUSSNode = outerNode.addChildElement('paymentUSS', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.paymentUSS != null){
				paymentUSSNode.addTextNode(this.paymentUSS);
			}
			Dom.XmlNode paymentTotalNode = outerNode.addChildElement('paymentTotal', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.paymentTotal != null){
				paymentTotalNode.addTextNode(this.paymentTotal);
			}
		}
	}
	public class AccountEventListType {
		public LoanServiceDataTypes.AccountEventItemType[] event;
		private transient String[] event_type_info = new String[]{'event',s_ns0,'AccountEventItemType','0','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'event'};
		public AccountEventListType(){
		}
		public AccountEventListType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] eventChildren = responseNode.getChildElements();
			LoanServiceDataTypes.AccountEventItemType[] eventList = new List<LoanServiceDataTypes.AccountEventItemType>();
			if(eventChildren == null || eventChildren.size() == 0){
				this.event = null;
			} else{
				for(DOM.XmlNode childNode : eventChildren){
					if(childNode.GetName() == 'event'){
						LoanServiceDataTypes.AccountEventItemType Obj = new LoanServiceDataTypes.AccountEventItemType(childNode);
						eventList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.event = eventList;
			}
			//System.debug(this.event);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.AccountEventItemType[] eventObj = this.event;
			if(eventObj != null){
				for(LoanServiceDataTypes.AccountEventItemType element: eventObj){
					Dom.XmlNode eventNode = outerNode.addChildElement('event', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(eventNode);
				}
			}			
		}
	}
	public class CancelLoanAfterApprovedRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		// Restriction enumeration: 
		public Date cancellationDate;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] cancellationDate_type_info = new String[]{'cancellationDate',s_ns0,'CommonDateType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','cancellationDate'};
		public CancelLoanAfterApprovedRequestBodyType(){
		}
		public CancelLoanAfterApprovedRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode cancellationDateNode = responseNode.getChildElement('cancellationDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.cancellationDate = (cancellationDateNode == null) ? null : Date.valueOf(cancellationDateNode.getText());
			nodesParsed.add(cancellationDateNode);
			//System.debug(this.cancellationDate);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode cancellationDateNode = outerNode.addChildElement('cancellationDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.cancellationDate != null){
				cancellationDateNode.addTextNode(String.valueOf(this.cancellationDate));
			}
		}
	}
	public class CancelLoanAfterApprovedResponseBodyType {
		public BasicTypesService.OperationSuccessType operationSuccess;
		private transient String[] operationSuccess_type_info = new String[]{'operationSuccess',s_ns0,'OperationSuccessType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'operationSuccess'};
		public CancelLoanAfterApprovedResponseBodyType(){
		}
		public CancelLoanAfterApprovedResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode operationSuccessNode = responseNode.getChildElement('operationSuccess', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(operationSuccessNode == null){
				this.operationSuccess = null;
			} else{
				BasicTypesService.OperationSuccessType operationSuccessObj = new BasicTypesService.OperationSuccessType(operationSuccessNode);
				nodesParsed.add(operationSuccessNode);
				this.operationSuccess = operationSuccessObj;
			}
			//System.debug(this.operationSuccess);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType operationSuccessObj = this.operationSuccess;
			Dom.XmlNode operationSuccessNode = outerNode.addChildElement('operationSuccess', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(operationSuccessObj != null){
				operationSuccessObj.populateXmlNode(operationSuccessNode);
			}
		}
	}
	public class CancelLoanRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		// Restriction enumeration: 
		public Date cancellationDate;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] cancellationDate_type_info = new String[]{'cancellationDate',s_ns0,'CommonDateType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','cancellationDate'};
		public CancelLoanRequestBodyType(){
		}
		public CancelLoanRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode cancellationDateNode = responseNode.getChildElement('cancellationDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.cancellationDate = (cancellationDateNode == null) ? null : Date.valueOf(cancellationDateNode.getText());
			nodesParsed.add(cancellationDateNode);
			//System.debug(this.cancellationDate);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode cancellationDateNode = outerNode.addChildElement('cancellationDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.cancellationDate != null){
				cancellationDateNode.addTextNode(String.valueOf(this.cancellationDate));
			}
		}
	}
	public class CancelLoanResponseBodyType {
		public BasicTypesService.OperationSuccessType operationSuccessType;
		private transient String[] operationSuccessType_type_info = new String[]{'operationSuccessType',s_ns0,'OperationSuccessType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'operationSuccessType'};
		public CancelLoanResponseBodyType(){
		}
		public CancelLoanResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode operationSuccessTypeNode = responseNode.getChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(operationSuccessTypeNode == null){
				this.operationSuccessType = null;
			} else{
				BasicTypesService.OperationSuccessType operationSuccessTypeObj = new BasicTypesService.OperationSuccessType(operationSuccessTypeNode);
				nodesParsed.add(operationSuccessTypeNode);
				this.operationSuccessType = operationSuccessTypeObj;
			}
			//System.debug(this.operationSuccessType);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType operationSuccessTypeObj = this.operationSuccessType;
			Dom.XmlNode operationSuccessTypeNode = outerNode.addChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(operationSuccessTypeObj != null){
				operationSuccessTypeObj.populateXmlNode(operationSuccessTypeNode);
			}
		}
	}
	public class ChangeContractDataType {
		public Boolean isChosenIncreaseTargetSum;
		// Restriction enumeration: 
		public String newTargetAmount;
		public Boolean isChosenRateOptionChange;
		public Long newRateOptionCode;
		// Restriction enumeration: 
		public String monthDeposit;
		public Boolean subveneState;
		public String DIMAName;
		private transient String[] isChosenIncreaseTargetSum_type_info = new String[]{'isChosenIncreaseTargetSum',s_ns0,'BooleanFlagType','1','1','false'};
		private transient String[] newTargetAmount_type_info = new String[]{'newTargetAmount',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] isChosenRateOptionChange_type_info = new String[]{'isChosenRateOptionChange',s_ns0,'BooleanFlagType','1','1','false'};
		private transient String[] newRateOptionCode_type_info = new String[]{'newRateOptionCode',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] monthDeposit_type_info = new String[]{'monthDeposit',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] subveneState_type_info = new String[]{'subveneState',s_ns0,'BooleanFlagType','1','1','false'};
		private transient String[] DIMAName_type_info = new String[]{'DIMAName',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'isChosenIncreaseTargetSum','newTargetAmount','isChosenRateOptionChange','newRateOptionCode','monthDeposit','subveneState','DIMAName'};
		public ChangeContractDataType(){
		}
		public ChangeContractDataType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode isChosenIncreaseTargetSumNode = responseNode.getChildElement('isChosenIncreaseTargetSum', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.isChosenIncreaseTargetSum = (isChosenIncreaseTargetSumNode == null) ? null : Boolean.valueOf(isChosenIncreaseTargetSumNode.getText());
			nodesParsed.add(isChosenIncreaseTargetSumNode);
			//System.debug(this.isChosenIncreaseTargetSum);			
			DOM.XmlNode newTargetAmountNode = responseNode.getChildElement('newTargetAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.newTargetAmount = (newTargetAmountNode == null) ? null : newTargetAmountNode.getText();
			nodesParsed.add(newTargetAmountNode);
			//System.debug(this.newTargetAmount);			
			DOM.XmlNode isChosenRateOptionChangeNode = responseNode.getChildElement('isChosenRateOptionChange', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.isChosenRateOptionChange = (isChosenRateOptionChangeNode == null) ? null : Boolean.valueOf(isChosenRateOptionChangeNode.getText());
			nodesParsed.add(isChosenRateOptionChangeNode);
			//System.debug(this.isChosenRateOptionChange);			
			DOM.XmlNode newRateOptionCodeNode = responseNode.getChildElement('newRateOptionCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.newRateOptionCode = (newRateOptionCodeNode == null) ? null : Long.valueOf(newRateOptionCodeNode.getText());
			nodesParsed.add(newRateOptionCodeNode);
			//System.debug(this.newRateOptionCode);			
			DOM.XmlNode monthDepositNode = responseNode.getChildElement('monthDeposit', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.monthDeposit = (monthDepositNode == null) ? null : monthDepositNode.getText();
			nodesParsed.add(monthDepositNode);
			//System.debug(this.monthDeposit);			
			DOM.XmlNode subveneStateNode = responseNode.getChildElement('subveneState', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.subveneState = (subveneStateNode == null) ? null : Boolean.valueOf(subveneStateNode.getText());
			nodesParsed.add(subveneStateNode);
			//System.debug(this.subveneState);			
			DOM.XmlNode DIMANameNode = responseNode.getChildElement('DIMAName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.DIMAName = (DIMANameNode == null) ? null : DIMANameNode.getText();
			nodesParsed.add(DIMANameNode);
			//System.debug(this.DIMAName);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode isChosenIncreaseTargetSumNode = outerNode.addChildElement('isChosenIncreaseTargetSum', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.isChosenIncreaseTargetSum != null){
				isChosenIncreaseTargetSumNode.addTextNode(String.valueOf(this.isChosenIncreaseTargetSum));
			}
			Dom.XmlNode newTargetAmountNode = outerNode.addChildElement('newTargetAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.newTargetAmount != null){
				newTargetAmountNode.addTextNode(this.newTargetAmount);
			}
			Dom.XmlNode isChosenRateOptionChangeNode = outerNode.addChildElement('isChosenRateOptionChange', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.isChosenRateOptionChange != null){
				isChosenRateOptionChangeNode.addTextNode(String.valueOf(this.isChosenRateOptionChange));
			}
			Dom.XmlNode newRateOptionCodeNode = outerNode.addChildElement('newRateOptionCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.newRateOptionCode != null){
				newRateOptionCodeNode.addTextNode(String.valueOf(this.newRateOptionCode));
			}
			Dom.XmlNode monthDepositNode = outerNode.addChildElement('monthDeposit', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.monthDeposit != null){
				monthDepositNode.addTextNode(this.monthDeposit);
			}
			Dom.XmlNode subveneStateNode = outerNode.addChildElement('subveneState', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.subveneState != null){
				subveneStateNode.addTextNode(String.valueOf(this.subveneState));
			}
			Dom.XmlNode DIMANameNode = outerNode.addChildElement('DIMAName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			DIMANameNode.addTextNode((this.DIMAName == null) ? '' : this.DIMAName);
		}
	}
	public class CheckContractForLoanBodyType {
		public LoanServiceDataTypes.ListOfContractsType contracts;
		public Long processingType;
		private transient String[] contracts_type_info = new String[]{'contracts',s_ns0,'ListOfContractsType','1','1','false'};
		private transient String[] processingType_type_info = new String[]{'processingType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'contracts','processingType'};
		public CheckContractForLoanBodyType(){
		}
		public CheckContractForLoanBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode contractsNode = responseNode.getChildElement('contracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(contractsNode == null){
				this.contracts = null;
			} else{
				LoanServiceDataTypes.ListOfContractsType contractsObj = new LoanServiceDataTypes.ListOfContractsType(contractsNode);
				nodesParsed.add(contractsNode);
				this.contracts = contractsObj;
			}
			//System.debug(this.contracts);			
			DOM.XmlNode processingTypeNode = responseNode.getChildElement('processingType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.processingType = (processingTypeNode == null) ? null : Long.valueOf(processingTypeNode.getText());
			nodesParsed.add(processingTypeNode);
			//System.debug(this.processingType);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ListOfContractsType contractsObj = this.contracts;
			Dom.XmlNode contractsNode = outerNode.addChildElement('contracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(contractsObj != null){
				contractsObj.populateXmlNode(contractsNode);
			}
			Dom.XmlNode processingTypeNode = outerNode.addChildElement('processingType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.processingType != null){
				processingTypeNode.addTextNode(String.valueOf(this.processingType));
			}
		}
	}
	public class CheckContractForLoanResponseBodyType {
		public LoanServiceDataTypes.ListOfResponseContractsType contracts;
		private transient String[] contracts_type_info = new String[]{'contracts',s_ns0,'ListOfResponseContractsType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'contracts'};
		public CheckContractForLoanResponseBodyType(){
		}
		public CheckContractForLoanResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode contractsNode = responseNode.getChildElement('contracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(contractsNode == null){
				this.contracts = null;
			} else{
				LoanServiceDataTypes.ListOfResponseContractsType contractsObj = new LoanServiceDataTypes.ListOfResponseContractsType(contractsNode);
				nodesParsed.add(contractsNode);
				this.contracts = contractsObj;
			}
			//System.debug(this.contracts);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ListOfResponseContractsType contractsObj = this.contracts;
			Dom.XmlNode contractsNode = outerNode.addChildElement('contracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(contractsObj != null){
				contractsObj.populateXmlNode(contractsNode);
			}
		}
	}
	public class CheckLimitRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		public Long productType;
		// Restriction enumeration: 
		public String targetAmount;
		public LoanServiceDataTypes.ListOfRelationPersonsType listOfRelationPersons;
		public LoanServiceDataTypes.ListOfContractDataType listOfContractData;
		public BasicTypesService.AccountNumberType mediatorsProvAccNumber;
		public String opportunityId;
		public Long processingType;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','0','1','false'};
		private transient String[] productType_type_info = new String[]{'productType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] targetAmount_type_info = new String[]{'targetAmount',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] listOfRelationPersons_type_info = new String[]{'listOfRelationPersons',s_ns0,'ListOfRelationPersonsType','0','1','false'};
		private transient String[] listOfContractData_type_info = new String[]{'listOfContractData',s_ns0,'ListOfContractDataType','1','1','false'};
		private transient String[] mediatorsProvAccNumber_type_info = new String[]{'mediatorsProvAccNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] opportunityId_type_info = new String[]{'opportunityId',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] processingType_type_info = new String[]{'processingType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','productType','targetAmount','listOfRelationPersons','listOfContractData','mediatorsProvAccNumber','opportunityId','processingType'};
		public CheckLimitRequestBodyType(){
		}
		public CheckLimitRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode productTypeNode = responseNode.getChildElement('productType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.productType = (productTypeNode == null) ? null : Long.valueOf(productTypeNode.getText());
			nodesParsed.add(productTypeNode);
			//System.debug(this.productType);			
			DOM.XmlNode targetAmountNode = responseNode.getChildElement('targetAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.targetAmount = (targetAmountNode == null) ? null : targetAmountNode.getText();
			nodesParsed.add(targetAmountNode);
			//System.debug(this.targetAmount);			
			DOM.XmlNode listOfRelationPersonsNode = responseNode.getChildElement('listOfRelationPersons', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfRelationPersonsNode == null){
				this.listOfRelationPersons = null;
			} else{
				LoanServiceDataTypes.ListOfRelationPersonsType listOfRelationPersonsObj = new LoanServiceDataTypes.ListOfRelationPersonsType(listOfRelationPersonsNode);
				nodesParsed.add(listOfRelationPersonsNode);
				this.listOfRelationPersons = listOfRelationPersonsObj;
			}
			//System.debug(this.listOfRelationPersons);			
			DOM.XmlNode listOfContractDataNode = responseNode.getChildElement('listOfContractData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfContractDataNode == null){
				this.listOfContractData = null;
			} else{
				LoanServiceDataTypes.ListOfContractDataType listOfContractDataObj = new LoanServiceDataTypes.ListOfContractDataType(listOfContractDataNode);
				nodesParsed.add(listOfContractDataNode);
				this.listOfContractData = listOfContractDataObj;
			}
			//System.debug(this.listOfContractData);			
			DOM.XmlNode mediatorsProvAccNumberNode = responseNode.getChildElement('mediatorsProvAccNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(mediatorsProvAccNumberNode == null){
				this.mediatorsProvAccNumber = null;
			} else{
				BasicTypesService.AccountNumberType mediatorsProvAccNumberObj = new BasicTypesService.AccountNumberType(mediatorsProvAccNumberNode);
				nodesParsed.add(mediatorsProvAccNumberNode);
				this.mediatorsProvAccNumber = mediatorsProvAccNumberObj;
			}
			//System.debug(this.mediatorsProvAccNumber);			
			DOM.XmlNode opportunityIdNode = responseNode.getChildElement('opportunityId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.opportunityId = (opportunityIdNode == null) ? null : opportunityIdNode.getText();
			nodesParsed.add(opportunityIdNode);
			//System.debug(this.opportunityId);			
			DOM.XmlNode processingTypeNode = responseNode.getChildElement('processingType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.processingType = (processingTypeNode == null) ? null : Long.valueOf(processingTypeNode.getText());
			nodesParsed.add(processingTypeNode);
			//System.debug(this.processingType);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode productTypeNode = outerNode.addChildElement('productType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			productTypeNode.addTextNode((this.productType == null) ? '' : String.valueOf(this.productType));
			Dom.XmlNode targetAmountNode = outerNode.addChildElement('targetAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.targetAmount != null){
				targetAmountNode.addTextNode(this.targetAmount);
			}
			
			LoanServiceDataTypes.ListOfRelationPersonsType listOfRelationPersonsObj = this.listOfRelationPersons;
			Dom.XmlNode listOfRelationPersonsNode = outerNode.addChildElement('listOfRelationPersons', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfRelationPersonsObj != null){
				listOfRelationPersonsObj.populateXmlNode(listOfRelationPersonsNode);
			}
			
			LoanServiceDataTypes.ListOfContractDataType listOfContractDataObj = this.listOfContractData;
			Dom.XmlNode listOfContractDataNode = outerNode.addChildElement('listOfContractData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfContractDataObj != null){
				listOfContractDataObj.populateXmlNode(listOfContractDataNode);
			}
			
			BasicTypesService.AccountNumberType mediatorsProvAccNumberObj = this.mediatorsProvAccNumber;
			Dom.XmlNode mediatorsProvAccNumberNode = outerNode.addChildElement('mediatorsProvAccNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(mediatorsProvAccNumberObj != null){
				mediatorsProvAccNumberObj.populateXmlNode(mediatorsProvAccNumberNode);
			}
			Dom.XmlNode opportunityIdNode = outerNode.addChildElement('opportunityId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			opportunityIdNode.addTextNode((this.opportunityId == null) ? '' : this.opportunityId);
			Dom.XmlNode processingTypeNode = outerNode.addChildElement('processingType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.processingType != null){
				processingTypeNode.addTextNode(String.valueOf(this.processingType));
			}
		}
	}
	public class CheckLimitResponseBodyType {
		public Boolean isLoanCreationApproved;
		public BasicTypesService.AccountNumberType loanIdNumber;
		public BasicTypesService.AccountNumberType contractIdNumber;
		public Long contractId;
		public LoanServiceDataTypes.ListOfClientRecordsType listOfClientRecords;
		private transient String[] isLoanCreationApproved_type_info = new String[]{'isLoanCreationApproved',s_ns0,'BooleanFlagType','0','1','false'};
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','0','1','false'};
		private transient String[] contractIdNumber_type_info = new String[]{'contractIdNumber',s_ns0,'AccountNumberType','0','1','false'};
		private transient String[] contractId_type_info = new String[]{'contractId',s_ns0,'CommonNumberType','0','1','false'};
		private transient String[] listOfClientRecords_type_info = new String[]{'listOfClientRecords',s_ns0,'ListOfClientRecordsType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'isLoanCreationApproved','loanIdNumber','contractIdNumber','contractId','listOfClientRecords'};
		public CheckLimitResponseBodyType(){
		}
		public CheckLimitResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode isLoanCreationApprovedNode = responseNode.getChildElement('isLoanCreationApproved', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.isLoanCreationApproved = (isLoanCreationApprovedNode == null) ? null : Boolean.valueOf(isLoanCreationApprovedNode.getText());
			nodesParsed.add(isLoanCreationApprovedNode);
			//System.debug(this.isLoanCreationApproved);			
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode contractIdNumberNode = responseNode.getChildElement('contractIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(contractIdNumberNode == null){
				this.contractIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType contractIdNumberObj = new BasicTypesService.AccountNumberType(contractIdNumberNode);
				nodesParsed.add(contractIdNumberNode);
				this.contractIdNumber = contractIdNumberObj;
			}
			//System.debug(this.contractIdNumber);			
			DOM.XmlNode contractIdNode = responseNode.getChildElement('contractId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.contractId = (contractIdNode == null) ? null : Long.valueOf(contractIdNode.getText());
			nodesParsed.add(contractIdNode);
			//System.debug(this.contractId);			
			DOM.XmlNode listOfClientRecordsNode = responseNode.getChildElement('listOfClientRecords', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfClientRecordsNode == null){
				this.listOfClientRecords = null;
			} else{
				LoanServiceDataTypes.ListOfClientRecordsType listOfClientRecordsObj = new LoanServiceDataTypes.ListOfClientRecordsType(listOfClientRecordsNode);
				nodesParsed.add(listOfClientRecordsNode);
				this.listOfClientRecords = listOfClientRecordsObj;
			}
			//System.debug(this.listOfClientRecords);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode isLoanCreationApprovedNode = outerNode.addChildElement('isLoanCreationApproved', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			isLoanCreationApprovedNode.addTextNode((this.isLoanCreationApproved == null) ? '' : String.valueOf(this.isLoanCreationApproved));
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			
			BasicTypesService.AccountNumberType contractIdNumberObj = this.contractIdNumber;
			Dom.XmlNode contractIdNumberNode = outerNode.addChildElement('contractIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(contractIdNumberObj != null){
				contractIdNumberObj.populateXmlNode(contractIdNumberNode);
			}
			Dom.XmlNode contractIdNode = outerNode.addChildElement('contractId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			contractIdNode.addTextNode((this.contractId == null) ? '' : String.valueOf(this.contractId));
			
			LoanServiceDataTypes.ListOfClientRecordsType listOfClientRecordsObj = this.listOfClientRecords;
			Dom.XmlNode listOfClientRecordsNode = outerNode.addChildElement('listOfClientRecords', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfClientRecordsObj != null){
				listOfClientRecordsObj.populateXmlNode(listOfClientRecordsNode);
			}
		}
	}
	public class ChildTypesDetailType {
		public Long age;
		private transient String[] age_type_info = new String[]{'age',s_ns0,'CommonNumberType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'age'};
		public ChildTypesDetailType(){
		}
		public ChildTypesDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode ageNode = responseNode.getChildElement('age', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.age = (ageNode == null) ? null : Long.valueOf(ageNode.getText());
			nodesParsed.add(ageNode);
			//System.debug(this.age);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode ageNode = outerNode.addChildElement('age', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.age != null){
				ageNode.addTextNode(String.valueOf(this.age));
			}
		}
	}
	public class ClientRecordDetailType {
		public Long personNumber;
		public BasicTypesService.AccountNumberType loanIdNumber;
		// Restriction enumeration: 
		public String involvement;
		public Long personRole;
		private transient String[] personNumber_type_info = new String[]{'personNumber',s_ns0,'PersonNumberType','1','1','false'};
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] involvement_type_info = new String[]{'involvement',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] personRole_type_info = new String[]{'personRole',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'personNumber','loanIdNumber','involvement','personRole'};
		public ClientRecordDetailType(){
		}
		public ClientRecordDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode personNumberNode = responseNode.getChildElement('personNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.personNumber = (personNumberNode == null) ? null : Long.valueOf(personNumberNode.getText());
			nodesParsed.add(personNumberNode);
			//System.debug(this.personNumber);			
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode involvementNode = responseNode.getChildElement('involvement', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.involvement = (involvementNode == null) ? null : involvementNode.getText();
			nodesParsed.add(involvementNode);
			//System.debug(this.involvement);			
			DOM.XmlNode personRoleNode = responseNode.getChildElement('personRole', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.personRole = (personRoleNode == null) ? null : Long.valueOf(personRoleNode.getText());
			nodesParsed.add(personRoleNode);
			//System.debug(this.personRole);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode personNumberNode = outerNode.addChildElement('personNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.personNumber != null){
				personNumberNode.addTextNode(String.valueOf(this.personNumber));
			}
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode involvementNode = outerNode.addChildElement('involvement', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.involvement != null){
				involvementNode.addTextNode(this.involvement);
			}
			Dom.XmlNode personRoleNode = outerNode.addChildElement('personRole', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.personRole != null){
				personRoleNode.addTextNode(String.valueOf(this.personRole));
			}
		}
	}
	public class CommitmentsDetailType {
		// Restriction enumeration: REPAYMENT_CONTRACT, CREDIT_CARD, NON-BANKING_REPAYMENT, MAINTENANCE, NON-INSTALLMENT_OBLIGATIONS_LIMITS, NON-INSTALLMENT_OBLIGATIONS_PAYMENTS, CONSUMER_CREDIT, REAL_ESTATE_LOAN, INDIVIDUAL_CREDIT, BUILDING_SAVINGS_LOAN, REVOLVING_CREDIT
		public String commitmentType;
		// Restriction enumeration: 
		public String value;
		public String description;
		public Long householdNumber;
		private transient String[] commitmentType_type_info = new String[]{'commitmentType',s_ns0,'CommitContractType','1','1','false'};
		private transient String[] value_type_info = new String[]{'value',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] description_type_info = new String[]{'description',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] householdNumber_type_info = new String[]{'householdNumber',s_ns0,'CommonNumberType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'commitmentType','value','description','householdNumber'};
		public CommitmentsDetailType(){
		}
		public CommitmentsDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode commitmentTypeNode = responseNode.getChildElement('commitmentType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.commitmentType = (commitmentTypeNode == null) ? null : commitmentTypeNode.getText();
			nodesParsed.add(commitmentTypeNode);
			//System.debug(this.commitmentType);			
			DOM.XmlNode valueNode = responseNode.getChildElement('value', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.value = (valueNode == null) ? null : valueNode.getText();
			nodesParsed.add(valueNode);
			//System.debug(this.value);			
			DOM.XmlNode descriptionNode = responseNode.getChildElement('description', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.description = (descriptionNode == null) ? null : descriptionNode.getText();
			nodesParsed.add(descriptionNode);
			//System.debug(this.description);			
			DOM.XmlNode householdNumberNode = responseNode.getChildElement('householdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.householdNumber = (householdNumberNode == null) ? null : Long.valueOf(householdNumberNode.getText());
			nodesParsed.add(householdNumberNode);
			//System.debug(this.householdNumber);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode commitmentTypeNode = outerNode.addChildElement('commitmentType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.commitmentType != null){
				commitmentTypeNode.addTextNode(this.commitmentType);
			}
			Dom.XmlNode valueNode = outerNode.addChildElement('value', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.value != null){
				valueNode.addTextNode(this.value);
			}
			Dom.XmlNode descriptionNode = outerNode.addChildElement('description', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			descriptionNode.addTextNode((this.description == null) ? '' : this.description);
			Dom.XmlNode householdNumberNode = outerNode.addChildElement('householdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			householdNumberNode.addTextNode((this.householdNumber == null) ? '' : String.valueOf(this.householdNumber));
		}
	}
	public class ContractAttributesDetailType {
		public Long contractId;
		// Restriction enumeration: 
		public String interimLoanMonthlyRate;
		// Restriction enumeration: 
		public String loanMonthlyRate;
		// Restriction enumeration: 
		public String monthDeposit;
		private transient String[] contractId_type_info = new String[]{'contractId',s_ns0,'CommonNumberType','0','1','false'};
		private transient String[] interimLoanMonthlyRate_type_info = new String[]{'interimLoanMonthlyRate',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] loanMonthlyRate_type_info = new String[]{'loanMonthlyRate',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] monthDeposit_type_info = new String[]{'monthDeposit',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'contractId','interimLoanMonthlyRate','loanMonthlyRate','monthDeposit'};
		public ContractAttributesDetailType(){
		}
		public ContractAttributesDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode contractIdNode = responseNode.getChildElement('contractId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.contractId = (contractIdNode == null) ? null : Long.valueOf(contractIdNode.getText());
			nodesParsed.add(contractIdNode);
			//System.debug(this.contractId);			
			DOM.XmlNode interimLoanMonthlyRateNode = responseNode.getChildElement('interimLoanMonthlyRate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.interimLoanMonthlyRate = (interimLoanMonthlyRateNode == null) ? null : interimLoanMonthlyRateNode.getText();
			nodesParsed.add(interimLoanMonthlyRateNode);
			//System.debug(this.interimLoanMonthlyRate);			
			DOM.XmlNode loanMonthlyRateNode = responseNode.getChildElement('loanMonthlyRate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.loanMonthlyRate = (loanMonthlyRateNode == null) ? null : loanMonthlyRateNode.getText();
			nodesParsed.add(loanMonthlyRateNode);
			//System.debug(this.loanMonthlyRate);			
			DOM.XmlNode monthDepositNode = responseNode.getChildElement('monthDeposit', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.monthDeposit = (monthDepositNode == null) ? null : monthDepositNode.getText();
			nodesParsed.add(monthDepositNode);
			//System.debug(this.monthDeposit);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode contractIdNode = outerNode.addChildElement('contractId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			contractIdNode.addTextNode((this.contractId == null) ? '' : String.valueOf(this.contractId));
			Dom.XmlNode interimLoanMonthlyRateNode = outerNode.addChildElement('interimLoanMonthlyRate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			interimLoanMonthlyRateNode.addTextNode((this.interimLoanMonthlyRate == null) ? '' : this.interimLoanMonthlyRate);
			Dom.XmlNode loanMonthlyRateNode = outerNode.addChildElement('loanMonthlyRate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			loanMonthlyRateNode.addTextNode((this.loanMonthlyRate == null) ? '' : this.loanMonthlyRate);
			Dom.XmlNode monthDepositNode = outerNode.addChildElement('monthDeposit', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			monthDepositNode.addTextNode((this.monthDeposit == null) ? '' : this.monthDeposit);
		}
	}
	public class ContractDataDetailType {
		public Long contractId;
		public Long bridgeLoanProductType;
		// Restriction enumeration: 
		public String targetAmount;
		public LoanServiceDataTypes.NewContractDataType newContractData;
		public LoanServiceDataTypes.ChangeContractDataType changeContractData;
		private transient String[] contractId_type_info = new String[]{'contractId',s_ns0,'CommonNumberType','0','1','false'};
		private transient String[] bridgeLoanProductType_type_info = new String[]{'bridgeLoanProductType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] targetAmount_type_info = new String[]{'targetAmount',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] newContractData_type_info = new String[]{'newContractData',s_ns0,'NewContractDataType','0','1','false'};
		private transient String[] changeContractData_type_info = new String[]{'changeContractData',s_ns0,'ChangeContractDataType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'contractId','bridgeLoanProductType','targetAmount','newContractData','changeContractData'};
		public ContractDataDetailType(){
		}
		public ContractDataDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode contractIdNode = responseNode.getChildElement('contractId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.contractId = (contractIdNode == null) ? null : Long.valueOf(contractIdNode.getText());
			nodesParsed.add(contractIdNode);
			//System.debug(this.contractId);			
			DOM.XmlNode bridgeLoanProductTypeNode = responseNode.getChildElement('bridgeLoanProductType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.bridgeLoanProductType = (bridgeLoanProductTypeNode == null) ? null : Long.valueOf(bridgeLoanProductTypeNode.getText());
			nodesParsed.add(bridgeLoanProductTypeNode);
			//System.debug(this.bridgeLoanProductType);			
			DOM.XmlNode targetAmountNode = responseNode.getChildElement('targetAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.targetAmount = (targetAmountNode == null) ? null : targetAmountNode.getText();
			nodesParsed.add(targetAmountNode);
			//System.debug(this.targetAmount);			
			DOM.XmlNode newContractDataNode = responseNode.getChildElement('newContractData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(newContractDataNode == null){
				this.newContractData = null;
			} else{
				LoanServiceDataTypes.NewContractDataType newContractDataObj = new LoanServiceDataTypes.NewContractDataType(newContractDataNode);
				nodesParsed.add(newContractDataNode);
				this.newContractData = newContractDataObj;
			}
			//System.debug(this.newContractData);			
			DOM.XmlNode changeContractDataNode = responseNode.getChildElement('changeContractData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(changeContractDataNode == null){
				this.changeContractData = null;
			} else{
				LoanServiceDataTypes.ChangeContractDataType changeContractDataObj = new LoanServiceDataTypes.ChangeContractDataType(changeContractDataNode);
				nodesParsed.add(changeContractDataNode);
				this.changeContractData = changeContractDataObj;
			}
			//System.debug(this.changeContractData);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode contractIdNode = outerNode.addChildElement('contractId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			contractIdNode.addTextNode((this.contractId == null) ? '' : String.valueOf(this.contractId));
			Dom.XmlNode bridgeLoanProductTypeNode = outerNode.addChildElement('bridgeLoanProductType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			bridgeLoanProductTypeNode.addTextNode((this.bridgeLoanProductType == null) ? '' : String.valueOf(this.bridgeLoanProductType));
			Dom.XmlNode targetAmountNode = outerNode.addChildElement('targetAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			targetAmountNode.addTextNode((this.targetAmount == null) ? '' : this.targetAmount);
			
			LoanServiceDataTypes.NewContractDataType newContractDataObj = this.newContractData;
			Dom.XmlNode newContractDataNode = outerNode.addChildElement('newContractData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(newContractDataObj != null){
				newContractDataObj.populateXmlNode(newContractDataNode);
			}
			
			LoanServiceDataTypes.ChangeContractDataType changeContractDataObj = this.changeContractData;
			Dom.XmlNode changeContractDataNode = outerNode.addChildElement('changeContractData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(changeContractDataObj != null){
				changeContractDataObj.populateXmlNode(changeContractDataNode);
			}
		}
	}
	public class CreditWorthinessDetailType {
		public Long personNumber;
		public Long contractType;
		public String employerPostalCode;
		public String employerICO;
		public Long idCardCheckNumber;
		// Restriction enumeration: 
		public Date idCardIssueDate;
		public Long housingType;
		public Long profession;
		public Long housingLenght;
		// Restriction enumeration: 
		public Date occupationStartDate;
		public Long education;
		public Long sizeOfHousehold;
		// Restriction enumeration: 
		public String totalMonthlyCommitment;
		// Restriction enumeration: 
		public String netMonthlyIncome;
		public LoanServiceDataTypes.ListOfChildTypesType listOfChildTypes;
		public Long maritalStatus;
		public Long householdNumber;
		// Restriction enumeration: 
		public String declaredExpenses;
		public Long incomeCountry;
		public String incomeCurrency;
		private transient String[] personNumber_type_info = new String[]{'personNumber',s_ns0,'PersonNumberType','1','1','false'};
		private transient String[] contractType_type_info = new String[]{'contractType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] employerPostalCode_type_info = new String[]{'employerPostalCode',s_ns0,'PostCodeType','1','1','false'};
		private transient String[] employerICO_type_info = new String[]{'employerICO',s_ns0,'ICOType','0','1','false'};
		private transient String[] idCardCheckNumber_type_info = new String[]{'idCardCheckNumber',s_ns0,'CommonNumberType','0','1','false'};
		private transient String[] idCardIssueDate_type_info = new String[]{'idCardIssueDate',s_ns0,'CommonDateType','0','1','false'};
		private transient String[] housingType_type_info = new String[]{'housingType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] profession_type_info = new String[]{'profession',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] housingLenght_type_info = new String[]{'housingLenght',s_ns0,'NumberOfItemsType','1','1','false'};
		private transient String[] occupationStartDate_type_info = new String[]{'occupationStartDate',s_ns0,'CommonDateType','1','1','false'};
		private transient String[] education_type_info = new String[]{'education',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] sizeOfHousehold_type_info = new String[]{'sizeOfHousehold',s_ns0,'NumberOfItemsType','1','1','false'};
		private transient String[] totalMonthlyCommitment_type_info = new String[]{'totalMonthlyCommitment',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] netMonthlyIncome_type_info = new String[]{'netMonthlyIncome',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] listOfChildTypes_type_info = new String[]{'listOfChildTypes',s_ns0,'ListOfChildTypesType','0','1','false'};
		private transient String[] maritalStatus_type_info = new String[]{'maritalStatus',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] householdNumber_type_info = new String[]{'householdNumber',s_ns0,'CommonNumberType','0','1','false'};
		private transient String[] declaredExpenses_type_info = new String[]{'declaredExpenses',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] incomeCountry_type_info = new String[]{'incomeCountry',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] incomeCurrency_type_info = new String[]{'incomeCurrency',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'personNumber','contractType','employerPostalCode','employerICO','idCardCheckNumber','idCardIssueDate','housingType','profession','housingLenght','occupationStartDate','education','sizeOfHousehold','totalMonthlyCommitment','netMonthlyIncome','listOfChildTypes','maritalStatus','householdNumber','declaredExpenses','incomeCountry','incomeCurrency'};
		public CreditWorthinessDetailType(){
		}
		public CreditWorthinessDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode personNumberNode = responseNode.getChildElement('personNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.personNumber = (personNumberNode == null) ? null : Long.valueOf(personNumberNode.getText());
			nodesParsed.add(personNumberNode);
			//System.debug(this.personNumber);			
			DOM.XmlNode contractTypeNode = responseNode.getChildElement('contractType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.contractType = (contractTypeNode == null) ? null : Long.valueOf(contractTypeNode.getText());
			nodesParsed.add(contractTypeNode);
			//System.debug(this.contractType);			
			DOM.XmlNode employerPostalCodeNode = responseNode.getChildElement('employerPostalCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.employerPostalCode = (employerPostalCodeNode == null) ? null : employerPostalCodeNode.getText();
			nodesParsed.add(employerPostalCodeNode);
			//System.debug(this.employerPostalCode);			
			DOM.XmlNode employerICONode = responseNode.getChildElement('employerICO', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.employerICO = (employerICONode == null) ? null : employerICONode.getText();
			nodesParsed.add(employerICONode);
			//System.debug(this.employerICO);			
			DOM.XmlNode idCardCheckNumberNode = responseNode.getChildElement('idCardCheckNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.idCardCheckNumber = (idCardCheckNumberNode == null) ? null : Long.valueOf(idCardCheckNumberNode.getText());
			nodesParsed.add(idCardCheckNumberNode);
			//System.debug(this.idCardCheckNumber);			
			DOM.XmlNode idCardIssueDateNode = responseNode.getChildElement('idCardIssueDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.idCardIssueDate = (idCardIssueDateNode == null) ? null : Date.valueOf(idCardIssueDateNode.getText());
			nodesParsed.add(idCardIssueDateNode);
			//System.debug(this.idCardIssueDate);			
			DOM.XmlNode housingTypeNode = responseNode.getChildElement('housingType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.housingType = (housingTypeNode == null) ? null : Long.valueOf(housingTypeNode.getText());
			nodesParsed.add(housingTypeNode);
			//System.debug(this.housingType);			
			DOM.XmlNode professionNode = responseNode.getChildElement('profession', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.profession = (professionNode == null) ? null : Long.valueOf(professionNode.getText());
			nodesParsed.add(professionNode);
			//System.debug(this.profession);			
			DOM.XmlNode housingLenghtNode = responseNode.getChildElement('housingLenght', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.housingLenght = (housingLenghtNode == null) ? null : Long.valueOf(housingLenghtNode.getText());
			nodesParsed.add(housingLenghtNode);
			//System.debug(this.housingLenght);			
			DOM.XmlNode occupationStartDateNode = responseNode.getChildElement('occupationStartDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.occupationStartDate = (occupationStartDateNode == null) ? null : Date.valueOf(occupationStartDateNode.getText());
			nodesParsed.add(occupationStartDateNode);
			//System.debug(this.occupationStartDate);			
			DOM.XmlNode educationNode = responseNode.getChildElement('education', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.education = (educationNode == null) ? null : Long.valueOf(educationNode.getText());
			nodesParsed.add(educationNode);
			//System.debug(this.education);			
			DOM.XmlNode sizeOfHouseholdNode = responseNode.getChildElement('sizeOfHousehold', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.sizeOfHousehold = (sizeOfHouseholdNode == null) ? null : Long.valueOf(sizeOfHouseholdNode.getText());
			nodesParsed.add(sizeOfHouseholdNode);
			//System.debug(this.sizeOfHousehold);			
			DOM.XmlNode totalMonthlyCommitmentNode = responseNode.getChildElement('totalMonthlyCommitment', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.totalMonthlyCommitment = (totalMonthlyCommitmentNode == null) ? null : totalMonthlyCommitmentNode.getText();
			nodesParsed.add(totalMonthlyCommitmentNode);
			//System.debug(this.totalMonthlyCommitment);			
			DOM.XmlNode netMonthlyIncomeNode = responseNode.getChildElement('netMonthlyIncome', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.netMonthlyIncome = (netMonthlyIncomeNode == null) ? null : netMonthlyIncomeNode.getText();
			nodesParsed.add(netMonthlyIncomeNode);
			//System.debug(this.netMonthlyIncome);			
			DOM.XmlNode listOfChildTypesNode = responseNode.getChildElement('listOfChildTypes', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfChildTypesNode == null){
				this.listOfChildTypes = null;
			} else{
				LoanServiceDataTypes.ListOfChildTypesType listOfChildTypesObj = new LoanServiceDataTypes.ListOfChildTypesType(listOfChildTypesNode);
				nodesParsed.add(listOfChildTypesNode);
				this.listOfChildTypes = listOfChildTypesObj;
			}
			//System.debug(this.listOfChildTypes);			
			DOM.XmlNode maritalStatusNode = responseNode.getChildElement('maritalStatus', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.maritalStatus = (maritalStatusNode == null) ? null : Long.valueOf(maritalStatusNode.getText());
			nodesParsed.add(maritalStatusNode);
			//System.debug(this.maritalStatus);			
			DOM.XmlNode householdNumberNode = responseNode.getChildElement('householdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.householdNumber = (householdNumberNode == null) ? null : Long.valueOf(householdNumberNode.getText());
			nodesParsed.add(householdNumberNode);
			//System.debug(this.householdNumber);			
			DOM.XmlNode declaredExpensesNode = responseNode.getChildElement('declaredExpenses', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.declaredExpenses = (declaredExpensesNode == null) ? null : declaredExpensesNode.getText();
			nodesParsed.add(declaredExpensesNode);
			//System.debug(this.declaredExpenses);			
			DOM.XmlNode incomeCountryNode = responseNode.getChildElement('incomeCountry', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.incomeCountry = (incomeCountryNode == null) ? null : Long.valueOf(incomeCountryNode.getText());
			nodesParsed.add(incomeCountryNode);
			//System.debug(this.incomeCountry);			
			DOM.XmlNode incomeCurrencyNode = responseNode.getChildElement('incomeCurrency', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.incomeCurrency = (incomeCurrencyNode == null) ? null : incomeCurrencyNode.getText();
			nodesParsed.add(incomeCurrencyNode);
			//System.debug(this.incomeCurrency);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode personNumberNode = outerNode.addChildElement('personNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.personNumber != null){
				personNumberNode.addTextNode(String.valueOf(this.personNumber));
			}
			Dom.XmlNode contractTypeNode = outerNode.addChildElement('contractType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.contractType != null){
				contractTypeNode.addTextNode(String.valueOf(this.contractType));
			}
			Dom.XmlNode employerPostalCodeNode = outerNode.addChildElement('employerPostalCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.employerPostalCode != null){
				employerPostalCodeNode.addTextNode(this.employerPostalCode);
			}
			Dom.XmlNode employerICONode = outerNode.addChildElement('employerICO', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			employerICONode.addTextNode((this.employerICO == null) ? '' : this.employerICO);
			Dom.XmlNode idCardCheckNumberNode = outerNode.addChildElement('idCardCheckNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			idCardCheckNumberNode.addTextNode((this.idCardCheckNumber == null) ? '' : String.valueOf(this.idCardCheckNumber));
			Dom.XmlNode idCardIssueDateNode = outerNode.addChildElement('idCardIssueDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			idCardIssueDateNode.addTextNode((this.idCardIssueDate == null) ? '' : String.valueOf(this.idCardIssueDate));
			Dom.XmlNode housingTypeNode = outerNode.addChildElement('housingType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.housingType != null){
				housingTypeNode.addTextNode(String.valueOf(this.housingType));
			}
			Dom.XmlNode professionNode = outerNode.addChildElement('profession', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.profession != null){
				professionNode.addTextNode(String.valueOf(this.profession));
			}
			Dom.XmlNode housingLenghtNode = outerNode.addChildElement('housingLenght', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.housingLenght != null){
				housingLenghtNode.addTextNode(String.valueOf(this.housingLenght));
			}
			Dom.XmlNode occupationStartDateNode = outerNode.addChildElement('occupationStartDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.occupationStartDate != null){
				occupationStartDateNode.addTextNode(String.valueOf(this.occupationStartDate));
			}
			Dom.XmlNode educationNode = outerNode.addChildElement('education', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.education != null){
				educationNode.addTextNode(String.valueOf(this.education));
			}
			Dom.XmlNode sizeOfHouseholdNode = outerNode.addChildElement('sizeOfHousehold', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.sizeOfHousehold != null){
				sizeOfHouseholdNode.addTextNode(String.valueOf(this.sizeOfHousehold));
			}
			Dom.XmlNode totalMonthlyCommitmentNode = outerNode.addChildElement('totalMonthlyCommitment', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			totalMonthlyCommitmentNode.addTextNode((this.totalMonthlyCommitment == null) ? '' : this.totalMonthlyCommitment);
			Dom.XmlNode netMonthlyIncomeNode = outerNode.addChildElement('netMonthlyIncome', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.netMonthlyIncome != null){
				netMonthlyIncomeNode.addTextNode(this.netMonthlyIncome);
			}
			
			LoanServiceDataTypes.ListOfChildTypesType listOfChildTypesObj = this.listOfChildTypes;
			Dom.XmlNode listOfChildTypesNode = outerNode.addChildElement('listOfChildTypes', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfChildTypesObj != null){
				listOfChildTypesObj.populateXmlNode(listOfChildTypesNode);
			}
			Dom.XmlNode maritalStatusNode = outerNode.addChildElement('maritalStatus', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			maritalStatusNode.addTextNode((this.maritalStatus == null) ? '' : String.valueOf(this.maritalStatus));
			Dom.XmlNode householdNumberNode = outerNode.addChildElement('householdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			householdNumberNode.addTextNode((this.householdNumber == null) ? '' : String.valueOf(this.householdNumber));
			Dom.XmlNode declaredExpensesNode = outerNode.addChildElement('declaredExpenses', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			declaredExpensesNode.addTextNode((this.declaredExpenses == null) ? '' : this.declaredExpenses);
			Dom.XmlNode incomeCountryNode = outerNode.addChildElement('incomeCountry', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			incomeCountryNode.addTextNode((this.incomeCountry == null) ? '' : String.valueOf(this.incomeCountry));
			Dom.XmlNode incomeCurrencyNode = outerNode.addChildElement('incomeCurrency', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			incomeCurrencyNode.addTextNode((this.incomeCurrency == null) ? '' : this.incomeCurrency);
		}
	}
	public class CsProductsDetailType {
		public Long csProductCode;
		// Restriction enumeration: 
		public String value;
		private transient String[] csProductCode_type_info = new String[]{'csProductCode',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] value_type_info = new String[]{'value',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'csProductCode','value'};
		public CsProductsDetailType(){
		}
		public CsProductsDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode csProductCodeNode = responseNode.getChildElement('csProductCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.csProductCode = (csProductCodeNode == null) ? null : Long.valueOf(csProductCodeNode.getText());
			nodesParsed.add(csProductCodeNode);
			//System.debug(this.csProductCode);			
			DOM.XmlNode valueNode = responseNode.getChildElement('value', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.value = (valueNode == null) ? null : valueNode.getText();
			nodesParsed.add(valueNode);
			//System.debug(this.value);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode csProductCodeNode = outerNode.addChildElement('csProductCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.csProductCode != null){
				csProductCodeNode.addTextNode(String.valueOf(this.csProductCode));
			}
			Dom.XmlNode valueNode = outerNode.addChildElement('value', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			valueNode.addTextNode((this.value == null) ? '' : this.value);
		}
	}
	
	//Extends http://service.cmss.cz/loan/LoanService/v05/datatypes:PersonDetailType
	public class DebtorsItemType {
		public Long personType;
		public String firstName;
		public String lastName;
		public String companyName;
		private transient String[] personType_type_info = new String[]{'personType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] firstName_type_info = new String[]{'firstName',s_ns0,'FirstNameType','0','1','false'};
		private transient String[] lastName_type_info = new String[]{'lastName',s_ns0,'LastNameType','0','1','false'};
		private transient String[] companyName_type_info = new String[]{'companyName',s_ns0,'CompanyNameType','0','1','false'};
		public String globalId;
		public String email;
		public Long personRole;
		public String phoneNumber;
		private transient String[] globalId_type_info = new String[]{'globalId',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] email_type_info = new String[]{'email',s_ns0,'EmailType','1','1','false'};
		private transient String[] personRole_type_info = new String[]{'personRole',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] phoneNumber_type_info = new String[]{'phoneNumber',s_ns0,'PhoneNumberType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'personType','firstName','lastName','companyName','globalId','email','personRole','phoneNumber'};
		public DebtorsItemType(){
		}
		public DebtorsItemType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode personTypeNode = responseNode.getChildElement('personType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.personType = (personTypeNode == null) ? null : Long.valueOf(personTypeNode.getText());
			nodesParsed.add(personTypeNode);
			//System.debug(this.personType);			
			DOM.XmlNode firstNameNode = responseNode.getChildElement('firstName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.firstName = (firstNameNode == null) ? null : firstNameNode.getText();
			nodesParsed.add(firstNameNode);
			//System.debug(this.firstName);			
			DOM.XmlNode lastNameNode = responseNode.getChildElement('lastName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.lastName = (lastNameNode == null) ? null : lastNameNode.getText();
			nodesParsed.add(lastNameNode);
			//System.debug(this.lastName);			
			DOM.XmlNode companyNameNode = responseNode.getChildElement('companyName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.companyName = (companyNameNode == null) ? null : companyNameNode.getText();
			nodesParsed.add(companyNameNode);
			//System.debug(this.companyName);			
			DOM.XmlNode globalIdNode = responseNode.getChildElement('globalId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.globalId = (globalIdNode == null) ? null : globalIdNode.getText();
			nodesParsed.add(globalIdNode);
			//System.debug(this.globalId);			
			DOM.XmlNode emailNode = responseNode.getChildElement('email', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.email = (emailNode == null) ? null : emailNode.getText();
			nodesParsed.add(emailNode);
			//System.debug(this.email);			
			DOM.XmlNode personRoleNode = responseNode.getChildElement('personRole', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.personRole = (personRoleNode == null) ? null : Long.valueOf(personRoleNode.getText());
			nodesParsed.add(personRoleNode);
			//System.debug(this.personRole);			
			DOM.XmlNode phoneNumberNode = responseNode.getChildElement('phoneNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.phoneNumber = (phoneNumberNode == null) ? null : phoneNumberNode.getText();
			nodesParsed.add(phoneNumberNode);
			//System.debug(this.phoneNumber);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode personTypeNode = outerNode.addChildElement('personType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.personType != null){
				personTypeNode.addTextNode(String.valueOf(this.personType));
			}
			Dom.XmlNode firstNameNode = outerNode.addChildElement('firstName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			firstNameNode.addTextNode((this.firstName == null) ? '' : this.firstName);
			Dom.XmlNode lastNameNode = outerNode.addChildElement('lastName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			lastNameNode.addTextNode((this.lastName == null) ? '' : this.lastName);
			Dom.XmlNode companyNameNode = outerNode.addChildElement('companyName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			companyNameNode.addTextNode((this.companyName == null) ? '' : this.companyName);
			Dom.XmlNode globalIdNode = outerNode.addChildElement('globalId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.globalId != null){
				globalIdNode.addTextNode(this.globalId);
			}
			Dom.XmlNode emailNode = outerNode.addChildElement('email', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.email != null){
				emailNode.addTextNode(this.email);
			}
			Dom.XmlNode personRoleNode = outerNode.addChildElement('personRole', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.personRole != null){
				personRoleNode.addTextNode(String.valueOf(this.personRole));
			}
			Dom.XmlNode phoneNumberNode = outerNode.addChildElement('phoneNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			phoneNumberNode.addTextNode((this.phoneNumber == null) ? '' : this.phoneNumber);
		}
	}
	public class DocumentsItemType {
		public String phase;
		public Long number_x;
		public Long group_x;
		public String status;
		public String text;
		// Restriction enumeration: 
		public Date incomingDate;
		// Restriction enumeration: 
		public Date tillWhenDate;
		private transient String[] phase_type_info = new String[]{'phase',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] number_x_type_info = new String[]{'number',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] group_x_type_info = new String[]{'group',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] status_type_info = new String[]{'status',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] text_type_info = new String[]{'text',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] incomingDate_type_info = new String[]{'incomingDate',s_ns0,'CommonDateType','0','1','false'};
		private transient String[] tillWhenDate_type_info = new String[]{'tillWhenDate',s_ns0,'CommonDateType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'phase','number_x','group_x','status','text','incomingDate','tillWhenDate'};
		public DocumentsItemType(){
		}
		public DocumentsItemType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode phaseNode = responseNode.getChildElement('phase', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.phase = (phaseNode == null) ? null : phaseNode.getText();
			nodesParsed.add(phaseNode);
			//System.debug(this.phase);			
			DOM.XmlNode number_xNode = responseNode.getChildElement('number', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.number_x = (number_xNode == null) ? null : Long.valueOf(number_xNode.getText());
			nodesParsed.add(number_xNode);
			//System.debug(this.number_x);			
			DOM.XmlNode group_xNode = responseNode.getChildElement('group', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.group_x = (group_xNode == null) ? null : Long.valueOf(group_xNode.getText());
			nodesParsed.add(group_xNode);
			//System.debug(this.group_x);			
			DOM.XmlNode statusNode = responseNode.getChildElement('status', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.status = (statusNode == null) ? null : statusNode.getText();
			nodesParsed.add(statusNode);
			//System.debug(this.status);			
			DOM.XmlNode textNode = responseNode.getChildElement('text', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.text = (textNode == null) ? null : textNode.getText();
			nodesParsed.add(textNode);
			//System.debug(this.text);			
			DOM.XmlNode incomingDateNode = responseNode.getChildElement('incomingDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.incomingDate = (incomingDateNode == null) ? null : Date.valueOf(incomingDateNode.getText());
			nodesParsed.add(incomingDateNode);
			//System.debug(this.incomingDate);			
			DOM.XmlNode tillWhenDateNode = responseNode.getChildElement('tillWhenDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.tillWhenDate = (tillWhenDateNode == null) ? null : Date.valueOf(tillWhenDateNode.getText());
			nodesParsed.add(tillWhenDateNode);
			//System.debug(this.tillWhenDate);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode phaseNode = outerNode.addChildElement('phase', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			phaseNode.addTextNode((this.phase == null) ? '' : this.phase);
			Dom.XmlNode number_xNode = outerNode.addChildElement('number', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			number_xNode.addTextNode((this.number_x == null) ? '' : String.valueOf(this.number_x));
			Dom.XmlNode group_xNode = outerNode.addChildElement('group', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			group_xNode.addTextNode((this.group_x == null) ? '' : String.valueOf(this.group_x));
			Dom.XmlNode statusNode = outerNode.addChildElement('status', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			statusNode.addTextNode((this.status == null) ? '' : this.status);
			Dom.XmlNode textNode = outerNode.addChildElement('text', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			textNode.addTextNode((this.text == null) ? '' : this.text);
			Dom.XmlNode incomingDateNode = outerNode.addChildElement('incomingDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			incomingDateNode.addTextNode((this.incomingDate == null) ? '' : String.valueOf(this.incomingDate));
			Dom.XmlNode tillWhenDateNode = outerNode.addChildElement('tillWhenDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			tillWhenDateNode.addTextNode((this.tillWhenDate == null) ? '' : String.valueOf(this.tillWhenDate));
		}
	}
	
	//Warning: '<xsd:anyType>' element anyType has been converted to string in GenerateLoanPDFRequestBodyType
	public class GenerateLoanPDFRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		public LoanServiceDataTypes.ListOfSavingContractsType relatedSavingContracts;
		public LoanServiceDataTypes.ListOfInterimLoanContractsType relatedInterimLoanContracts;
		public LoanServiceDataTypes.ListOfDebtorsType listOfDebtors;
		public LoanServiceDataTypes.ListOfIndemnityType listOfIndemnity;
		public Long modelId;
		public LoanServiceDataTypes.ListOfProductIdsType listOfProductIds;
		// Restriction enumeration: 
		public String commission;
		public LoanServiceDataTypes.MediatorDetailType mediator;
		public Long activityType;
		public Boolean isExternalCompanyCoworker;
		public LoanServiceDataTypes.MediatorDetailType externalCompany;
		public String loanContract;
		public String applicationId;
		public String dataVersion;
		public LoanServiceDataTypes.SignerDetailType signer;
		public String docId;
		public BasicTypesService.AccountNumberType contractNumber;
		public String additionId;
		public Boolean invalidatePrevious;
		public String agenda;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] relatedSavingContracts_type_info = new String[]{'relatedSavingContracts',s_ns0,'ListOfSavingContractsType','0','1','false'};
		private transient String[] relatedInterimLoanContracts_type_info = new String[]{'relatedInterimLoanContracts',s_ns0,'ListOfInterimLoanContractsType','0','1','false'};
		private transient String[] listOfDebtors_type_info = new String[]{'listOfDebtors',s_ns0,'ListOfDebtorsType','1','1','false'};
		private transient String[] listOfIndemnity_type_info = new String[]{'listOfIndemnity',s_ns0,'ListOfIndemnityType','1','1','false'};
		private transient String[] modelId_type_info = new String[]{'modelId',s_ns0,'CommonNumberType','1','1','false'};
		private transient String[] listOfProductIds_type_info = new String[]{'listOfProductIds',s_ns0,'ListOfProductIdsType','1','1','false'};
		private transient String[] commission_type_info = new String[]{'commission',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] mediator_type_info = new String[]{'mediator',s_ns0,'MediatorDetailType','1','1','false'};
		private transient String[] activityType_type_info = new String[]{'activityType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] isExternalCompanyCoworker_type_info = new String[]{'isExternalCompanyCoworker',s_ns0,'BooleanFlagType','1','1','false'};
		private transient String[] externalCompany_type_info = new String[]{'externalCompany',s_ns0,'MediatorDetailType','0','1','false'};
		private transient String[] loanContract_type_info = new String[]{'loanContract',s_ns0,'anyType','1','1','false'};
		private transient String[] applicationId_type_info = new String[]{'applicationId',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] dataVersion_type_info = new String[]{'dataVersion',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] signer_type_info = new String[]{'signer',s_ns0,'SignerDetailType','1','1','false'};
		private transient String[] docId_type_info = new String[]{'docId',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] contractNumber_type_info = new String[]{'contractNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] additionId_type_info = new String[]{'additionId',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] invalidatePrevious_type_info = new String[]{'invalidatePrevious',s_ns0,'BooleanFlagType','0','1','false'};
		private transient String[] agenda_type_info = new String[]{'agenda',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','relatedSavingContracts','relatedInterimLoanContracts','listOfDebtors','listOfIndemnity','modelId','listOfProductIds','commission','mediator','activityType','isExternalCompanyCoworker','externalCompany','loanContract','applicationId','dataVersion','signer','docId','contractNumber','additionId','invalidatePrevious','agenda'};
		public GenerateLoanPDFRequestBodyType(){
		}
		public GenerateLoanPDFRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode relatedSavingContractsNode = responseNode.getChildElement('relatedSavingContracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(relatedSavingContractsNode == null){
				this.relatedSavingContracts = null;
			} else{
				LoanServiceDataTypes.ListOfSavingContractsType relatedSavingContractsObj = new LoanServiceDataTypes.ListOfSavingContractsType(relatedSavingContractsNode);
				nodesParsed.add(relatedSavingContractsNode);
				this.relatedSavingContracts = relatedSavingContractsObj;
			}
			//System.debug(this.relatedSavingContracts);			
			DOM.XmlNode relatedInterimLoanContractsNode = responseNode.getChildElement('relatedInterimLoanContracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(relatedInterimLoanContractsNode == null){
				this.relatedInterimLoanContracts = null;
			} else{
				LoanServiceDataTypes.ListOfInterimLoanContractsType relatedInterimLoanContractsObj = new LoanServiceDataTypes.ListOfInterimLoanContractsType(relatedInterimLoanContractsNode);
				nodesParsed.add(relatedInterimLoanContractsNode);
				this.relatedInterimLoanContracts = relatedInterimLoanContractsObj;
			}
			//System.debug(this.relatedInterimLoanContracts);			
			DOM.XmlNode listOfDebtorsNode = responseNode.getChildElement('listOfDebtors', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfDebtorsNode == null){
				this.listOfDebtors = null;
			} else{
				LoanServiceDataTypes.ListOfDebtorsType listOfDebtorsObj = new LoanServiceDataTypes.ListOfDebtorsType(listOfDebtorsNode);
				nodesParsed.add(listOfDebtorsNode);
				this.listOfDebtors = listOfDebtorsObj;
			}
			//System.debug(this.listOfDebtors);			
			DOM.XmlNode listOfIndemnityNode = responseNode.getChildElement('listOfIndemnity', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfIndemnityNode == null){
				this.listOfIndemnity = null;
			} else{
				LoanServiceDataTypes.ListOfIndemnityType listOfIndemnityObj = new LoanServiceDataTypes.ListOfIndemnityType(listOfIndemnityNode);
				nodesParsed.add(listOfIndemnityNode);
				this.listOfIndemnity = listOfIndemnityObj;
			}
			//System.debug(this.listOfIndemnity);			
			DOM.XmlNode modelIdNode = responseNode.getChildElement('modelId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.modelId = (modelIdNode == null) ? null : Long.valueOf(modelIdNode.getText());
			nodesParsed.add(modelIdNode);
			//System.debug(this.modelId);			
			DOM.XmlNode listOfProductIdsNode = responseNode.getChildElement('listOfProductIds', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfProductIdsNode == null){
				this.listOfProductIds = null;
			} else{
				LoanServiceDataTypes.ListOfProductIdsType listOfProductIdsObj = new LoanServiceDataTypes.ListOfProductIdsType(listOfProductIdsNode);
				nodesParsed.add(listOfProductIdsNode);
				this.listOfProductIds = listOfProductIdsObj;
			}
			//System.debug(this.listOfProductIds);			
			DOM.XmlNode commissionNode = responseNode.getChildElement('commission', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.commission = (commissionNode == null) ? null : commissionNode.getText();
			nodesParsed.add(commissionNode);
			//System.debug(this.commission);			
			DOM.XmlNode mediatorNode = responseNode.getChildElement('mediator', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(mediatorNode == null){
				this.mediator = null;
			} else{
				LoanServiceDataTypes.MediatorDetailType mediatorObj = new LoanServiceDataTypes.MediatorDetailType(mediatorNode);
				nodesParsed.add(mediatorNode);
				this.mediator = mediatorObj;
			}
			//System.debug(this.mediator);			
			DOM.XmlNode activityTypeNode = responseNode.getChildElement('activityType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.activityType = (activityTypeNode == null) ? null : Long.valueOf(activityTypeNode.getText());
			nodesParsed.add(activityTypeNode);
			//System.debug(this.activityType);			
			DOM.XmlNode isExternalCompanyCoworkerNode = responseNode.getChildElement('isExternalCompanyCoworker', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.isExternalCompanyCoworker = (isExternalCompanyCoworkerNode == null) ? null : Boolean.valueOf(isExternalCompanyCoworkerNode.getText());
			nodesParsed.add(isExternalCompanyCoworkerNode);
			//System.debug(this.isExternalCompanyCoworker);			
			DOM.XmlNode externalCompanyNode = responseNode.getChildElement('externalCompany', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(externalCompanyNode == null){
				this.externalCompany = null;
			} else{
				LoanServiceDataTypes.MediatorDetailType externalCompanyObj = new LoanServiceDataTypes.MediatorDetailType(externalCompanyNode);
				nodesParsed.add(externalCompanyNode);
				this.externalCompany = externalCompanyObj;
			}
			//System.debug(this.externalCompany);			
			DOM.XmlNode loanContractNode = responseNode.getChildElement('loanContract', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.loanContract = (loanContractNode == null) ? null : loanContractNode.getText();
			nodesParsed.add(loanContractNode);
			//System.debug(this.loanContract);			
			DOM.XmlNode applicationIdNode = responseNode.getChildElement('applicationId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.applicationId = (applicationIdNode == null) ? null : applicationIdNode.getText();
			nodesParsed.add(applicationIdNode);
			//System.debug(this.applicationId);			
			DOM.XmlNode dataVersionNode = responseNode.getChildElement('dataVersion', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.dataVersion = (dataVersionNode == null) ? null : dataVersionNode.getText();
			nodesParsed.add(dataVersionNode);
			//System.debug(this.dataVersion);			
			DOM.XmlNode signerNode = responseNode.getChildElement('signer', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(signerNode == null){
				this.signer = null;
			} else{
				LoanServiceDataTypes.SignerDetailType signerObj = new LoanServiceDataTypes.SignerDetailType(signerNode);
				nodesParsed.add(signerNode);
				this.signer = signerObj;
			}
			//System.debug(this.signer);			
			DOM.XmlNode docIdNode = responseNode.getChildElement('docId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.docId = (docIdNode == null) ? null : docIdNode.getText();
			nodesParsed.add(docIdNode);
			//System.debug(this.docId);			
			DOM.XmlNode contractNumberNode = responseNode.getChildElement('contractNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(contractNumberNode == null){
				this.contractNumber = null;
			} else{
				BasicTypesService.AccountNumberType contractNumberObj = new BasicTypesService.AccountNumberType(contractNumberNode);
				nodesParsed.add(contractNumberNode);
				this.contractNumber = contractNumberObj;
			}
			//System.debug(this.contractNumber);			
			DOM.XmlNode additionIdNode = responseNode.getChildElement('additionId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.additionId = (additionIdNode == null) ? null : additionIdNode.getText();
			nodesParsed.add(additionIdNode);
			//System.debug(this.additionId);			
			DOM.XmlNode invalidatePreviousNode = responseNode.getChildElement('invalidatePrevious', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.invalidatePrevious = (invalidatePreviousNode == null) ? null : Boolean.valueOf(invalidatePreviousNode.getText());
			nodesParsed.add(invalidatePreviousNode);
			//System.debug(this.invalidatePrevious);			
			DOM.XmlNode agendaNode = responseNode.getChildElement('agenda', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.agenda = (agendaNode == null) ? null : agendaNode.getText();
			nodesParsed.add(agendaNode);
			//System.debug(this.agenda);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			
			LoanServiceDataTypes.ListOfSavingContractsType relatedSavingContractsObj = this.relatedSavingContracts;
			Dom.XmlNode relatedSavingContractsNode = outerNode.addChildElement('relatedSavingContracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(relatedSavingContractsObj != null){
				relatedSavingContractsObj.populateXmlNode(relatedSavingContractsNode);
			}
			
			LoanServiceDataTypes.ListOfInterimLoanContractsType relatedInterimLoanContractsObj = this.relatedInterimLoanContracts;
			Dom.XmlNode relatedInterimLoanContractsNode = outerNode.addChildElement('relatedInterimLoanContracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(relatedInterimLoanContractsObj != null){
				relatedInterimLoanContractsObj.populateXmlNode(relatedInterimLoanContractsNode);
			}
			
			LoanServiceDataTypes.ListOfDebtorsType listOfDebtorsObj = this.listOfDebtors;
			Dom.XmlNode listOfDebtorsNode = outerNode.addChildElement('listOfDebtors', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfDebtorsObj != null){
				listOfDebtorsObj.populateXmlNode(listOfDebtorsNode);
			}
			
			LoanServiceDataTypes.ListOfIndemnityType listOfIndemnityObj = this.listOfIndemnity;
			Dom.XmlNode listOfIndemnityNode = outerNode.addChildElement('listOfIndemnity', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfIndemnityObj != null){
				listOfIndemnityObj.populateXmlNode(listOfIndemnityNode);
			}
			Dom.XmlNode modelIdNode = outerNode.addChildElement('modelId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.modelId != null){
				modelIdNode.addTextNode(String.valueOf(this.modelId));
			}
			
			LoanServiceDataTypes.ListOfProductIdsType listOfProductIdsObj = this.listOfProductIds;
			Dom.XmlNode listOfProductIdsNode = outerNode.addChildElement('listOfProductIds', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfProductIdsObj != null){
				listOfProductIdsObj.populateXmlNode(listOfProductIdsNode);
			}
			Dom.XmlNode commissionNode = outerNode.addChildElement('commission', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.commission != null){
				commissionNode.addTextNode(this.commission);
			}
			
			LoanServiceDataTypes.MediatorDetailType mediatorObj = this.mediator;
			Dom.XmlNode mediatorNode = outerNode.addChildElement('mediator', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(mediatorObj != null){
				mediatorObj.populateXmlNode(mediatorNode);
			}
			Dom.XmlNode activityTypeNode = outerNode.addChildElement('activityType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.activityType != null){
				activityTypeNode.addTextNode(String.valueOf(this.activityType));
			}
			Dom.XmlNode isExternalCompanyCoworkerNode = outerNode.addChildElement('isExternalCompanyCoworker', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.isExternalCompanyCoworker != null){
				isExternalCompanyCoworkerNode.addTextNode(String.valueOf(this.isExternalCompanyCoworker));
			}
			
			LoanServiceDataTypes.MediatorDetailType externalCompanyObj = this.externalCompany;
			Dom.XmlNode externalCompanyNode = outerNode.addChildElement('externalCompany', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(externalCompanyObj != null){
				externalCompanyObj.populateXmlNode(externalCompanyNode);
			}
			Dom.XmlNode loanContractNode = outerNode.addChildElement('loanContract', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.loanContract != null){
				loanContractNode.addTextNode(this.loanContract);
			}
			Dom.XmlNode applicationIdNode = outerNode.addChildElement('applicationId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.applicationId != null){
				applicationIdNode.addTextNode(this.applicationId);
			}
			Dom.XmlNode dataVersionNode = outerNode.addChildElement('dataVersion', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.dataVersion != null){
				dataVersionNode.addTextNode(this.dataVersion);
			}
			
			LoanServiceDataTypes.SignerDetailType signerObj = this.signer;
			Dom.XmlNode signerNode = outerNode.addChildElement('signer', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(signerObj != null){
				signerObj.populateXmlNode(signerNode);
			}
			Dom.XmlNode docIdNode = outerNode.addChildElement('docId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			docIdNode.addTextNode((this.docId == null) ? '' : this.docId);
			
			BasicTypesService.AccountNumberType contractNumberObj = this.contractNumber;
			Dom.XmlNode contractNumberNode = outerNode.addChildElement('contractNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(contractNumberObj != null){
				contractNumberObj.populateXmlNode(contractNumberNode);
			}
			Dom.XmlNode additionIdNode = outerNode.addChildElement('additionId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			additionIdNode.addTextNode((this.additionId == null) ? '' : this.additionId);
			Dom.XmlNode invalidatePreviousNode = outerNode.addChildElement('invalidatePrevious', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			invalidatePreviousNode.addTextNode((this.invalidatePrevious == null) ? '' : String.valueOf(this.invalidatePrevious));
			Dom.XmlNode agendaNode = outerNode.addChildElement('agenda', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			agendaNode.addTextNode((this.agenda == null) ? '' : this.agenda);
		}
	}
	public class GenerateLoanPDFResponseBodyType {
		public BasicTypesService.OperationSuccessType operationSuccessType;
		private transient String[] operationSuccessType_type_info = new String[]{'operationSuccessType',s_ns0,'OperationSuccessType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'operationSuccessType'};
		public GenerateLoanPDFResponseBodyType(){
		}
		public GenerateLoanPDFResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode operationSuccessTypeNode = responseNode.getChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(operationSuccessTypeNode == null){
				this.operationSuccessType = null;
			} else{
				BasicTypesService.OperationSuccessType operationSuccessTypeObj = new BasicTypesService.OperationSuccessType(operationSuccessTypeNode);
				nodesParsed.add(operationSuccessTypeNode);
				this.operationSuccessType = operationSuccessTypeObj;
			}
			//System.debug(this.operationSuccessType);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType operationSuccessTypeObj = this.operationSuccessType;
			Dom.XmlNode operationSuccessTypeNode = outerNode.addChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(operationSuccessTypeObj != null){
				operationSuccessTypeObj.populateXmlNode(operationSuccessTypeNode);
			}
		}
	}
	public class GetLoanDocumentsListRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		public Long phase;
		public Long status;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] phase_type_info = new String[]{'phase',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] status_type_info = new String[]{'status',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','phase','status'};
		public GetLoanDocumentsListRequestBodyType(){
		}
		public GetLoanDocumentsListRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode phaseNode = responseNode.getChildElement('phase', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.phase = (phaseNode == null) ? null : long.valueOf(phaseNode.getText());
			nodesParsed.add(phaseNode);
			//System.debug(this.phase);			
			DOM.XmlNode statusNode = responseNode.getChildElement('status', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.status = (statusNode == null) ? null : long.valueOf(statusNode.getText());
			nodesParsed.add(statusNode);
			//System.debug(this.status);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('dat:loanIdNumber', null, null);
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode phaseNode = outerNode.addChildElement('dat:phase',null, null);
			phaseNode.addTextNode((this.phase == null) ? '' : String.valueOf(this.phase));
			Dom.XmlNode statusNode = outerNode.addChildElement('dat:status', null, null);
			statusNode.addTextNode((this.status == null) ? '' : String.valueOf(this.status));
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
//Failed to find base class: http://service.cmss.cz/common/CommonMessage/v01:RequestMessage - Unable to create ApexClass for complexTypeQualifiedName: http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
  //Corresponding complexType was null.
  //Název parametru: complexType
	public class GetLoanDocumentsListRequestType {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader',s_ns0,'RequestHeader','1','1','false'};
		public LoanServiceDataTypes.GetLoanDocumentsListRequestBodyType requestBody;
		private transient String[] requestBody_type_info = new String[]{'requestBody',s_ns0,'GetLoanDocumentsListRequestBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader','requestBody'};
		public GetLoanDocumentsListRequestType(){
		}
		public GetLoanDocumentsListRequestType(CommonMessageService.RequestHeader requestHeader,LoanServiceDataTypes.GetLoanDocumentsListRequestBodyType requestBody){
			this.requestHeader = requestHeader;
			this.requestBody = requestBody;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			//System.assertEquals('getLoanDocumentsList', outerNode.getName());
			
			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('v01:requestHeader', null, null);
			if(requestHeaderObj != null){
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}
			
			LoanServiceDataTypes.GetLoanDocumentsListRequestBodyType requestBodyObj = this.requestBody;
			Dom.XmlNode requestBodyNode = outerNode.addChildElement('dat:requestBody', null, null);
			if(requestBodyObj != null){
				requestBodyObj.populateXmlNode(requestBodyNode);
			}
		}
	}
	public class GetLoanDocumentsListResponseBodyType {
		public LoanServiceDataTypes.ListOfDocumentsType listOfDocuments;
		private transient String[] listOfDocuments_type_info = new String[]{'listOfDocuments',s_ns0,'ListOfDocumentsType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'listOfDocuments'};
		public GetLoanDocumentsListResponseBodyType(){
		}
		public GetLoanDocumentsListResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode listOfDocumentsNode = responseNode.getChildElement('listOfDocuments', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfDocumentsNode == null){
				this.listOfDocuments = null;
			} else{
				LoanServiceDataTypes.ListOfDocumentsType listOfDocumentsObj = new LoanServiceDataTypes.ListOfDocumentsType(listOfDocumentsNode);
				nodesParsed.add(listOfDocumentsNode);
				this.listOfDocuments = listOfDocumentsObj;
			}
			//System.debug(this.listOfDocuments);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ListOfDocumentsType listOfDocumentsObj = this.listOfDocuments;
			Dom.XmlNode listOfDocumentsNode = outerNode.addChildElement('listOfDocuments', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfDocumentsObj != null){
				listOfDocumentsObj.populateXmlNode(listOfDocumentsNode);
			}
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
//Failed to find base class: http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage - Unable to create ApexClass for complexTypeQualifiedName: http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
  //Corresponding complexType was null.
  //Název parametru: complexType
	public class GetLoanDocumentsListResponseType {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public CommonMessageService.ResponseHeader responseHeader_GetLoanDocumentsListResponseType;
		private transient String[] responseHeader_GetLoanDocumentsListResponseType_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public LoanServiceDataTypes.GetLoanDocumentsListResponseBodyType responseBody;
		private transient String[] responseBody_type_info = new String[]{'responseBody',s_ns0,'GetLoanDocumentsListResponseBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader','responseHeader_GetLoanDocumentsListResponseType','responseBody'};
		public GetLoanDocumentsListResponseType(){
		}
		public GetLoanDocumentsListResponseType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('getLoanDocumentsListResponse', responseNode.getName());
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(responseHeaderNode == null){
				this.responseHeader = null;
			} else{
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			
			DOM.XmlNode responseHeader_GetLoanDocumentsListResponseTypeNode = responseNode.getChildElement('responseHeader_GetLoanDocumentsListResponseType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(responseHeader_GetLoanDocumentsListResponseTypeNode == null){
				this.responseHeader_GetLoanDocumentsListResponseType = null;
			} else{
				CommonMessageService.ResponseHeader responseHeader_GetLoanDocumentsListResponseTypeObj = new CommonMessageService.ResponseHeader(responseHeader_GetLoanDocumentsListResponseTypeNode);
				nodesParsed.add(responseHeader_GetLoanDocumentsListResponseTypeNode);
				this.responseHeader_GetLoanDocumentsListResponseType = responseHeader_GetLoanDocumentsListResponseTypeObj;
			}
			//System.debug(this.responseHeader_GetLoanDocumentsListResponseType);			
			DOM.XmlNode responseBodyNode = responseNode.getChildElement('responseBody', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(responseBodyNode == null){
				this.responseBody = null;
			} else{
				LoanServiceDataTypes.GetLoanDocumentsListResponseBodyType responseBodyObj = new LoanServiceDataTypes.GetLoanDocumentsListResponseBodyType(responseBodyNode);
				nodesParsed.add(responseBodyNode);
				this.responseBody = responseBodyObj;
			}
			//System.debug(this.responseBody);			
		}
	}
	public class IndemnityDetailType {
		public Long debtSecurityType;
		public Long debtSecuritySubtype;
		// Restriction enumeration: 
		public String realEstateValue;
		// Restriction enumeration: 
		public String maximumLoanPercentage;
		// Restriction enumeration: 
		public String maximumLoanKc;
		private transient String[] debtSecurityType_type_info = new String[]{'debtSecurityType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] debtSecuritySubtype_type_info = new String[]{'debtSecuritySubtype',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] realEstateValue_type_info = new String[]{'realEstateValue',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] maximumLoanPercentage_type_info = new String[]{'maximumLoanPercentage',s_ns0,'PercentageType','0','1','false'};
		private transient String[] maximumLoanKc_type_info = new String[]{'maximumLoanKc',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'debtSecurityType','debtSecuritySubtype','realEstateValue','maximumLoanPercentage','maximumLoanKc'};
		public IndemnityDetailType(){
		}
		public IndemnityDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode debtSecurityTypeNode = responseNode.getChildElement('debtSecurityType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.debtSecurityType = (debtSecurityTypeNode == null) ? null : Long.valueOf(debtSecurityTypeNode.getText());
			nodesParsed.add(debtSecurityTypeNode);
			//System.debug(this.debtSecurityType);			
			DOM.XmlNode debtSecuritySubtypeNode = responseNode.getChildElement('debtSecuritySubtype', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.debtSecuritySubtype = (debtSecuritySubtypeNode == null) ? null : Long.valueOf(debtSecuritySubtypeNode.getText());
			nodesParsed.add(debtSecuritySubtypeNode);
			//System.debug(this.debtSecuritySubtype);			
			DOM.XmlNode realEstateValueNode = responseNode.getChildElement('realEstateValue', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.realEstateValue = (realEstateValueNode == null) ? null : realEstateValueNode.getText();
			nodesParsed.add(realEstateValueNode);
			//System.debug(this.realEstateValue);			
			DOM.XmlNode maximumLoanPercentageNode = responseNode.getChildElement('maximumLoanPercentage', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.maximumLoanPercentage = (maximumLoanPercentageNode == null) ? null : maximumLoanPercentageNode.getText();
			nodesParsed.add(maximumLoanPercentageNode);
			//System.debug(this.maximumLoanPercentage);			
			DOM.XmlNode maximumLoanKcNode = responseNode.getChildElement('maximumLoanKc', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.maximumLoanKc = (maximumLoanKcNode == null) ? null : maximumLoanKcNode.getText();
			nodesParsed.add(maximumLoanKcNode);
			//System.debug(this.maximumLoanKc);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode debtSecurityTypeNode = outerNode.addChildElement('debtSecurityType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.debtSecurityType != null){
				debtSecurityTypeNode.addTextNode(String.valueOf(this.debtSecurityType));
			}
			Dom.XmlNode debtSecuritySubtypeNode = outerNode.addChildElement('debtSecuritySubtype', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.debtSecuritySubtype != null){
				debtSecuritySubtypeNode.addTextNode(String.valueOf(this.debtSecuritySubtype));
			}
			Dom.XmlNode realEstateValueNode = outerNode.addChildElement('realEstateValue', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			realEstateValueNode.addTextNode((this.realEstateValue == null) ? '' : this.realEstateValue);
			Dom.XmlNode maximumLoanPercentageNode = outerNode.addChildElement('maximumLoanPercentage', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			maximumLoanPercentageNode.addTextNode((this.maximumLoanPercentage == null) ? '' : this.maximumLoanPercentage);
			Dom.XmlNode maximumLoanKcNode = outerNode.addChildElement('maximumLoanKc', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			maximumLoanKcNode.addTextNode((this.maximumLoanKc == null) ? '' : this.maximumLoanKc);
		}
	}
	public class ListOfAccountsItemType {
		public BasicTypesService.AccountNumberType accountNumber;
		public Long accountType;
		public String VOPVersion;
		private transient String[] accountNumber_type_info = new String[]{'accountNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] accountType_type_info = new String[]{'accountType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] VOPVersion_type_info = new String[]{'VOPVersion',s_ns0,'VOPVersionType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'accountNumber','accountType','VOPVersion'};
		public ListOfAccountsItemType(){
		}
		public ListOfAccountsItemType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode accountNumberNode = responseNode.getChildElement('accountNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(accountNumberNode == null){
				this.accountNumber = null;
			} else{
				BasicTypesService.AccountNumberType accountNumberObj = new BasicTypesService.AccountNumberType(accountNumberNode);
				nodesParsed.add(accountNumberNode);
				this.accountNumber = accountNumberObj;
			}
			//System.debug(this.accountNumber);			
			DOM.XmlNode accountTypeNode = responseNode.getChildElement('accountType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.accountType = (accountTypeNode == null) ? null : Long.valueOf(accountTypeNode.getText());
			nodesParsed.add(accountTypeNode);
			//System.debug(this.accountType);			
			DOM.XmlNode VOPVersionNode = responseNode.getChildElement('VOPVersion', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.VOPVersion = (VOPVersionNode == null) ? null : VOPVersionNode.getText();
			nodesParsed.add(VOPVersionNode);
			//System.debug(this.VOPVersion);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType accountNumberObj = this.accountNumber;
			Dom.XmlNode accountNumberNode = outerNode.addChildElement('accountNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(accountNumberObj != null){
				accountNumberObj.populateXmlNode(accountNumberNode);
			}
			Dom.XmlNode accountTypeNode = outerNode.addChildElement('accountType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.accountType != null){
				accountTypeNode.addTextNode(String.valueOf(this.accountType));
			}
			Dom.XmlNode VOPVersionNode = outerNode.addChildElement('VOPVersion', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.VOPVersion != null){
				VOPVersionNode.addTextNode(this.VOPVersion);
			}
		}
	}
	public class ListOfAccountsType {
		public LoanServiceDataTypes.ListOfAccountsItemType[] listOfAccountsItem;
		private transient String[] listOfAccountsItem_type_info = new String[]{'listOfAccountsItem',s_ns0,'ListOfAccountsItemType','0','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'listOfAccountsItem'};
		public ListOfAccountsType(){
		}
		public ListOfAccountsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] listOfAccountsItemChildren = responseNode.getChildElements();
			LoanServiceDataTypes.ListOfAccountsItemType[] listOfAccountsItemList = new List<LoanServiceDataTypes.ListOfAccountsItemType>();
			if(listOfAccountsItemChildren == null || listOfAccountsItemChildren.size() == 0){
				this.listOfAccountsItem = null;
			} else{
				for(DOM.XmlNode childNode : listOfAccountsItemChildren){
					if(childNode.GetName() == 'listOfAccountsItem'){
						LoanServiceDataTypes.ListOfAccountsItemType Obj = new LoanServiceDataTypes.ListOfAccountsItemType(childNode);
						listOfAccountsItemList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.listOfAccountsItem = listOfAccountsItemList;
			}
			//System.debug(this.listOfAccountsItem);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ListOfAccountsItemType[] listOfAccountsItemObj = this.listOfAccountsItem;
			if(listOfAccountsItemObj != null){
				for(LoanServiceDataTypes.ListOfAccountsItemType element: listOfAccountsItemObj){
					Dom.XmlNode listOfAccountsItemNode = outerNode.addChildElement('listOfAccountsItem', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(listOfAccountsItemNode);
				}
			}			
		}
	}
	public class ListOfChildTypesType {
		public LoanServiceDataTypes.ChildTypesDetailType[] childTypesDetail;
		private transient String[] childTypesDetail_type_info = new String[]{'childTypesDetail',s_ns0,'ChildTypesDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'childTypesDetail'};
		public ListOfChildTypesType(){
		}
		public ListOfChildTypesType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] childTypesDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.ChildTypesDetailType[] childTypesDetailList = new List<LoanServiceDataTypes.ChildTypesDetailType>();
			if(childTypesDetailChildren == null || childTypesDetailChildren.size() == 0){
				this.childTypesDetail = null;
			} else{
				for(DOM.XmlNode childNode : childTypesDetailChildren){
					if(childNode.GetName() == 'childTypesDetail'){
						LoanServiceDataTypes.ChildTypesDetailType Obj = new LoanServiceDataTypes.ChildTypesDetailType(childNode);
						childTypesDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.childTypesDetail = childTypesDetailList;
			}
			//System.debug(this.childTypesDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ChildTypesDetailType[] childTypesDetailObj = this.childTypesDetail;
			if(childTypesDetailObj != null){
				for(LoanServiceDataTypes.ChildTypesDetailType element: childTypesDetailObj){
					Dom.XmlNode childTypesDetailNode = outerNode.addChildElement('childTypesDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(childTypesDetailNode);
				}
			}			
		}
	}
	public class ListOfClientRecordsType {
		public LoanServiceDataTypes.ClientRecordDetailType[] clientRecordDetail;
		private transient String[] clientRecordDetail_type_info = new String[]{'clientRecordDetail',s_ns0,'ClientRecordDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'clientRecordDetail'};
		public ListOfClientRecordsType(){
		}
		public ListOfClientRecordsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] clientRecordDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.ClientRecordDetailType[] clientRecordDetailList = new List<LoanServiceDataTypes.ClientRecordDetailType>();
			if(clientRecordDetailChildren == null || clientRecordDetailChildren.size() == 0){
				this.clientRecordDetail = null;
			} else{
				for(DOM.XmlNode childNode : clientRecordDetailChildren){
					if(childNode.GetName() == 'clientRecordDetail'){
						LoanServiceDataTypes.ClientRecordDetailType Obj = new LoanServiceDataTypes.ClientRecordDetailType(childNode);
						clientRecordDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.clientRecordDetail = clientRecordDetailList;
			}
			//System.debug(this.clientRecordDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ClientRecordDetailType[] clientRecordDetailObj = this.clientRecordDetail;
			if(clientRecordDetailObj != null){
				for(LoanServiceDataTypes.ClientRecordDetailType element: clientRecordDetailObj){
					Dom.XmlNode clientRecordDetailNode = outerNode.addChildElement('clientRecordDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(clientRecordDetailNode);
				}
			}			
		}
	}
	public class ListOfCommitmentsType {
		public LoanServiceDataTypes.CommitmentsDetailType[] commitmentsDetail;
		private transient String[] commitmentsDetail_type_info = new String[]{'commitmentsDetail',s_ns0,'CommitmentsDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'commitmentsDetail'};
		public ListOfCommitmentsType(){
		}
		public ListOfCommitmentsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] commitmentsDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.CommitmentsDetailType[] commitmentsDetailList = new List<LoanServiceDataTypes.CommitmentsDetailType>();
			if(commitmentsDetailChildren == null || commitmentsDetailChildren.size() == 0){
				this.commitmentsDetail = null;
			} else{
				for(DOM.XmlNode childNode : commitmentsDetailChildren){
					if(childNode.GetName() == 'commitmentsDetail'){
						LoanServiceDataTypes.CommitmentsDetailType Obj = new LoanServiceDataTypes.CommitmentsDetailType(childNode);
						commitmentsDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.commitmentsDetail = commitmentsDetailList;
			}
			//System.debug(this.commitmentsDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.CommitmentsDetailType[] commitmentsDetailObj = this.commitmentsDetail;
			if(commitmentsDetailObj != null){
				for(LoanServiceDataTypes.CommitmentsDetailType element: commitmentsDetailObj){
					Dom.XmlNode commitmentsDetailNode = outerNode.addChildElement('commitmentsDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(commitmentsDetailNode);
				}
			}			
		}
	}
	public class ListOfContractAttributesType {
		public LoanServiceDataTypes.ContractAttributesDetailType[] contractAttributesDetail;
		private transient String[] contractAttributesDetail_type_info = new String[]{'contractAttributesDetail',s_ns0,'ContractAttributesDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'contractAttributesDetail'};
		public ListOfContractAttributesType(){
		}
		public ListOfContractAttributesType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] contractAttributesDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.ContractAttributesDetailType[] contractAttributesDetailList = new List<LoanServiceDataTypes.ContractAttributesDetailType>();
			if(contractAttributesDetailChildren == null || contractAttributesDetailChildren.size() == 0){
				this.contractAttributesDetail = null;
			} else{
				for(DOM.XmlNode childNode : contractAttributesDetailChildren){
					if(childNode.GetName() == 'contractAttributesDetail'){
						LoanServiceDataTypes.ContractAttributesDetailType Obj = new LoanServiceDataTypes.ContractAttributesDetailType(childNode);
						contractAttributesDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.contractAttributesDetail = contractAttributesDetailList;
			}
			//System.debug(this.contractAttributesDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ContractAttributesDetailType[] contractAttributesDetailObj = this.contractAttributesDetail;
			if(contractAttributesDetailObj != null){
				for(LoanServiceDataTypes.ContractAttributesDetailType element: contractAttributesDetailObj){
					Dom.XmlNode contractAttributesDetailNode = outerNode.addChildElement('contractAttributesDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(contractAttributesDetailNode);
				}
			}			
		}
	}
	public class ListOfContractDataType {
		public LoanServiceDataTypes.ContractDataDetailType[] contractDataDetail;
		private transient String[] contractDataDetail_type_info = new String[]{'contractDataDetail',s_ns0,'ContractDataDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'contractDataDetail'};
		public ListOfContractDataType(){
		}
		public ListOfContractDataType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] contractDataDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.ContractDataDetailType[] contractDataDetailList = new List<LoanServiceDataTypes.ContractDataDetailType>();
			if(contractDataDetailChildren == null || contractDataDetailChildren.size() == 0){
				this.contractDataDetail = null;
			} else{
				for(DOM.XmlNode childNode : contractDataDetailChildren){
					if(childNode.GetName() == 'contractDataDetail'){
						LoanServiceDataTypes.ContractDataDetailType Obj = new LoanServiceDataTypes.ContractDataDetailType(childNode);
						contractDataDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.contractDataDetail = contractDataDetailList;
			}
			//System.debug(this.contractDataDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ContractDataDetailType[] contractDataDetailObj = this.contractDataDetail;
			if(contractDataDetailObj != null){
				for(LoanServiceDataTypes.ContractDataDetailType element: contractDataDetailObj){
					Dom.XmlNode contractDataDetailNode = outerNode.addChildElement('contractDataDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(contractDataDetailNode);
				}
			}			
		}
	}
	public class ListOfContractsType {
		public Long[] contractId;
		private transient String[] contractId_type_info = new String[]{'contractId',s_ns0,'CommonNumberType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'contractId'};
		public ListOfContractsType(){
		}
		public ListOfContractsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Long[] contractIdList = new List<Long>();
			if(responseNode.getChildElements() == null){
				this.contractId = null;
			} else{
				for(DOM.XmlNode childNode: responseNode.getChildElements()){
					if(childNode.GetName() == 'contractId'){			
					contractIdList.Add(Long.valueOf(childNode.getText()));
					}
				}
				this.contractId = contractIdList;
			}
			//System.debug(this.contractId);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			if(this.contractId != null){
				for(Long element: this.contractId){
					Dom.XmlNode contractIdNode = outerNode.addChildElement('contractId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					contractIdNode.addTextNode(String.valueOf(element));
				}
			}								
		}
	}
	public class ListOfCreditWorthinessType {
		public LoanServiceDataTypes.CreditWorthinessDetailType[] creditWorthinessDetail;
		private transient String[] creditWorthinessDetail_type_info = new String[]{'creditWorthinessDetail',s_ns0,'CreditWorthinessDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'creditWorthinessDetail'};
		public ListOfCreditWorthinessType(){
		}
		public ListOfCreditWorthinessType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] creditWorthinessDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.CreditWorthinessDetailType[] creditWorthinessDetailList = new List<LoanServiceDataTypes.CreditWorthinessDetailType>();
			if(creditWorthinessDetailChildren == null || creditWorthinessDetailChildren.size() == 0){
				this.creditWorthinessDetail = null;
			} else{
				for(DOM.XmlNode childNode : creditWorthinessDetailChildren){
					if(childNode.GetName() == 'creditWorthinessDetail'){
						LoanServiceDataTypes.CreditWorthinessDetailType Obj = new LoanServiceDataTypes.CreditWorthinessDetailType(childNode);
						creditWorthinessDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.creditWorthinessDetail = creditWorthinessDetailList;
			}
			//System.debug(this.creditWorthinessDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.CreditWorthinessDetailType[] creditWorthinessDetailObj = this.creditWorthinessDetail;
			if(creditWorthinessDetailObj != null){
				for(LoanServiceDataTypes.CreditWorthinessDetailType element: creditWorthinessDetailObj){
					Dom.XmlNode creditWorthinessDetailNode = outerNode.addChildElement('creditWorthinessDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(creditWorthinessDetailNode);
				}
			}			
		}
	}
	public class ListOfCsProductsType {
		public LoanServiceDataTypes.CsProductsDetailType[] csProductsDetail;
		private transient String[] csProductsDetail_type_info = new String[]{'csProductsDetail',s_ns0,'CsProductsDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'csProductsDetail'};
		public ListOfCsProductsType(){
		}
		public ListOfCsProductsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] csProductsDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.CsProductsDetailType[] csProductsDetailList = new List<LoanServiceDataTypes.CsProductsDetailType>();
			if(csProductsDetailChildren == null || csProductsDetailChildren.size() == 0){
				this.csProductsDetail = null;
			} else{
				for(DOM.XmlNode childNode : csProductsDetailChildren){
					if(childNode.GetName() == 'csProductsDetail'){
						LoanServiceDataTypes.CsProductsDetailType Obj = new LoanServiceDataTypes.CsProductsDetailType(childNode);
						csProductsDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.csProductsDetail = csProductsDetailList;
			}
			//System.debug(this.csProductsDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.CsProductsDetailType[] csProductsDetailObj = this.csProductsDetail;
			if(csProductsDetailObj != null){
				for(LoanServiceDataTypes.CsProductsDetailType element: csProductsDetailObj){
					Dom.XmlNode csProductsDetailNode = outerNode.addChildElement('csProductsDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(csProductsDetailNode);
				}
			}			
		}
	}
	public class ListOfDebtorsType {
		public LoanServiceDataTypes.DebtorsItemType[] debtorsItem;
		private transient String[] debtorsItem_type_info = new String[]{'debtorsItem',s_ns0,'DebtorsItemType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'debtorsItem'};
		public ListOfDebtorsType(){
		}
		public ListOfDebtorsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] debtorsItemChildren = responseNode.getChildElements();
			LoanServiceDataTypes.DebtorsItemType[] debtorsItemList = new List<LoanServiceDataTypes.DebtorsItemType>();
			if(debtorsItemChildren == null || debtorsItemChildren.size() == 0){
				this.debtorsItem = null;
			} else{
				for(DOM.XmlNode childNode : debtorsItemChildren){
					if(childNode.GetName() == 'debtorsItem'){
						LoanServiceDataTypes.DebtorsItemType Obj = new LoanServiceDataTypes.DebtorsItemType(childNode);
						debtorsItemList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.debtorsItem = debtorsItemList;
			}
			//System.debug(this.debtorsItem);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.DebtorsItemType[] debtorsItemObj = this.debtorsItem;
			if(debtorsItemObj != null){
				for(LoanServiceDataTypes.DebtorsItemType element: debtorsItemObj){
					Dom.XmlNode debtorsItemNode = outerNode.addChildElement('debtorsItem', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(debtorsItemNode);
				}
			}			
		}
	}
	public class ListOfDocumentsType {
		public LoanServiceDataTypes.DocumentsItemType[] documentsItem;
		private transient String[] documentsItem_type_info = new String[]{'documentsItem',s_ns0,'DocumentsItemType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'documentsItem'};
		public ListOfDocumentsType(){
		}
		public ListOfDocumentsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] documentsItemChildren = responseNode.getChildElements();
			LoanServiceDataTypes.DocumentsItemType[] documentsItemList = new List<LoanServiceDataTypes.DocumentsItemType>();
			if(documentsItemChildren == null || documentsItemChildren.size() == 0){
				this.documentsItem = null;
			} else{
				for(DOM.XmlNode childNode : documentsItemChildren){
					if(childNode.GetName() == 'documentsItem'){
						LoanServiceDataTypes.DocumentsItemType Obj = new LoanServiceDataTypes.DocumentsItemType(childNode);
						documentsItemList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.documentsItem = documentsItemList;
			}
			//System.debug(this.documentsItem);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.DocumentsItemType[] documentsItemObj = this.documentsItem;
			if(documentsItemObj != null){
				for(LoanServiceDataTypes.DocumentsItemType element: documentsItemObj){
					Dom.XmlNode documentsItemNode = outerNode.addChildElement('documentsItem', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(documentsItemNode);
				}
			}			
		}
	}
	public class ListOfIndemnityType {
		public LoanServiceDataTypes.IndemnityDetailType[] indemnityDetail;
		private transient String[] indemnityDetail_type_info = new String[]{'indemnityDetail',s_ns0,'IndemnityDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'indemnityDetail'};
		public ListOfIndemnityType(){
		}
		public ListOfIndemnityType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] indemnityDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.IndemnityDetailType[] indemnityDetailList = new List<LoanServiceDataTypes.IndemnityDetailType>();
			if(indemnityDetailChildren == null || indemnityDetailChildren.size() == 0){
				this.indemnityDetail = null;
			} else{
				for(DOM.XmlNode childNode : indemnityDetailChildren){
					if(childNode.GetName() == 'indemnityDetail'){
						LoanServiceDataTypes.IndemnityDetailType Obj = new LoanServiceDataTypes.IndemnityDetailType(childNode);
						indemnityDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.indemnityDetail = indemnityDetailList;
			}
			//System.debug(this.indemnityDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.IndemnityDetailType[] indemnityDetailObj = this.indemnityDetail;
			if(indemnityDetailObj != null){
				for(LoanServiceDataTypes.IndemnityDetailType element: indemnityDetailObj){
					Dom.XmlNode indemnityDetailNode = outerNode.addChildElement('indemnityDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(indemnityDetailNode);
				}
			}			
		}
	}
	public class ListOfInterimLoanContractsType {
		public BasicTypesService.AccountNumberType[] interimLoanContract;
		private transient String[] interimLoanContract_type_info = new String[]{'interimLoanContract',s_ns0,'AccountNumberType','0','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'interimLoanContract'};
		public ListOfInterimLoanContractsType(){
		}
		public ListOfInterimLoanContractsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] interimLoanContractChildren = responseNode.getChildElements();
			BasicTypesService.AccountNumberType[] interimLoanContractList = new List<BasicTypesService.AccountNumberType>();
			if(interimLoanContractChildren == null || interimLoanContractChildren.size() == 0){
				this.interimLoanContract = null;
			} else{
				for(DOM.XmlNode childNode : interimLoanContractChildren){
					if(childNode.GetName() == 'interimLoanContract'){
						BasicTypesService.AccountNumberType Obj = new BasicTypesService.AccountNumberType(childNode);
						interimLoanContractList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.interimLoanContract = interimLoanContractList;
			}
			//System.debug(this.interimLoanContract);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType[] interimLoanContractObj = this.interimLoanContract;
			if(interimLoanContractObj != null){
				for(BasicTypesService.AccountNumberType element: interimLoanContractObj){
					Dom.XmlNode interimLoanContractNode = outerNode.addChildElement('interimLoanContract', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(interimLoanContractNode);
				}
			}			
		}
	}
	public class ListOfLoanOtherActionsType {
		public LoanServiceDataTypes.LoanOtherActionsDetailType[] loanOtherActionsDetail;
		private transient String[] loanOtherActionsDetail_type_info = new String[]{'loanOtherActionsDetail',s_ns0,'LoanOtherActionsDetailType','0','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanOtherActionsDetail'};
		public ListOfLoanOtherActionsType(){
		}
		public ListOfLoanOtherActionsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] loanOtherActionsDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.LoanOtherActionsDetailType[] loanOtherActionsDetailList = new List<LoanServiceDataTypes.LoanOtherActionsDetailType>();
			if(loanOtherActionsDetailChildren == null || loanOtherActionsDetailChildren.size() == 0){
				this.loanOtherActionsDetail = null;
			} else{
				for(DOM.XmlNode childNode : loanOtherActionsDetailChildren){
					if(childNode.GetName() == 'loanOtherActionsDetail'){
						LoanServiceDataTypes.LoanOtherActionsDetailType Obj = new LoanServiceDataTypes.LoanOtherActionsDetailType(childNode);
						loanOtherActionsDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.loanOtherActionsDetail = loanOtherActionsDetailList;
			}
			//System.debug(this.loanOtherActionsDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.LoanOtherActionsDetailType[] loanOtherActionsDetailObj = this.loanOtherActionsDetail;
			if(loanOtherActionsDetailObj != null){
				for(LoanServiceDataTypes.LoanOtherActionsDetailType element: loanOtherActionsDetailObj){
					Dom.XmlNode loanOtherActionsDetailNode = outerNode.addChildElement('loanOtherActionsDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(loanOtherActionsDetailNode);
				}
			}			
		}
	}
	public class ListOfPackagesType {
		public LoanServiceDataTypes.PackagesItemType[] packagesItem;
		private transient String[] packagesItem_type_info = new String[]{'packagesItem',s_ns0,'PackagesItemType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'packagesItem'};
		public ListOfPackagesType(){
		}
		public ListOfPackagesType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] packagesItemChildren = responseNode.getChildElements();
			LoanServiceDataTypes.PackagesItemType[] packagesItemList = new List<LoanServiceDataTypes.PackagesItemType>();
			if(packagesItemChildren == null || packagesItemChildren.size() == 0){
				this.packagesItem = null;
			} else{
				for(DOM.XmlNode childNode : packagesItemChildren){
					if(childNode.GetName() == 'packagesItem'){
						LoanServiceDataTypes.PackagesItemType Obj = new LoanServiceDataTypes.PackagesItemType(childNode);
						packagesItemList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.packagesItem = packagesItemList;
			}
			//System.debug(this.packagesItem);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.PackagesItemType[] packagesItemObj = this.packagesItem;
			if(packagesItemObj != null){
				for(LoanServiceDataTypes.PackagesItemType element: packagesItemObj){
					Dom.XmlNode packagesItemNode = outerNode.addChildElement('packagesItem', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(packagesItemNode);
				}
			}			
		}
	}
	public class ListOfPersonsItemType {
		public Long personNumber;
		public String firstName;
		public String lastName;
		public Long personRole;
		private transient String[] personNumber_type_info = new String[]{'personNumber',s_ns0,'PersonNumberType','1','1','false'};
		private transient String[] firstName_type_info = new String[]{'firstName',s_ns0,'FirstNameType','1','1','false'};
		private transient String[] lastName_type_info = new String[]{'lastName',s_ns0,'LastNameType','1','1','false'};
		private transient String[] personRole_type_info = new String[]{'personRole',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'personNumber','firstName','lastName','personRole'};
		public ListOfPersonsItemType(){
		}
		public ListOfPersonsItemType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode personNumberNode = responseNode.getChildElement('personNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.personNumber = (personNumberNode == null) ? null : Long.valueOf(personNumberNode.getText());
			nodesParsed.add(personNumberNode);
			//System.debug(this.personNumber);			
			DOM.XmlNode firstNameNode = responseNode.getChildElement('firstName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.firstName = (firstNameNode == null) ? null : firstNameNode.getText();
			nodesParsed.add(firstNameNode);
			//System.debug(this.firstName);			
			DOM.XmlNode lastNameNode = responseNode.getChildElement('lastName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.lastName = (lastNameNode == null) ? null : lastNameNode.getText();
			nodesParsed.add(lastNameNode);
			//System.debug(this.lastName);			
			DOM.XmlNode personRoleNode = responseNode.getChildElement('personRole', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.personRole = (personRoleNode == null) ? null : Long.valueOf(personRoleNode.getText());
			nodesParsed.add(personRoleNode);
			//System.debug(this.personRole);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode personNumberNode = outerNode.addChildElement('personNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.personNumber != null){
				personNumberNode.addTextNode(String.valueOf(this.personNumber));
			}
			Dom.XmlNode firstNameNode = outerNode.addChildElement('firstName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.firstName != null){
				firstNameNode.addTextNode(this.firstName);
			}
			Dom.XmlNode lastNameNode = outerNode.addChildElement('lastName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.lastName != null){
				lastNameNode.addTextNode(this.lastName);
			}
			Dom.XmlNode personRoleNode = outerNode.addChildElement('personRole', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.personRole != null){
				personRoleNode.addTextNode(String.valueOf(this.personRole));
			}
		}
	}
	public class ListOfPersonsType {
		public LoanServiceDataTypes.ListOfPersonsItemType[] listOfPersonsItem;
		private transient String[] listOfPersonsItem_type_info = new String[]{'listOfPersonsItem',s_ns0,'ListOfPersonsItemType','0','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'listOfPersonsItem'};
		public ListOfPersonsType(){
		}
		public ListOfPersonsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] listOfPersonsItemChildren = responseNode.getChildElements();
			LoanServiceDataTypes.ListOfPersonsItemType[] listOfPersonsItemList = new List<LoanServiceDataTypes.ListOfPersonsItemType>();
			if(listOfPersonsItemChildren == null || listOfPersonsItemChildren.size() == 0){
				this.listOfPersonsItem = null;
			} else{
				for(DOM.XmlNode childNode : listOfPersonsItemChildren){
					if(childNode.GetName() == 'listOfPersonsItem'){
						LoanServiceDataTypes.ListOfPersonsItemType Obj = new LoanServiceDataTypes.ListOfPersonsItemType(childNode);
						listOfPersonsItemList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.listOfPersonsItem = listOfPersonsItemList;
			}
			//System.debug(this.listOfPersonsItem);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ListOfPersonsItemType[] listOfPersonsItemObj = this.listOfPersonsItem;
			if(listOfPersonsItemObj != null){
				for(LoanServiceDataTypes.ListOfPersonsItemType element: listOfPersonsItemObj){
					Dom.XmlNode listOfPersonsItemNode = outerNode.addChildElement('listOfPersonsItem', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(listOfPersonsItemNode);
				}
			}			
		}
	}
	public class ListOfProductIdsType {
		public LoanServiceDataTypes.ProductIdsDetailType[] productIdsDetail;
		private transient String[] productIdsDetail_type_info = new String[]{'productIdsDetail',s_ns0,'ProductIdsDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'productIdsDetail'};
		public ListOfProductIdsType(){
		}
		public ListOfProductIdsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] productIdsDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.ProductIdsDetailType[] productIdsDetailList = new List<LoanServiceDataTypes.ProductIdsDetailType>();
			if(productIdsDetailChildren == null || productIdsDetailChildren.size() == 0){
				this.productIdsDetail = null;
			} else{
				for(DOM.XmlNode childNode : productIdsDetailChildren){
					if(childNode.GetName() == 'productIdsDetail'){
						LoanServiceDataTypes.ProductIdsDetailType Obj = new LoanServiceDataTypes.ProductIdsDetailType(childNode);
						productIdsDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.productIdsDetail = productIdsDetailList;
			}
			//System.debug(this.productIdsDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ProductIdsDetailType[] productIdsDetailObj = this.productIdsDetail;
			if(productIdsDetailObj != null){
				for(LoanServiceDataTypes.ProductIdsDetailType element: productIdsDetailObj){
					Dom.XmlNode productIdsDetailNode = outerNode.addChildElement('productIdsDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(productIdsDetailNode);
				}
			}			
		}
	}
	public class ListOfPurposeDataType {
		public LoanServiceDataTypes.PurposeDataDetailType[] purposeDataDetail;
		private transient String[] purposeDataDetail_type_info = new String[]{'purposeDataDetail',s_ns0,'PurposeDataDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'purposeDataDetail'};
		public ListOfPurposeDataType(){
		}
		public ListOfPurposeDataType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] purposeDataDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.PurposeDataDetailType[] purposeDataDetailList = new List<LoanServiceDataTypes.PurposeDataDetailType>();
			if(purposeDataDetailChildren == null || purposeDataDetailChildren.size() == 0){
				this.purposeDataDetail = null;
			} else{
				for(DOM.XmlNode childNode : purposeDataDetailChildren){
					if(childNode.GetName() == 'purposeDataDetail'){
						LoanServiceDataTypes.PurposeDataDetailType Obj = new LoanServiceDataTypes.PurposeDataDetailType(childNode);
						purposeDataDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.purposeDataDetail = purposeDataDetailList;
			}
			//System.debug(this.purposeDataDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.PurposeDataDetailType[] purposeDataDetailObj = this.purposeDataDetail;
			if(purposeDataDetailObj != null){
				for(LoanServiceDataTypes.PurposeDataDetailType element: purposeDataDetailObj){
					Dom.XmlNode purposeDataDetailNode = outerNode.addChildElement('purposeDataDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(purposeDataDetailNode);
				}
			}			
		}
	}
	public class ListOfRelationPersonsType {
		public LoanServiceDataTypes.RelationPersonDetailType[] relationPersonDetail;
		private transient String[] relationPersonDetail_type_info = new String[]{'relationPersonDetail',s_ns0,'RelationPersonDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'relationPersonDetail'};
		public ListOfRelationPersonsType(){
		}
		public ListOfRelationPersonsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] relationPersonDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.RelationPersonDetailType[] relationPersonDetailList = new List<LoanServiceDataTypes.RelationPersonDetailType>();
			if(relationPersonDetailChildren == null || relationPersonDetailChildren.size() == 0){
				this.relationPersonDetail = null;
			} else{
				for(DOM.XmlNode childNode : relationPersonDetailChildren){
					if(childNode.GetName() == 'relationPersonDetail'){
						LoanServiceDataTypes.RelationPersonDetailType Obj = new LoanServiceDataTypes.RelationPersonDetailType(childNode);
						relationPersonDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.relationPersonDetail = relationPersonDetailList;
			}
			//System.debug(this.relationPersonDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.RelationPersonDetailType[] relationPersonDetailObj = this.relationPersonDetail;
			if(relationPersonDetailObj != null){
				for(LoanServiceDataTypes.RelationPersonDetailType element: relationPersonDetailObj){
					Dom.XmlNode relationPersonDetailNode = outerNode.addChildElement('relationPersonDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(relationPersonDetailNode);
				}
			}			
		}
	}
	public class ListOfResponseContractsItemType {
		public Long contractId;
		public Long personNumber;
		// Restriction enumeration: 
		public String targetSum;
		// Restriction enumeration: 
		public String freeLimit;
		public String tarif;
		// Restriction enumeration: 
		public Date dateAgreementSigning;
		// Restriction enumeration: 
		public String valuationNr;
		// Restriction enumeration: 
		public String currentBalance;
		public String status;
		public Long maximumLoanAmount;
		private transient String[] contractId_type_info = new String[]{'contractId',s_ns0,'CommonNumberType','1','1','false'};
		private transient String[] personNumber_type_info = new String[]{'personNumber',s_ns0,'PersonNumberType','1','1','false'};
		private transient String[] targetSum_type_info = new String[]{'targetSum',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] freeLimit_type_info = new String[]{'freeLimit',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] tarif_type_info = new String[]{'tarif',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] dateAgreementSigning_type_info = new String[]{'dateAgreementSigning',s_ns0,'CommonDateType','1','1','false'};
		private transient String[] valuationNr_type_info = new String[]{'valuationNr',s_ns0,'CommonDecimalNumberType','1','1','false'};
		private transient String[] currentBalance_type_info = new String[]{'currentBalance',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] status_type_info = new String[]{'status',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] maximumLoanAmount_type_info = new String[]{'maximumLoanAmount',s_ns0,'CommonNumberType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'contractId','personNumber','targetSum','freeLimit','tarif','dateAgreementSigning','valuationNr','currentBalance','status','maximumLoanAmount'};
		public ListOfResponseContractsItemType(){
		}
		public ListOfResponseContractsItemType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode contractIdNode = responseNode.getChildElement('contractId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.contractId = (contractIdNode == null) ? null : Long.valueOf(contractIdNode.getText());
			nodesParsed.add(contractIdNode);
			//System.debug(this.contractId);			
			DOM.XmlNode personNumberNode = responseNode.getChildElement('personNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.personNumber = (personNumberNode == null) ? null : Long.valueOf(personNumberNode.getText());
			nodesParsed.add(personNumberNode);
			//System.debug(this.personNumber);			
			DOM.XmlNode targetSumNode = responseNode.getChildElement('targetSum', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.targetSum = (targetSumNode == null) ? null : targetSumNode.getText();
			nodesParsed.add(targetSumNode);
			//System.debug(this.targetSum);			
			DOM.XmlNode freeLimitNode = responseNode.getChildElement('freeLimit', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.freeLimit = (freeLimitNode == null) ? null : freeLimitNode.getText();
			nodesParsed.add(freeLimitNode);
			//System.debug(this.freeLimit);			
			DOM.XmlNode tarifNode = responseNode.getChildElement('tarif', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.tarif = (tarifNode == null) ? null : tarifNode.getText();
			nodesParsed.add(tarifNode);
			//System.debug(this.tarif);			
			DOM.XmlNode dateAgreementSigningNode = responseNode.getChildElement('dateAgreementSigning', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.dateAgreementSigning = (dateAgreementSigningNode == null) ? null : Date.valueOf(dateAgreementSigningNode.getText());
			nodesParsed.add(dateAgreementSigningNode);
			//System.debug(this.dateAgreementSigning);			
			DOM.XmlNode valuationNrNode = responseNode.getChildElement('valuationNr', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.valuationNr = (valuationNrNode == null) ? null : valuationNrNode.getText();
			nodesParsed.add(valuationNrNode);
			//System.debug(this.valuationNr);			
			DOM.XmlNode currentBalanceNode = responseNode.getChildElement('currentBalance', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.currentBalance = (currentBalanceNode == null) ? null : currentBalanceNode.getText();
			nodesParsed.add(currentBalanceNode);
			//System.debug(this.currentBalance);			
			DOM.XmlNode statusNode = responseNode.getChildElement('status', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.status = (statusNode == null) ? null : statusNode.getText();
			nodesParsed.add(statusNode);
			//System.debug(this.status);			
			DOM.XmlNode maximumLoanAmountNode = responseNode.getChildElement('maximumLoanAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.maximumLoanAmount = (maximumLoanAmountNode == null) ? null : Long.valueOf(maximumLoanAmountNode.getText());
			nodesParsed.add(maximumLoanAmountNode);
			//System.debug(this.maximumLoanAmount);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode contractIdNode = outerNode.addChildElement('contractId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.contractId != null){
				contractIdNode.addTextNode(String.valueOf(this.contractId));
			}
			Dom.XmlNode personNumberNode = outerNode.addChildElement('personNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.personNumber != null){
				personNumberNode.addTextNode(String.valueOf(this.personNumber));
			}
			Dom.XmlNode targetSumNode = outerNode.addChildElement('targetSum', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.targetSum != null){
				targetSumNode.addTextNode(this.targetSum);
			}
			Dom.XmlNode freeLimitNode = outerNode.addChildElement('freeLimit', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.freeLimit != null){
				freeLimitNode.addTextNode(this.freeLimit);
			}
			Dom.XmlNode tarifNode = outerNode.addChildElement('tarif', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.tarif != null){
				tarifNode.addTextNode(this.tarif);
			}
			Dom.XmlNode dateAgreementSigningNode = outerNode.addChildElement('dateAgreementSigning', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.dateAgreementSigning != null){
				dateAgreementSigningNode.addTextNode(String.valueOf(this.dateAgreementSigning));
			}
			Dom.XmlNode valuationNrNode = outerNode.addChildElement('valuationNr', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.valuationNr != null){
				valuationNrNode.addTextNode(this.valuationNr);
			}
			Dom.XmlNode currentBalanceNode = outerNode.addChildElement('currentBalance', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.currentBalance != null){
				currentBalanceNode.addTextNode(this.currentBalance);
			}
			Dom.XmlNode statusNode = outerNode.addChildElement('status', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.status != null){
				statusNode.addTextNode(this.status);
			}
			Dom.XmlNode maximumLoanAmountNode = outerNode.addChildElement('maximumLoanAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.maximumLoanAmount != null){
				maximumLoanAmountNode.addTextNode(String.valueOf(this.maximumLoanAmount));
			}
		}
	}
	public class ListOfResponseContractsType {
		public LoanServiceDataTypes.ListOfResponseContractsItemType[] listOfResponseContractItem;
		private transient String[] listOfResponseContractItem_type_info = new String[]{'listOfResponseContractItem',s_ns0,'ListOfResponseContractsItemType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'listOfResponseContractItem'};
		public ListOfResponseContractsType(){
		}
		public ListOfResponseContractsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] listOfResponseContractItemChildren = responseNode.getChildElements();
			LoanServiceDataTypes.ListOfResponseContractsItemType[] listOfResponseContractItemList = new List<LoanServiceDataTypes.ListOfResponseContractsItemType>();
			if(listOfResponseContractItemChildren == null || listOfResponseContractItemChildren.size() == 0){
				this.listOfResponseContractItem = null;
			} else{
				for(DOM.XmlNode childNode : listOfResponseContractItemChildren){
					if(childNode.GetName() == 'listOfResponseContractItem'){
						LoanServiceDataTypes.ListOfResponseContractsItemType Obj = new LoanServiceDataTypes.ListOfResponseContractsItemType(childNode);
						listOfResponseContractItemList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.listOfResponseContractItem = listOfResponseContractItemList;
			}
			//System.debug(this.listOfResponseContractItem);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ListOfResponseContractsItemType[] listOfResponseContractItemObj = this.listOfResponseContractItem;
			if(listOfResponseContractItemObj != null){
				for(LoanServiceDataTypes.ListOfResponseContractsItemType element: listOfResponseContractItemObj){
					Dom.XmlNode listOfResponseContractItemNode = outerNode.addChildElement('listOfResponseContractItem', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(listOfResponseContractItemNode);
				}
			}			
		}
	}
	public class ListOfSavingContractsType {
		public BasicTypesService.AccountNumberType[] savingContract;
		private transient String[] savingContract_type_info = new String[]{'savingContract',s_ns0,'AccountNumberType','0','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'savingContract'};
		public ListOfSavingContractsType(){
		}
		public ListOfSavingContractsType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] savingContractChildren = responseNode.getChildElements();
			BasicTypesService.AccountNumberType[] savingContractList = new List<BasicTypesService.AccountNumberType>();
			if(savingContractChildren == null || savingContractChildren.size() == 0){
				this.savingContract = null;
			} else{
				for(DOM.XmlNode childNode : savingContractChildren){
					if(childNode.GetName() == 'savingContract'){
						BasicTypesService.AccountNumberType Obj = new BasicTypesService.AccountNumberType(childNode);
						savingContractList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.savingContract = savingContractList;
			}
			//System.debug(this.savingContract);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType[] savingContractObj = this.savingContract;
			if(savingContractObj != null){
				for(BasicTypesService.AccountNumberType element: savingContractObj){
					Dom.XmlNode savingContractNode = outerNode.addChildElement('savingContract', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(savingContractNode);
				}
			}			
		}
	}
	public class LoadLoanAccountDetailDataRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		public DateTime exportDateTime;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] exportDateTime_type_info = new String[]{'exportDateTime',s_ns0,'CommonDateTimeType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','exportDateTime'};
		public LoadLoanAccountDetailDataRequestBodyType(){
		}
		public LoadLoanAccountDetailDataRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode exportDateTimeNode = responseNode.getChildElement('exportDateTime', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.exportDateTime = (exportDateTimeNode == null) ? null :  LoanServiceDataTypes.parseDateTime(exportDateTimeNode.getText());
			nodesParsed.add(exportDateTimeNode);
			//System.debug(this.exportDateTime);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode exportDateTimeNode = outerNode.addChildElement('exportDateTime', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.exportDateTime != null){
				exportDateTimeNode.addTextNode(String.valueOf(this.exportDateTime));
			}
		}
	}
	public class LoadLoanAccountDetailDataResponseBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		public LoanServiceDataTypes.ListOfSavingContractsType relatedSavingContracts;
		public LoanServiceDataTypes.ListOfInterimLoanContractsType relatedInterimLoanContracts;
		public LoanServiceDataTypes.PersonListType relatedPersons;
		public LoanServiceDataTypes.ListOfIndemnityType indemnity;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] relatedSavingContracts_type_info = new String[]{'relatedSavingContracts',s_ns0,'ListOfSavingContractsType','0','1','false'};
		private transient String[] relatedInterimLoanContracts_type_info = new String[]{'relatedInterimLoanContracts',s_ns0,'ListOfInterimLoanContractsType','0','1','false'};
		private transient String[] relatedPersons_type_info = new String[]{'relatedPersons',s_ns0,'PersonListType','1','1','false'};
		private transient String[] indemnity_type_info = new String[]{'indemnity',s_ns0,'ListOfIndemnityType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','relatedSavingContracts','relatedInterimLoanContracts','relatedPersons','indemnity'};
		public LoadLoanAccountDetailDataResponseBodyType(){
		}
		public LoadLoanAccountDetailDataResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode relatedSavingContractsNode = responseNode.getChildElement('relatedSavingContracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(relatedSavingContractsNode == null){
				this.relatedSavingContracts = null;
			} else{
				LoanServiceDataTypes.ListOfSavingContractsType relatedSavingContractsObj = new LoanServiceDataTypes.ListOfSavingContractsType(relatedSavingContractsNode);
				nodesParsed.add(relatedSavingContractsNode);
				this.relatedSavingContracts = relatedSavingContractsObj;
			}
			//System.debug(this.relatedSavingContracts);			
			DOM.XmlNode relatedInterimLoanContractsNode = responseNode.getChildElement('relatedInterimLoanContracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(relatedInterimLoanContractsNode == null){
				this.relatedInterimLoanContracts = null;
			} else{
				LoanServiceDataTypes.ListOfInterimLoanContractsType relatedInterimLoanContractsObj = new LoanServiceDataTypes.ListOfInterimLoanContractsType(relatedInterimLoanContractsNode);
				nodesParsed.add(relatedInterimLoanContractsNode);
				this.relatedInterimLoanContracts = relatedInterimLoanContractsObj;
			}
			//System.debug(this.relatedInterimLoanContracts);			
			DOM.XmlNode relatedPersonsNode = responseNode.getChildElement('relatedPersons', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(relatedPersonsNode == null){
				this.relatedPersons = null;
			} else{
				LoanServiceDataTypes.PersonListType relatedPersonsObj = new LoanServiceDataTypes.PersonListType(relatedPersonsNode);
				nodesParsed.add(relatedPersonsNode);
				this.relatedPersons = relatedPersonsObj;
			}
			//System.debug(this.relatedPersons);			
			DOM.XmlNode indemnityNode = responseNode.getChildElement('indemnity', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(indemnityNode == null){
				this.indemnity = null;
			} else{
				LoanServiceDataTypes.ListOfIndemnityType indemnityObj = new LoanServiceDataTypes.ListOfIndemnityType(indemnityNode);
				nodesParsed.add(indemnityNode);
				this.indemnity = indemnityObj;
			}
			//System.debug(this.indemnity);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			
			LoanServiceDataTypes.ListOfSavingContractsType relatedSavingContractsObj = this.relatedSavingContracts;
			Dom.XmlNode relatedSavingContractsNode = outerNode.addChildElement('relatedSavingContracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(relatedSavingContractsObj != null){
				relatedSavingContractsObj.populateXmlNode(relatedSavingContractsNode);
			}
			
			LoanServiceDataTypes.ListOfInterimLoanContractsType relatedInterimLoanContractsObj = this.relatedInterimLoanContracts;
			Dom.XmlNode relatedInterimLoanContractsNode = outerNode.addChildElement('relatedInterimLoanContracts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(relatedInterimLoanContractsObj != null){
				relatedInterimLoanContractsObj.populateXmlNode(relatedInterimLoanContractsNode);
			}
			
			LoanServiceDataTypes.PersonListType relatedPersonsObj = this.relatedPersons;
			Dom.XmlNode relatedPersonsNode = outerNode.addChildElement('relatedPersons', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(relatedPersonsObj != null){
				relatedPersonsObj.populateXmlNode(relatedPersonsNode);
			}
			
			LoanServiceDataTypes.ListOfIndemnityType indemnityObj = this.indemnity;
			Dom.XmlNode indemnityNode = outerNode.addChildElement('indemnity', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(indemnityObj != null){
				indemnityObj.populateXmlNode(indemnityNode);
			}
		}
	}
	public class LoadLoanAccountRequestBodyType {
		public BasicTypesService.AccountNumberType accountNumber;
		private transient String[] accountNumber_type_info = new String[]{'accountNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'accountNumber'};
		public LoadLoanAccountRequestBodyType(){
		}
		public LoadLoanAccountRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode accountNumberNode = responseNode.getChildElement('accountNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(accountNumberNode == null){
				this.accountNumber = null;
			} else{
				BasicTypesService.AccountNumberType accountNumberObj = new BasicTypesService.AccountNumberType(accountNumberNode);
				nodesParsed.add(accountNumberNode);
				this.accountNumber = accountNumberObj;
			}
			//System.debug(this.accountNumber);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType accountNumberObj = this.accountNumber;
			Dom.XmlNode accountNumberNode = outerNode.addChildElement('accountNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(accountNumberObj != null){
				accountNumberObj.populateXmlNode(accountNumberNode);
			}
		}
	}
	public class LoadLoanAccountResponseBodyType {
		public LoanServiceDataTypes.LoanAccountType loanAccount;
		private transient String[] loanAccount_type_info = new String[]{'loanAccount',s_ns0,'LoanAccountType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanAccount'};
		public LoadLoanAccountResponseBodyType(){
		}
		public LoadLoanAccountResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanAccountNode = responseNode.getChildElement('loanAccount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanAccountNode == null){
				this.loanAccount = null;
			} else{
				LoanServiceDataTypes.LoanAccountType loanAccountObj = new LoanServiceDataTypes.LoanAccountType(loanAccountNode);
				nodesParsed.add(loanAccountNode);
				this.loanAccount = loanAccountObj;
			}
			//System.debug(this.loanAccount);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.LoanAccountType loanAccountObj = this.loanAccount;
			Dom.XmlNode loanAccountNode = outerNode.addChildElement('loanAccount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanAccountObj != null){
				loanAccountObj.populateXmlNode(loanAccountNode);
			}
		}
	}
	public class LoadPackagesListRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber'};
		public LoadPackagesListRequestBodyType(){
		}
		public LoadPackagesListRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('dat:loanIdNumber', null, null);
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
//Failed to find base class: http://service.cmss.cz/common/CommonMessage/v01:RequestMessage - Unable to create ApexClass for complexTypeQualifiedName: http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
  //Corresponding complexType was null.
  //Název parametru: complexType
	public class LoadPackagesListRequestType {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader',s_ns0,'RequestHeader','1','1','false'};
		public LoanServiceDataTypes.LoadPackagesListRequestBodyType requestBody;
		private transient String[] requestBody_type_info = new String[]{'requestBody',s_ns0,'LoadPackagesListRequestBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader','requestBody'};
		public LoadPackagesListRequestType(){
		}
		public LoadPackagesListRequestType(CommonMessageService.RequestHeader requestHeader,LoanServiceDataTypes.LoadPackagesListRequestBodyType requestBody){
			this.requestHeader = requestHeader;
			this.requestBody = requestBody;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			//System.assertEquals('loadPackagesList', outerNode.getName());
			
			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('v01:requestHeader', null, null);
			if(requestHeaderObj != null){
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}
			
			LoanServiceDataTypes.LoadPackagesListRequestBodyType requestBodyObj = this.requestBody;
			Dom.XmlNode requestBodyNode = outerNode.addChildElement('dat:requestBody', null, null);
			if(requestBodyObj != null){
				requestBodyObj.populateXmlNode(requestBodyNode);
			}
		}
	}
	public class LoadPackagesListResponseBodyType {
		public LoanServiceDataTypes.ListOfPackagesType listOfPackages;
		private transient String[] listOfPackages_type_info = new String[]{'listOfPackages',s_ns0,'ListOfPackagesType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'listOfPackages'};
		public LoadPackagesListResponseBodyType(){
		}
		public LoadPackagesListResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode listOfPackagesNode = responseNode.getChildElement('listOfPackages', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfPackagesNode == null){
				this.listOfPackages = null;
			} else{
				LoanServiceDataTypes.ListOfPackagesType listOfPackagesObj = new LoanServiceDataTypes.ListOfPackagesType(listOfPackagesNode);
				nodesParsed.add(listOfPackagesNode);
				this.listOfPackages = listOfPackagesObj;
			}
			//System.debug(this.listOfPackages);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.ListOfPackagesType listOfPackagesObj = this.listOfPackages;
			Dom.XmlNode listOfPackagesNode = outerNode.addChildElement('listOfPackages', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfPackagesObj != null){
				listOfPackagesObj.populateXmlNode(listOfPackagesNode);
			}
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
//Failed to find base class: http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage - Unable to create ApexClass for complexTypeQualifiedName: http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
  //Corresponding complexType was null.
  //Název parametru: complexType
	public class LoadPackagesListResponseType {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public CommonMessageService.ResponseHeader responseHeader_LoadPackagesListResponseType;
		private transient String[] responseHeader_LoadPackagesListResponseType_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public LoanServiceDataTypes.LoadPackagesListResponseBodyType responseBody;
		private transient String[] responseBody_type_info = new String[]{'responseBody',s_ns0,'LoadPackagesListResponseBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader','responseHeader_LoadPackagesListResponseType','responseBody'};
		public LoadPackagesListResponseType(){
		}
		public LoadPackagesListResponseType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('loadPackagesListResponse', responseNode.getName());
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(responseHeaderNode == null){
				this.responseHeader = null;
			} else{
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			
			DOM.XmlNode responseHeader_LoadPackagesListResponseTypeNode = responseNode.getChildElement('responseHeader_LoadPackagesListResponseType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(responseHeader_LoadPackagesListResponseTypeNode == null){
				this.responseHeader_LoadPackagesListResponseType = null;
			} else{
				CommonMessageService.ResponseHeader responseHeader_LoadPackagesListResponseTypeObj = new CommonMessageService.ResponseHeader(responseHeader_LoadPackagesListResponseTypeNode);
				nodesParsed.add(responseHeader_LoadPackagesListResponseTypeNode);
				this.responseHeader_LoadPackagesListResponseType = responseHeader_LoadPackagesListResponseTypeObj;
			}
			//System.debug(this.responseHeader_LoadPackagesListResponseType);			
			DOM.XmlNode responseBodyNode = responseNode.getChildElement('responseBody', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(responseBodyNode == null){
				this.responseBody = null;
			} else{
				LoanServiceDataTypes.LoadPackagesListResponseBodyType responseBodyObj = new LoanServiceDataTypes.LoadPackagesListResponseBodyType(responseBodyNode);
				nodesParsed.add(responseBodyNode);
				this.responseBody = responseBodyObj;
			}
			//System.debug(this.responseBody);			
		}
	}
	public class LoanAccountType {
		public BasicTypesService.AccountNumberType loanAccountNumber;
		// Restriction enumeration: 
		public String loanValue;
		// Restriction enumeration: 
		public String loanValuePayed;
		public DateTime contractAvoidanceDate;
		public DateTime effectiveContractAvoidanceDate;
		public DateTime signatureDate;
		public LoanServiceDataTypes.ListOfPersonsType relatedPersons;
		public LoanServiceDataTypes.ListOfAccountsType relatedAccounts;
		private transient String[] loanAccountNumber_type_info = new String[]{'loanAccountNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] loanValue_type_info = new String[]{'loanValue',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] loanValuePayed_type_info = new String[]{'loanValuePayed',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] contractAvoidanceDate_type_info = new String[]{'contractAvoidanceDate',s_ns0,'CommonDateTimeType','1','1','false'};
		private transient String[] effectiveContractAvoidanceDate_type_info = new String[]{'effectiveContractAvoidanceDate',s_ns0,'CommonDateTimeType','1','1','false'};
		private transient String[] signatureDate_type_info = new String[]{'signatureDate',s_ns0,'CommonDateTimeType','1','1','false'};
		private transient String[] relatedPersons_type_info = new String[]{'relatedPersons',s_ns0,'ListOfPersonsType','1','1','false'};
		private transient String[] relatedAccounts_type_info = new String[]{'relatedAccounts',s_ns0,'ListOfAccountsType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanAccountNumber','loanValue','loanValuePayed','contractAvoidanceDate','effectiveContractAvoidanceDate','signatureDate','relatedPersons','relatedAccounts'};
		public LoanAccountType(){
		}
		public LoanAccountType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanAccountNumberNode = responseNode.getChildElement('loanAccountNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanAccountNumberNode == null){
				this.loanAccountNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanAccountNumberObj = new BasicTypesService.AccountNumberType(loanAccountNumberNode);
				nodesParsed.add(loanAccountNumberNode);
				this.loanAccountNumber = loanAccountNumberObj;
			}
			//System.debug(this.loanAccountNumber);			
			DOM.XmlNode loanValueNode = responseNode.getChildElement('loanValue', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.loanValue = (loanValueNode == null) ? null : loanValueNode.getText();
			nodesParsed.add(loanValueNode);
			//System.debug(this.loanValue);			
			DOM.XmlNode loanValuePayedNode = responseNode.getChildElement('loanValuePayed', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.loanValuePayed = (loanValuePayedNode == null) ? null : loanValuePayedNode.getText();
			nodesParsed.add(loanValuePayedNode);
			//System.debug(this.loanValuePayed);			
			DOM.XmlNode contractAvoidanceDateNode = responseNode.getChildElement('contractAvoidanceDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.contractAvoidanceDate = (contractAvoidanceDateNode == null) ? null :  LoanServiceDataTypes.parseDateTime(contractAvoidanceDateNode.getText());
			nodesParsed.add(contractAvoidanceDateNode);
			//System.debug(this.contractAvoidanceDate);			
			DOM.XmlNode effectiveContractAvoidanceDateNode = responseNode.getChildElement('effectiveContractAvoidanceDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.effectiveContractAvoidanceDate = (effectiveContractAvoidanceDateNode == null) ? null :  LoanServiceDataTypes.parseDateTime(effectiveContractAvoidanceDateNode.getText());
			nodesParsed.add(effectiveContractAvoidanceDateNode);
			//System.debug(this.effectiveContractAvoidanceDate);			
			DOM.XmlNode signatureDateNode = responseNode.getChildElement('signatureDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.signatureDate = (signatureDateNode == null) ? null :  LoanServiceDataTypes.parseDateTime(signatureDateNode.getText());
			nodesParsed.add(signatureDateNode);
			//System.debug(this.signatureDate);			
			DOM.XmlNode relatedPersonsNode = responseNode.getChildElement('relatedPersons', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(relatedPersonsNode == null){
				this.relatedPersons = null;
			} else{
				LoanServiceDataTypes.ListOfPersonsType relatedPersonsObj = new LoanServiceDataTypes.ListOfPersonsType(relatedPersonsNode);
				nodesParsed.add(relatedPersonsNode);
				this.relatedPersons = relatedPersonsObj;
			}
			//System.debug(this.relatedPersons);			
			DOM.XmlNode relatedAccountsNode = responseNode.getChildElement('relatedAccounts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(relatedAccountsNode == null){
				this.relatedAccounts = null;
			} else{
				LoanServiceDataTypes.ListOfAccountsType relatedAccountsObj = new LoanServiceDataTypes.ListOfAccountsType(relatedAccountsNode);
				nodesParsed.add(relatedAccountsNode);
				this.relatedAccounts = relatedAccountsObj;
			}
			//System.debug(this.relatedAccounts);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanAccountNumberObj = this.loanAccountNumber;
			Dom.XmlNode loanAccountNumberNode = outerNode.addChildElement('loanAccountNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanAccountNumberObj != null){
				loanAccountNumberObj.populateXmlNode(loanAccountNumberNode);
			}
			Dom.XmlNode loanValueNode = outerNode.addChildElement('loanValue', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.loanValue != null){
				loanValueNode.addTextNode(this.loanValue);
			}
			Dom.XmlNode loanValuePayedNode = outerNode.addChildElement('loanValuePayed', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.loanValuePayed != null){
				loanValuePayedNode.addTextNode(this.loanValuePayed);
			}
			Dom.XmlNode contractAvoidanceDateNode = outerNode.addChildElement('contractAvoidanceDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.contractAvoidanceDate != null){
				contractAvoidanceDateNode.addTextNode(String.valueOf(this.contractAvoidanceDate));
			}
			Dom.XmlNode effectiveContractAvoidanceDateNode = outerNode.addChildElement('effectiveContractAvoidanceDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.effectiveContractAvoidanceDate != null){
				effectiveContractAvoidanceDateNode.addTextNode(String.valueOf(this.effectiveContractAvoidanceDate));
			}
			Dom.XmlNode signatureDateNode = outerNode.addChildElement('signatureDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.signatureDate != null){
				signatureDateNode.addTextNode(String.valueOf(this.signatureDate));
			}
			
			LoanServiceDataTypes.ListOfPersonsType relatedPersonsObj = this.relatedPersons;
			Dom.XmlNode relatedPersonsNode = outerNode.addChildElement('relatedPersons', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(relatedPersonsObj != null){
				relatedPersonsObj.populateXmlNode(relatedPersonsNode);
			}
			
			LoanServiceDataTypes.ListOfAccountsType relatedAccountsObj = this.relatedAccounts;
			Dom.XmlNode relatedAccountsNode = outerNode.addChildElement('relatedAccounts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(relatedAccountsObj != null){
				relatedAccountsObj.populateXmlNode(relatedAccountsNode);
			}
		}
	}
	public class LoanActivateRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		// Restriction enumeration: 
		public Date activationDate;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] activationDate_type_info = new String[]{'activationDate',s_ns0,'CommonDateType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','activationDate'};
		public LoanActivateRequestBodyType(){
		}
		public LoanActivateRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode activationDateNode = responseNode.getChildElement('activationDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.activationDate = (activationDateNode == null) ? null : Date.valueOf(activationDateNode.getText());
			nodesParsed.add(activationDateNode);
			//System.debug(this.activationDate);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode activationDateNode = outerNode.addChildElement('activationDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.activationDate != null){
				activationDateNode.addTextNode(String.valueOf(this.activationDate));
			}
		}
	}
	public class LoanActivateResponseBodyType {
		public BasicTypesService.OperationSuccessType operationSuccess;
		private transient String[] operationSuccess_type_info = new String[]{'operationSuccess',s_ns0,'OperationSuccessType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'operationSuccess'};
		public LoanActivateResponseBodyType(){
		}
		public LoanActivateResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode operationSuccessNode = responseNode.getChildElement('operationSuccess', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(operationSuccessNode == null){
				this.operationSuccess = null;
			} else{
				BasicTypesService.OperationSuccessType operationSuccessObj = new BasicTypesService.OperationSuccessType(operationSuccessNode);
				nodesParsed.add(operationSuccessNode);
				this.operationSuccess = operationSuccessObj;
			}
			//System.debug(this.operationSuccess);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType operationSuccessObj = this.operationSuccess;
			Dom.XmlNode operationSuccessNode = outerNode.addChildElement('operationSuccess', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(operationSuccessObj != null){
				operationSuccessObj.populateXmlNode(operationSuccessNode);
			}
		}
	}
	public class LoanApprovalDataDetailType {
		public BasicTypesService.AccountNumberType spotterNumber;
		public BasicTypesService.AccountNumberType mediatorsProvAccNumber;
		public String externalNumber;
		public String payingSegmentPrefixNumber;
		public String payingSegmentNumber;
		public String payingSegmentBankCode;
		public String payingSegmentConstaintSymbol;
		public String payingSegmentVariableSymbol;
		public String payingSegmentSpecificSymbol;
		public String payingSegmentAV;
		public String payingSegmentRecipient;
		public String directDebitPrefixNumber;
		public String directDebitNumber;
		public String directDebitBankCode;
		public Long directDebitTerm;
		private transient String[] spotterNumber_type_info = new String[]{'spotterNumber',s_ns0,'AccountNumberType','0','1','false'};
		private transient String[] mediatorsProvAccNumber_type_info = new String[]{'mediatorsProvAccNumber',s_ns0,'AccountNumberType','0','1','false'};
		private transient String[] externalNumber_type_info = new String[]{'externalNumber',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] payingSegmentPrefixNumber_type_info = new String[]{'payingSegmentPrefixNumber',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] payingSegmentNumber_type_info = new String[]{'payingSegmentNumber',s_ns0,'DescriptionType','1','1','false'};
		private transient String[] payingSegmentBankCode_type_info = new String[]{'payingSegmentBankCode',s_ns0,'DescriptionType','1','1','false'};
		private transient String[] payingSegmentConstaintSymbol_type_info = new String[]{'payingSegmentConstaintSymbol',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] payingSegmentVariableSymbol_type_info = new String[]{'payingSegmentVariableSymbol',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] payingSegmentSpecificSymbol_type_info = new String[]{'payingSegmentSpecificSymbol',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] payingSegmentAV_type_info = new String[]{'payingSegmentAV',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] payingSegmentRecipient_type_info = new String[]{'payingSegmentRecipient',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] directDebitPrefixNumber_type_info = new String[]{'directDebitPrefixNumber',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] directDebitNumber_type_info = new String[]{'directDebitNumber',s_ns0,'DescriptionType','1','1','false'};
		private transient String[] directDebitBankCode_type_info = new String[]{'directDebitBankCode',s_ns0,'DescriptionType','1','1','false'};
		private transient String[] directDebitTerm_type_info = new String[]{'directDebitTerm',s_ns0,'CommonNumberType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'spotterNumber','mediatorsProvAccNumber','externalNumber','payingSegmentPrefixNumber','payingSegmentNumber','payingSegmentBankCode','payingSegmentConstaintSymbol','payingSegmentVariableSymbol','payingSegmentSpecificSymbol','payingSegmentAV','payingSegmentRecipient','directDebitPrefixNumber','directDebitNumber','directDebitBankCode','directDebitTerm'};
		public LoanApprovalDataDetailType(){
		}
		public LoanApprovalDataDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode spotterNumberNode = responseNode.getChildElement('spotterNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(spotterNumberNode == null){
				this.spotterNumber = null;
			} else{
				BasicTypesService.AccountNumberType spotterNumberObj = new BasicTypesService.AccountNumberType(spotterNumberNode);
				nodesParsed.add(spotterNumberNode);
				this.spotterNumber = spotterNumberObj;
			}
			//System.debug(this.spotterNumber);			
			DOM.XmlNode mediatorsProvAccNumberNode = responseNode.getChildElement('mediatorsProvAccNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(mediatorsProvAccNumberNode == null){
				this.mediatorsProvAccNumber = null;
			} else{
				BasicTypesService.AccountNumberType mediatorsProvAccNumberObj = new BasicTypesService.AccountNumberType(mediatorsProvAccNumberNode);
				nodesParsed.add(mediatorsProvAccNumberNode);
				this.mediatorsProvAccNumber = mediatorsProvAccNumberObj;
			}
			//System.debug(this.mediatorsProvAccNumber);			
			DOM.XmlNode externalNumberNode = responseNode.getChildElement('externalNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.externalNumber = (externalNumberNode == null) ? null : externalNumberNode.getText();
			nodesParsed.add(externalNumberNode);
			//System.debug(this.externalNumber);			
			DOM.XmlNode payingSegmentPrefixNumberNode = responseNode.getChildElement('payingSegmentPrefixNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.payingSegmentPrefixNumber = (payingSegmentPrefixNumberNode == null) ? null : payingSegmentPrefixNumberNode.getText();
			nodesParsed.add(payingSegmentPrefixNumberNode);
			//System.debug(this.payingSegmentPrefixNumber);			
			DOM.XmlNode payingSegmentNumberNode = responseNode.getChildElement('payingSegmentNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.payingSegmentNumber = (payingSegmentNumberNode == null) ? null : payingSegmentNumberNode.getText();
			nodesParsed.add(payingSegmentNumberNode);
			//System.debug(this.payingSegmentNumber);			
			DOM.XmlNode payingSegmentBankCodeNode = responseNode.getChildElement('payingSegmentBankCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.payingSegmentBankCode = (payingSegmentBankCodeNode == null) ? null : payingSegmentBankCodeNode.getText();
			nodesParsed.add(payingSegmentBankCodeNode);
			//System.debug(this.payingSegmentBankCode);			
			DOM.XmlNode payingSegmentConstaintSymbolNode = responseNode.getChildElement('payingSegmentConstaintSymbol', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.payingSegmentConstaintSymbol = (payingSegmentConstaintSymbolNode == null) ? null : payingSegmentConstaintSymbolNode.getText();
			nodesParsed.add(payingSegmentConstaintSymbolNode);
			//System.debug(this.payingSegmentConstaintSymbol);			
			DOM.XmlNode payingSegmentVariableSymbolNode = responseNode.getChildElement('payingSegmentVariableSymbol', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.payingSegmentVariableSymbol = (payingSegmentVariableSymbolNode == null) ? null : payingSegmentVariableSymbolNode.getText();
			nodesParsed.add(payingSegmentVariableSymbolNode);
			//System.debug(this.payingSegmentVariableSymbol);			
			DOM.XmlNode payingSegmentSpecificSymbolNode = responseNode.getChildElement('payingSegmentSpecificSymbol', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.payingSegmentSpecificSymbol = (payingSegmentSpecificSymbolNode == null) ? null : payingSegmentSpecificSymbolNode.getText();
			nodesParsed.add(payingSegmentSpecificSymbolNode);
			//System.debug(this.payingSegmentSpecificSymbol);			
			DOM.XmlNode payingSegmentAVNode = responseNode.getChildElement('payingSegmentAV', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.payingSegmentAV = (payingSegmentAVNode == null) ? null : payingSegmentAVNode.getText();
			nodesParsed.add(payingSegmentAVNode);
			//System.debug(this.payingSegmentAV);			
			DOM.XmlNode payingSegmentRecipientNode = responseNode.getChildElement('payingSegmentRecipient', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.payingSegmentRecipient = (payingSegmentRecipientNode == null) ? null : payingSegmentRecipientNode.getText();
			nodesParsed.add(payingSegmentRecipientNode);
			//System.debug(this.payingSegmentRecipient);			
			DOM.XmlNode directDebitPrefixNumberNode = responseNode.getChildElement('directDebitPrefixNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.directDebitPrefixNumber = (directDebitPrefixNumberNode == null) ? null : directDebitPrefixNumberNode.getText();
			nodesParsed.add(directDebitPrefixNumberNode);
			//System.debug(this.directDebitPrefixNumber);			
			DOM.XmlNode directDebitNumberNode = responseNode.getChildElement('directDebitNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.directDebitNumber = (directDebitNumberNode == null) ? null : directDebitNumberNode.getText();
			nodesParsed.add(directDebitNumberNode);
			//System.debug(this.directDebitNumber);			
			DOM.XmlNode directDebitBankCodeNode = responseNode.getChildElement('directDebitBankCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.directDebitBankCode = (directDebitBankCodeNode == null) ? null : directDebitBankCodeNode.getText();
			nodesParsed.add(directDebitBankCodeNode);
			//System.debug(this.directDebitBankCode);			
			DOM.XmlNode directDebitTermNode = responseNode.getChildElement('directDebitTerm', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.directDebitTerm = (directDebitTermNode == null) ? null : Long.valueOf(directDebitTermNode.getText());
			nodesParsed.add(directDebitTermNode);
			//System.debug(this.directDebitTerm);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType spotterNumberObj = this.spotterNumber;
			Dom.XmlNode spotterNumberNode = outerNode.addChildElement('spotterNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(spotterNumberObj != null){
				spotterNumberObj.populateXmlNode(spotterNumberNode);
			}
			
			BasicTypesService.AccountNumberType mediatorsProvAccNumberObj = this.mediatorsProvAccNumber;
			Dom.XmlNode mediatorsProvAccNumberNode = outerNode.addChildElement('mediatorsProvAccNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(mediatorsProvAccNumberObj != null){
				mediatorsProvAccNumberObj.populateXmlNode(mediatorsProvAccNumberNode);
			}
			Dom.XmlNode externalNumberNode = outerNode.addChildElement('externalNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			externalNumberNode.addTextNode((this.externalNumber == null) ? '' : this.externalNumber);
			Dom.XmlNode payingSegmentPrefixNumberNode = outerNode.addChildElement('payingSegmentPrefixNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			payingSegmentPrefixNumberNode.addTextNode((this.payingSegmentPrefixNumber == null) ? '' : this.payingSegmentPrefixNumber);
			Dom.XmlNode payingSegmentNumberNode = outerNode.addChildElement('payingSegmentNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.payingSegmentNumber != null){
				payingSegmentNumberNode.addTextNode(this.payingSegmentNumber);
			}
			Dom.XmlNode payingSegmentBankCodeNode = outerNode.addChildElement('payingSegmentBankCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.payingSegmentBankCode != null){
				payingSegmentBankCodeNode.addTextNode(this.payingSegmentBankCode);
			}
			Dom.XmlNode payingSegmentConstaintSymbolNode = outerNode.addChildElement('payingSegmentConstaintSymbol', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			payingSegmentConstaintSymbolNode.addTextNode((this.payingSegmentConstaintSymbol == null) ? '' : this.payingSegmentConstaintSymbol);
			Dom.XmlNode payingSegmentVariableSymbolNode = outerNode.addChildElement('payingSegmentVariableSymbol', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			payingSegmentVariableSymbolNode.addTextNode((this.payingSegmentVariableSymbol == null) ? '' : this.payingSegmentVariableSymbol);
			Dom.XmlNode payingSegmentSpecificSymbolNode = outerNode.addChildElement('payingSegmentSpecificSymbol', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			payingSegmentSpecificSymbolNode.addTextNode((this.payingSegmentSpecificSymbol == null) ? '' : this.payingSegmentSpecificSymbol);
			Dom.XmlNode payingSegmentAVNode = outerNode.addChildElement('payingSegmentAV', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			payingSegmentAVNode.addTextNode((this.payingSegmentAV == null) ? '' : this.payingSegmentAV);
			Dom.XmlNode payingSegmentRecipientNode = outerNode.addChildElement('payingSegmentRecipient', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			payingSegmentRecipientNode.addTextNode((this.payingSegmentRecipient == null) ? '' : this.payingSegmentRecipient);
			Dom.XmlNode directDebitPrefixNumberNode = outerNode.addChildElement('directDebitPrefixNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			directDebitPrefixNumberNode.addTextNode((this.directDebitPrefixNumber == null) ? '' : this.directDebitPrefixNumber);
			Dom.XmlNode directDebitNumberNode = outerNode.addChildElement('directDebitNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.directDebitNumber != null){
				directDebitNumberNode.addTextNode(this.directDebitNumber);
			}
			Dom.XmlNode directDebitBankCodeNode = outerNode.addChildElement('directDebitBankCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.directDebitBankCode != null){
				directDebitBankCodeNode.addTextNode(this.directDebitBankCode);
			}
			Dom.XmlNode directDebitTermNode = outerNode.addChildElement('directDebitTerm', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.directDebitTerm != null){
				directDebitTermNode.addTextNode(String.valueOf(this.directDebitTerm));
			}
		}
	}
	public class LoanContractDetailType {
		// Restriction enumeration: 
		public String interestRate;
		public Long duration;
		// Restriction enumeration: 
		public String payment;
		private transient String[] interestRate_type_info = new String[]{'interestRate',s_ns0,'InterestRateType','0','1','false'};
		private transient String[] duration_type_info = new String[]{'duration',s_ns0,'NumberOfItemsType','0','1','false'};
		private transient String[] payment_type_info = new String[]{'payment',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'interestRate','duration','payment'};
		public LoanContractDetailType(){
		}
		public LoanContractDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode interestRateNode = responseNode.getChildElement('interestRate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.interestRate = (interestRateNode == null) ? null : interestRateNode.getText();
			nodesParsed.add(interestRateNode);
			//System.debug(this.interestRate);			
			DOM.XmlNode durationNode = responseNode.getChildElement('duration', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.duration = (durationNode == null) ? null : Long.valueOf(durationNode.getText());
			nodesParsed.add(durationNode);
			//System.debug(this.duration);			
			DOM.XmlNode paymentNode = responseNode.getChildElement('payment', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.payment = (paymentNode == null) ? null : paymentNode.getText();
			nodesParsed.add(paymentNode);
			//System.debug(this.payment);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode interestRateNode = outerNode.addChildElement('interestRate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			interestRateNode.addTextNode((this.interestRate == null) ? '' : this.interestRate);
			Dom.XmlNode durationNode = outerNode.addChildElement('duration', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			durationNode.addTextNode((this.duration == null) ? '' : String.valueOf(this.duration));
			Dom.XmlNode paymentNode = outerNode.addChildElement('payment', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			paymentNode.addTextNode((this.payment == null) ? '' : this.payment);
		}
	}
	public class LoanOtherActionsDetailType {
		public Long code;
		private transient String[] code_type_info = new String[]{'code',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'code'};
		public LoanOtherActionsDetailType(){
		}
		public LoanOtherActionsDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode codeNode = responseNode.getChildElement('code', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.code = (codeNode == null) ? null : Long.valueOf(codeNode.getText());
			nodesParsed.add(codeNode);
			//System.debug(this.code);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode codeNode = outerNode.addChildElement('code', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			codeNode.addTextNode((this.code == null) ? '' : String.valueOf(this.code));
		}
	}
	public class MediatorDetailType {
		public BasicTypesService.AccountNumberType provAccNumber;
		public String firstName;
		public String lastName;
		public String companyName;
		public String street;
		public String houseNumber;
		public String town;
		public String postCode;
		public String phone;
		public String email;
		private transient String[] provAccNumber_type_info = new String[]{'provAccNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] firstName_type_info = new String[]{'firstName',s_ns0,'FirstNameType','0','1','false'};
		private transient String[] lastName_type_info = new String[]{'lastName',s_ns0,'LastNameType','0','1','false'};
		private transient String[] companyName_type_info = new String[]{'companyName',s_ns0,'CompanyNameType','0','1','false'};
		private transient String[] street_type_info = new String[]{'street',s_ns0,'StreetNameType','0','1','false'};
		private transient String[] houseNumber_type_info = new String[]{'houseNumber',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] town_type_info = new String[]{'town',s_ns0,'CityNameType','0','1','false'};
		private transient String[] postCode_type_info = new String[]{'postCode',s_ns0,'PostCodeType','0','1','false'};
		private transient String[] phone_type_info = new String[]{'phone',s_ns0,'PhoneNumberType','0','1','false'};
		private transient String[] email_type_info = new String[]{'email',s_ns0,'EmailType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'provAccNumber','firstName','lastName','companyName','street','houseNumber','town','postCode','phone','email'};
		public MediatorDetailType(){
		}
		public MediatorDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode provAccNumberNode = responseNode.getChildElement('provAccNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(provAccNumberNode == null){
				this.provAccNumber = null;
			} else{
				BasicTypesService.AccountNumberType provAccNumberObj = new BasicTypesService.AccountNumberType(provAccNumberNode);
				nodesParsed.add(provAccNumberNode);
				this.provAccNumber = provAccNumberObj;
			}
			//System.debug(this.provAccNumber);			
			DOM.XmlNode firstNameNode = responseNode.getChildElement('firstName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.firstName = (firstNameNode == null) ? null : firstNameNode.getText();
			nodesParsed.add(firstNameNode);
			//System.debug(this.firstName);			
			DOM.XmlNode lastNameNode = responseNode.getChildElement('lastName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.lastName = (lastNameNode == null) ? null : lastNameNode.getText();
			nodesParsed.add(lastNameNode);
			//System.debug(this.lastName);			
			DOM.XmlNode companyNameNode = responseNode.getChildElement('companyName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.companyName = (companyNameNode == null) ? null : companyNameNode.getText();
			nodesParsed.add(companyNameNode);
			//System.debug(this.companyName);			
			DOM.XmlNode streetNode = responseNode.getChildElement('street', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.street = (streetNode == null) ? null : streetNode.getText();
			nodesParsed.add(streetNode);
			//System.debug(this.street);			
			DOM.XmlNode houseNumberNode = responseNode.getChildElement('houseNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.houseNumber = (houseNumberNode == null) ? null : houseNumberNode.getText();
			nodesParsed.add(houseNumberNode);
			//System.debug(this.houseNumber);			
			DOM.XmlNode townNode = responseNode.getChildElement('town', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.town = (townNode == null) ? null : townNode.getText();
			nodesParsed.add(townNode);
			//System.debug(this.town);			
			DOM.XmlNode postCodeNode = responseNode.getChildElement('postCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.postCode = (postCodeNode == null) ? null : postCodeNode.getText();
			nodesParsed.add(postCodeNode);
			//System.debug(this.postCode);			
			DOM.XmlNode phoneNode = responseNode.getChildElement('phone', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.phone = (phoneNode == null) ? null : phoneNode.getText();
			nodesParsed.add(phoneNode);
			//System.debug(this.phone);			
			DOM.XmlNode emailNode = responseNode.getChildElement('email', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.email = (emailNode == null) ? null : emailNode.getText();
			nodesParsed.add(emailNode);
			//System.debug(this.email);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType provAccNumberObj = this.provAccNumber;
			Dom.XmlNode provAccNumberNode = outerNode.addChildElement('provAccNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(provAccNumberObj != null){
				provAccNumberObj.populateXmlNode(provAccNumberNode);
			}
			Dom.XmlNode firstNameNode = outerNode.addChildElement('firstName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			firstNameNode.addTextNode((this.firstName == null) ? '' : this.firstName);
			Dom.XmlNode lastNameNode = outerNode.addChildElement('lastName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			lastNameNode.addTextNode((this.lastName == null) ? '' : this.lastName);
			Dom.XmlNode companyNameNode = outerNode.addChildElement('companyName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			companyNameNode.addTextNode((this.companyName == null) ? '' : this.companyName);
			Dom.XmlNode streetNode = outerNode.addChildElement('street', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			streetNode.addTextNode((this.street == null) ? '' : this.street);
			Dom.XmlNode houseNumberNode = outerNode.addChildElement('houseNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			houseNumberNode.addTextNode((this.houseNumber == null) ? '' : this.houseNumber);
			Dom.XmlNode townNode = outerNode.addChildElement('town', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			townNode.addTextNode((this.town == null) ? '' : this.town);
			Dom.XmlNode postCodeNode = outerNode.addChildElement('postCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			postCodeNode.addTextNode((this.postCode == null) ? '' : this.postCode);
			Dom.XmlNode phoneNode = outerNode.addChildElement('phone', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			phoneNode.addTextNode((this.phone == null) ? '' : this.phone);
			Dom.XmlNode emailNode = outerNode.addChildElement('email', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			emailNode.addTextNode((this.email == null) ? '' : this.email);
		}
	}
	public class NewContractDataType {
		public Long particPersonNumber;
		public BasicTypesService.AccountNumberType contractIdNumber;
		public String advantageCode;
		public String DIMAName;
		// Restriction enumeration: 
		public String targetSum;
		public Long rateOptionCode;
		// Restriction enumeration: 
		public String monthDeposit;
		public Boolean subveneState;
		private transient String[] particPersonNumber_type_info = new String[]{'particPersonNumber',s_ns0,'PersonNumberType','0','1','false'};
		private transient String[] contractIdNumber_type_info = new String[]{'contractIdNumber',s_ns0,'AccountNumberType','0','1','false'};
		private transient String[] advantageCode_type_info = new String[]{'advantageCode',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] DIMAName_type_info = new String[]{'DIMAName',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] targetSum_type_info = new String[]{'targetSum',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] rateOptionCode_type_info = new String[]{'rateOptionCode',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] monthDeposit_type_info = new String[]{'monthDeposit',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] subveneState_type_info = new String[]{'subveneState',s_ns0,'BooleanFlagType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'particPersonNumber','contractIdNumber','advantageCode','DIMAName','targetSum','rateOptionCode','monthDeposit','subveneState'};
		public NewContractDataType(){
		}
		public NewContractDataType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode particPersonNumberNode = responseNode.getChildElement('particPersonNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.particPersonNumber = (particPersonNumberNode == null) ? null : Long.valueOf(particPersonNumberNode.getText());
			nodesParsed.add(particPersonNumberNode);
			//System.debug(this.particPersonNumber);			
			DOM.XmlNode contractIdNumberNode = responseNode.getChildElement('contractIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(contractIdNumberNode == null){
				this.contractIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType contractIdNumberObj = new BasicTypesService.AccountNumberType(contractIdNumberNode);
				nodesParsed.add(contractIdNumberNode);
				this.contractIdNumber = contractIdNumberObj;
			}
			//System.debug(this.contractIdNumber);			
			DOM.XmlNode advantageCodeNode = responseNode.getChildElement('advantageCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.advantageCode = (advantageCodeNode == null) ? null : advantageCodeNode.getText();
			nodesParsed.add(advantageCodeNode);
			//System.debug(this.advantageCode);			
			DOM.XmlNode DIMANameNode = responseNode.getChildElement('DIMAName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.DIMAName = (DIMANameNode == null) ? null : DIMANameNode.getText();
			nodesParsed.add(DIMANameNode);
			//System.debug(this.DIMAName);			
			DOM.XmlNode targetSumNode = responseNode.getChildElement('targetSum', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.targetSum = (targetSumNode == null) ? null : targetSumNode.getText();
			nodesParsed.add(targetSumNode);
			//System.debug(this.targetSum);			
			DOM.XmlNode rateOptionCodeNode = responseNode.getChildElement('rateOptionCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.rateOptionCode = (rateOptionCodeNode == null) ? null : Long.valueOf(rateOptionCodeNode.getText());
			nodesParsed.add(rateOptionCodeNode);
			//System.debug(this.rateOptionCode);			
			DOM.XmlNode monthDepositNode = responseNode.getChildElement('monthDeposit', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.monthDeposit = (monthDepositNode == null) ? null : monthDepositNode.getText();
			nodesParsed.add(monthDepositNode);
			//System.debug(this.monthDeposit);			
			DOM.XmlNode subveneStateNode = responseNode.getChildElement('subveneState', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.subveneState = (subveneStateNode == null) ? null : Boolean.valueOf(subveneStateNode.getText());
			nodesParsed.add(subveneStateNode);
			//System.debug(this.subveneState);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode particPersonNumberNode = outerNode.addChildElement('particPersonNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			particPersonNumberNode.addTextNode((this.particPersonNumber == null) ? '' : String.valueOf(this.particPersonNumber));
			
			BasicTypesService.AccountNumberType contractIdNumberObj = this.contractIdNumber;
			Dom.XmlNode contractIdNumberNode = outerNode.addChildElement('contractIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(contractIdNumberObj != null){
				contractIdNumberObj.populateXmlNode(contractIdNumberNode);
			}
			Dom.XmlNode advantageCodeNode = outerNode.addChildElement('advantageCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			advantageCodeNode.addTextNode((this.advantageCode == null) ? '' : this.advantageCode);
			Dom.XmlNode DIMANameNode = outerNode.addChildElement('DIMAName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			DIMANameNode.addTextNode((this.DIMAName == null) ? '' : this.DIMAName);
			Dom.XmlNode targetSumNode = outerNode.addChildElement('targetSum', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.targetSum != null){
				targetSumNode.addTextNode(this.targetSum);
			}
			Dom.XmlNode rateOptionCodeNode = outerNode.addChildElement('rateOptionCode', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.rateOptionCode != null){
				rateOptionCodeNode.addTextNode(String.valueOf(this.rateOptionCode));
			}
			Dom.XmlNode monthDepositNode = outerNode.addChildElement('monthDeposit', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.monthDeposit != null){
				monthDepositNode.addTextNode(this.monthDeposit);
			}
			Dom.XmlNode subveneStateNode = outerNode.addChildElement('subveneState', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.subveneState != null){
				subveneStateNode.addTextNode(String.valueOf(this.subveneState));
			}
		}
	}
	public class PackagesItemType {
		public String packageId;
		// Restriction enumeration: CS_PACKAGE, LOAN_ADVANTAGE, OTHER_LOAN_ACTION, CREDIT_REGRANTING
		public String packageType;
		// Restriction enumeration: 
		public String fee;
		// Restriction enumeration: 
		public String discount;
		// Restriction enumeration: 
		public Date validFrom;
		// Restriction enumeration: 
		public Date validTo;
		private transient String[] packageId_type_info = new String[]{'packageId',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] packageType_type_info = new String[]{'packageType',s_ns0,'PackageType','0','1','false'};
		private transient String[] fee_type_info = new String[]{'fee',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] discount_type_info = new String[]{'discount',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] validFrom_type_info = new String[]{'validFrom',s_ns0,'CommonDateType','0','1','false'};
		private transient String[] validTo_type_info = new String[]{'validTo',s_ns0,'CommonDateType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'packageId','packageType','fee','discount','validFrom','validTo'};
		public PackagesItemType(){
		}
		public PackagesItemType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode packageIdNode = responseNode.getChildElement('packageId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.packageId = (packageIdNode == null) ? null : packageIdNode.getText();
			nodesParsed.add(packageIdNode);
			//System.debug(this.packageId);			
			DOM.XmlNode packageTypeNode = responseNode.getChildElement('packageType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.packageType = (packageTypeNode == null) ? null : packageTypeNode.getText();
			nodesParsed.add(packageTypeNode);
			//System.debug(this.packageType);			
			DOM.XmlNode feeNode = responseNode.getChildElement('fee', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.fee = (feeNode == null) ? null : feeNode.getText();
			nodesParsed.add(feeNode);
			//System.debug(this.fee);			
			DOM.XmlNode discountNode = responseNode.getChildElement('discount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.discount = (discountNode == null) ? null : discountNode.getText();
			nodesParsed.add(discountNode);
			//System.debug(this.discount);			
			DOM.XmlNode validFromNode = responseNode.getChildElement('validFrom', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.validFrom = (validFromNode == null) ? null : Date.valueOf(validFromNode.getText());
			nodesParsed.add(validFromNode);
			//System.debug(this.validFrom);			
			DOM.XmlNode validToNode = responseNode.getChildElement('validTo', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.validTo = (validToNode == null) ? null : Date.valueOf(validToNode.getText());
			nodesParsed.add(validToNode);
			//System.debug(this.validTo);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode packageIdNode = outerNode.addChildElement('packageId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			packageIdNode.addTextNode((this.packageId == null) ? '' : this.packageId);
			Dom.XmlNode packageTypeNode = outerNode.addChildElement('packageType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			packageTypeNode.addTextNode((this.packageType == null) ? '' : this.packageType);
			Dom.XmlNode feeNode = outerNode.addChildElement('fee', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			feeNode.addTextNode((this.fee == null) ? '' : this.fee);
			Dom.XmlNode discountNode = outerNode.addChildElement('discount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			discountNode.addTextNode((this.discount == null) ? '' : this.discount);
			Dom.XmlNode validFromNode = outerNode.addChildElement('validFrom', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			validFromNode.addTextNode((this.validFrom == null) ? '' : String.valueOf(this.validFrom));
			Dom.XmlNode validToNode = outerNode.addChildElement('validTo', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			validToNode.addTextNode((this.validTo == null) ? '' : String.valueOf(this.validTo));
		}
	}
	public class PersonDetailType {
		public Long personType;
		public String firstName;
		public String lastName;
		public String companyName;
		private transient String[] personType_type_info = new String[]{'personType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] firstName_type_info = new String[]{'firstName',s_ns0,'FirstNameType','0','1','false'};
		private transient String[] lastName_type_info = new String[]{'lastName',s_ns0,'LastNameType','0','1','false'};
		private transient String[] companyName_type_info = new String[]{'companyName',s_ns0,'CompanyNameType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'personType','firstName','lastName','companyName'};
		public PersonDetailType(){
		}
		public PersonDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode personTypeNode = responseNode.getChildElement('personType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.personType = (personTypeNode == null) ? null : Long.valueOf(personTypeNode.getText());
			nodesParsed.add(personTypeNode);
			//System.debug(this.personType);			
			DOM.XmlNode firstNameNode = responseNode.getChildElement('firstName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.firstName = (firstNameNode == null) ? null : firstNameNode.getText();
			nodesParsed.add(firstNameNode);
			//System.debug(this.firstName);			
			DOM.XmlNode lastNameNode = responseNode.getChildElement('lastName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.lastName = (lastNameNode == null) ? null : lastNameNode.getText();
			nodesParsed.add(lastNameNode);
			//System.debug(this.lastName);			
			DOM.XmlNode companyNameNode = responseNode.getChildElement('companyName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.companyName = (companyNameNode == null) ? null : companyNameNode.getText();
			nodesParsed.add(companyNameNode);
			//System.debug(this.companyName);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode personTypeNode = outerNode.addChildElement('personType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.personType != null){
				personTypeNode.addTextNode(String.valueOf(this.personType));
			}
			Dom.XmlNode firstNameNode = outerNode.addChildElement('firstName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			firstNameNode.addTextNode((this.firstName == null) ? '' : this.firstName);
			Dom.XmlNode lastNameNode = outerNode.addChildElement('lastName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			lastNameNode.addTextNode((this.lastName == null) ? '' : this.lastName);
			Dom.XmlNode companyNameNode = outerNode.addChildElement('companyName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			companyNameNode.addTextNode((this.companyName == null) ? '' : this.companyName);
		}
	}
	public class PersonListType {
		public LoanServiceDataTypes.PersonDetailType[] personDetail;
		private transient String[] personDetail_type_info = new String[]{'personDetail',s_ns0,'PersonDetailType','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'personDetail'};
		public PersonListType(){
		}
		public PersonListType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] personDetailChildren = responseNode.getChildElements();
			LoanServiceDataTypes.PersonDetailType[] personDetailList = new List<LoanServiceDataTypes.PersonDetailType>();
			if(personDetailChildren == null || personDetailChildren.size() == 0){
				this.personDetail = null;
			} else{
				for(DOM.XmlNode childNode : personDetailChildren){
					if(childNode.GetName() == 'personDetail'){
						LoanServiceDataTypes.PersonDetailType Obj = new LoanServiceDataTypes.PersonDetailType(childNode);
						personDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.personDetail = personDetailList;
			}
			//System.debug(this.personDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			LoanServiceDataTypes.PersonDetailType[] personDetailObj = this.personDetail;
			if(personDetailObj != null){
				for(LoanServiceDataTypes.PersonDetailType element: personDetailObj){
					Dom.XmlNode personDetailNode = outerNode.addChildElement('personDetail', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
					element.populateXmlNode(personDetailNode);
				}
			}			
		}
	}
	public class ProductIdsDetailType {
		public String productNumber;
		public String productType;
		private transient String[] productNumber_type_info = new String[]{'productNumber',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] productType_type_info = new String[]{'productType',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'productNumber','productType'};
		public ProductIdsDetailType(){
		}
		public ProductIdsDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode productNumberNode = responseNode.getChildElement('productNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.productNumber = (productNumberNode == null) ? null : productNumberNode.getText();
			nodesParsed.add(productNumberNode);
			//System.debug(this.productNumber);			
			DOM.XmlNode productTypeNode = responseNode.getChildElement('productType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.productType = (productTypeNode == null) ? null : productTypeNode.getText();
			nodesParsed.add(productTypeNode);
			//System.debug(this.productType);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode productNumberNode = outerNode.addChildElement('productNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.productNumber != null){
				productNumberNode.addTextNode(this.productNumber);
			}
			Dom.XmlNode productTypeNode = outerNode.addChildElement('productType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.productType != null){
				productTypeNode.addTextNode(this.productType);
			}
		}
	}
	public class PurposeDataDetailType {
		public String propertyNote;
		public String cadastralRegion;
		public Long housingNeedType;
		public Long residenceStatusType;
		private transient String[] propertyNote_type_info = new String[]{'propertyNote',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] cadastralRegion_type_info = new String[]{'cadastralRegion',s_ns0,'CadastralRegionNameType','0','1','false'};
		private transient String[] housingNeedType_type_info = new String[]{'housingNeedType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] residenceStatusType_type_info = new String[]{'residenceStatusType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'propertyNote','cadastralRegion','housingNeedType','residenceStatusType'};
		public PurposeDataDetailType(){
		}
		public PurposeDataDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode propertyNoteNode = responseNode.getChildElement('propertyNote', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.propertyNote = (propertyNoteNode == null) ? null : propertyNoteNode.getText();
			nodesParsed.add(propertyNoteNode);
			//System.debug(this.propertyNote);			
			DOM.XmlNode cadastralRegionNode = responseNode.getChildElement('cadastralRegion', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.cadastralRegion = (cadastralRegionNode == null) ? null : cadastralRegionNode.getText();
			nodesParsed.add(cadastralRegionNode);
			//System.debug(this.cadastralRegion);			
			DOM.XmlNode housingNeedTypeNode = responseNode.getChildElement('housingNeedType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.housingNeedType = (housingNeedTypeNode == null) ? null : Long.valueOf(housingNeedTypeNode.getText());
			nodesParsed.add(housingNeedTypeNode);
			//System.debug(this.housingNeedType);			
			DOM.XmlNode residenceStatusTypeNode = responseNode.getChildElement('residenceStatusType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.residenceStatusType = (residenceStatusTypeNode == null) ? null : Long.valueOf(residenceStatusTypeNode.getText());
			nodesParsed.add(residenceStatusTypeNode);
			//System.debug(this.residenceStatusType);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode propertyNoteNode = outerNode.addChildElement('propertyNote', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			propertyNoteNode.addTextNode((this.propertyNote == null) ? '' : this.propertyNote);
			Dom.XmlNode cadastralRegionNode = outerNode.addChildElement('cadastralRegion', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			cadastralRegionNode.addTextNode((this.cadastralRegion == null) ? '' : this.cadastralRegion);
			Dom.XmlNode housingNeedTypeNode = outerNode.addChildElement('housingNeedType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			housingNeedTypeNode.addTextNode((this.housingNeedType == null) ? '' : String.valueOf(this.housingNeedType));
			Dom.XmlNode residenceStatusTypeNode = outerNode.addChildElement('residenceStatusType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			residenceStatusTypeNode.addTextNode((this.residenceStatusType == null) ? '' : String.valueOf(this.residenceStatusType));
		}
	}
	public class RelationPersonDetailType {
		public Long personNumber;
		public Long clientRole;
		public Boolean unrestrictedJointAssets;
		public Long householdNumber;
		public Long relationshipType;
		public Boolean isDebtorsParent;
		public Long residenceCountry;
		public String residenceCurrency;
		public Boolean limitedLegalCapacity;
		private transient String[] personNumber_type_info = new String[]{'personNumber',s_ns0,'PersonNumberType','1','1','false'};
		private transient String[] clientRole_type_info = new String[]{'clientRole',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] unrestrictedJointAssets_type_info = new String[]{'unrestrictedJointAssets',s_ns0,'BooleanFlagType','0','1','false'};
		private transient String[] householdNumber_type_info = new String[]{'householdNumber',s_ns0,'CommonNumberType','0','1','false'};
		private transient String[] relationshipType_type_info = new String[]{'relationshipType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] isDebtorsParent_type_info = new String[]{'isDebtorsParent',s_ns0,'BooleanFlagType','0','1','false'};
		private transient String[] residenceCountry_type_info = new String[]{'residenceCountry',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] residenceCurrency_type_info = new String[]{'residenceCurrency',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] limitedLegalCapacity_type_info = new String[]{'limitedLegalCapacity',s_ns0,'BooleanFlagType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'personNumber','clientRole','unrestrictedJointAssets','householdNumber','relationshipType','isDebtorsParent','residenceCountry','residenceCurrency','limitedLegalCapacity'};
		public RelationPersonDetailType(){
		}
		public RelationPersonDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode personNumberNode = responseNode.getChildElement('personNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.personNumber = (personNumberNode == null) ? null : Long.valueOf(personNumberNode.getText());
			nodesParsed.add(personNumberNode);
			//System.debug(this.personNumber);			
			DOM.XmlNode clientRoleNode = responseNode.getChildElement('clientRole', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.clientRole = (clientRoleNode == null) ? null : Long.valueOf(clientRoleNode.getText());
			nodesParsed.add(clientRoleNode);
			//System.debug(this.clientRole);			
			DOM.XmlNode unrestrictedJointAssetsNode = responseNode.getChildElement('unrestrictedJointAssets', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.unrestrictedJointAssets = (unrestrictedJointAssetsNode == null) ? null : Boolean.valueOf(unrestrictedJointAssetsNode.getText());
			nodesParsed.add(unrestrictedJointAssetsNode);
			//System.debug(this.unrestrictedJointAssets);			
			DOM.XmlNode householdNumberNode = responseNode.getChildElement('householdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.householdNumber = (householdNumberNode == null) ? null : Long.valueOf(householdNumberNode.getText());
			nodesParsed.add(householdNumberNode);
			//System.debug(this.householdNumber);			
			DOM.XmlNode relationshipTypeNode = responseNode.getChildElement('relationshipType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.relationshipType = (relationshipTypeNode == null) ? null : Long.valueOf(relationshipTypeNode.getText());
			nodesParsed.add(relationshipTypeNode);
			//System.debug(this.relationshipType);			
			DOM.XmlNode isDebtorsParentNode = responseNode.getChildElement('isDebtorsParent', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.isDebtorsParent = (isDebtorsParentNode == null) ? null : Boolean.valueOf(isDebtorsParentNode.getText());
			nodesParsed.add(isDebtorsParentNode);
			//System.debug(this.isDebtorsParent);			
			DOM.XmlNode residenceCountryNode = responseNode.getChildElement('residenceCountry', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.residenceCountry = (residenceCountryNode == null) ? null : Long.valueOf(residenceCountryNode.getText());
			nodesParsed.add(residenceCountryNode);
			//System.debug(this.residenceCountry);			
			DOM.XmlNode residenceCurrencyNode = responseNode.getChildElement('residenceCurrency', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.residenceCurrency = (residenceCurrencyNode == null) ? null : residenceCurrencyNode.getText();
			nodesParsed.add(residenceCurrencyNode);
			//System.debug(this.residenceCurrency);			
			DOM.XmlNode limitedLegalCapacityNode = responseNode.getChildElement('limitedLegalCapacity', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.limitedLegalCapacity = (limitedLegalCapacityNode == null) ? null : Boolean.valueOf(limitedLegalCapacityNode.getText());
			nodesParsed.add(limitedLegalCapacityNode);
			//System.debug(this.limitedLegalCapacity);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode personNumberNode = outerNode.addChildElement('personNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.personNumber != null){
				personNumberNode.addTextNode(String.valueOf(this.personNumber));
			}
			Dom.XmlNode clientRoleNode = outerNode.addChildElement('clientRole', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.clientRole != null){
				clientRoleNode.addTextNode(String.valueOf(this.clientRole));
			}
			Dom.XmlNode unrestrictedJointAssetsNode = outerNode.addChildElement('unrestrictedJointAssets', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			unrestrictedJointAssetsNode.addTextNode((this.unrestrictedJointAssets == null) ? '' : String.valueOf(this.unrestrictedJointAssets));
			Dom.XmlNode householdNumberNode = outerNode.addChildElement('householdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			householdNumberNode.addTextNode((this.householdNumber == null) ? '' : String.valueOf(this.householdNumber));
			Dom.XmlNode relationshipTypeNode = outerNode.addChildElement('relationshipType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			relationshipTypeNode.addTextNode((this.relationshipType == null) ? '' : String.valueOf(this.relationshipType));
			Dom.XmlNode isDebtorsParentNode = outerNode.addChildElement('isDebtorsParent', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			isDebtorsParentNode.addTextNode((this.isDebtorsParent == null) ? '' : String.valueOf(this.isDebtorsParent));
			Dom.XmlNode residenceCountryNode = outerNode.addChildElement('residenceCountry', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			residenceCountryNode.addTextNode((this.residenceCountry == null) ? '' : String.valueOf(this.residenceCountry));
			Dom.XmlNode residenceCurrencyNode = outerNode.addChildElement('residenceCurrency', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			residenceCurrencyNode.addTextNode((this.residenceCurrency == null) ? '' : this.residenceCurrency);
			Dom.XmlNode limitedLegalCapacityNode = outerNode.addChildElement('limitedLegalCapacity', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			limitedLegalCapacityNode.addTextNode((this.limitedLegalCapacity == null) ? '' : String.valueOf(this.limitedLegalCapacity));
		}
	}
	public class ScoringRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		public Long primaryPurpose;
		public Long primaryRealEstateType;
		public Long secondaryPurpose;
		public Long secondaryRealEstateType;
		public String anotherPurpose;
		public Long benefit;
		public Long paymentType;
		public LoanServiceDataTypes.ListOfCreditWorthinessType listOfCreditWorthiness;
		public LoanServiceDataTypes.ListOfContractAttributesType listOfContractAttributes;
		public LoanServiceDataTypes.ListOfCsProductsType listOfCsProducts;
		public LoanServiceDataTypes.ListOfCommitmentsType listOfCommitments;
		// Restriction enumeration: 
		public Date registersAggreeDate;
		public BasicTypesService.AccountNumberType mediatorsProvAccNumber;
		public Long modelId;
		public Long productType;
		// Restriction enumeration: 
		public String targetAmount;
		public LoanServiceDataTypes.ListOfRelationPersonsType listOfRelationPersons;
		public LoanServiceDataTypes.ListOfContractDataType listOfContractData;
		public String opportunityId;
		public String repeatedCalculationReason;
		public Long processingType;
		public Long fixationPeriodType;
		public Long loanActionType;
		public Long reloanType;
		public LoanServiceDataTypes.ListOfLoanOtherActionsType listOfLoanOtherActions;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','0','1','false'};
		private transient String[] primaryPurpose_type_info = new String[]{'primaryPurpose',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] primaryRealEstateType_type_info = new String[]{'primaryRealEstateType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] secondaryPurpose_type_info = new String[]{'secondaryPurpose',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] secondaryRealEstateType_type_info = new String[]{'secondaryRealEstateType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] anotherPurpose_type_info = new String[]{'anotherPurpose',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] benefit_type_info = new String[]{'benefit',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] paymentType_type_info = new String[]{'paymentType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] listOfCreditWorthiness_type_info = new String[]{'listOfCreditWorthiness',s_ns0,'ListOfCreditWorthinessType','1','1','false'};
		private transient String[] listOfContractAttributes_type_info = new String[]{'listOfContractAttributes',s_ns0,'ListOfContractAttributesType','1','1','false'};
		private transient String[] listOfCsProducts_type_info = new String[]{'listOfCsProducts',s_ns0,'ListOfCsProductsType','0','1','false'};
		private transient String[] listOfCommitments_type_info = new String[]{'listOfCommitments',s_ns0,'ListOfCommitmentsType','0','1','false'};
		private transient String[] registersAggreeDate_type_info = new String[]{'registersAggreeDate',s_ns0,'CommonDateType','1','1','false'};
		private transient String[] mediatorsProvAccNumber_type_info = new String[]{'mediatorsProvAccNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] modelId_type_info = new String[]{'modelId',s_ns0,'CommonNumberType','0','1','false'};
		private transient String[] productType_type_info = new String[]{'productType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] targetAmount_type_info = new String[]{'targetAmount',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] listOfRelationPersons_type_info = new String[]{'listOfRelationPersons',s_ns0,'ListOfRelationPersonsType','0','1','false'};
		private transient String[] listOfContractData_type_info = new String[]{'listOfContractData',s_ns0,'ListOfContractDataType','1','1','false'};
		private transient String[] opportunityId_type_info = new String[]{'opportunityId',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] repeatedCalculationReason_type_info = new String[]{'repeatedCalculationReason',s_ns0,'DescriptionType','0','1','false'};
		private transient String[] processingType_type_info = new String[]{'processingType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] fixationPeriodType_type_info = new String[]{'fixationPeriodType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] loanActionType_type_info = new String[]{'loanActionType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] reloanType_type_info = new String[]{'reloanType',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] listOfLoanOtherActions_type_info = new String[]{'listOfLoanOtherActions',s_ns0,'ListOfLoanOtherActionsType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','primaryPurpose','primaryRealEstateType','secondaryPurpose','secondaryRealEstateType','anotherPurpose','benefit','paymentType','listOfCreditWorthiness','listOfContractAttributes','listOfCsProducts','listOfCommitments','registersAggreeDate','mediatorsProvAccNumber','modelId','productType','targetAmount','listOfRelationPersons','listOfContractData','opportunityId','repeatedCalculationReason','processingType','fixationPeriodType','loanActionType','reloanType','listOfLoanOtherActions'};
		public ScoringRequestBodyType(){
		}
		public ScoringRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode primaryPurposeNode = responseNode.getChildElement('primaryPurpose', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.primaryPurpose = (primaryPurposeNode == null) ? null : Long.valueOf(primaryPurposeNode.getText());
			nodesParsed.add(primaryPurposeNode);
			//System.debug(this.primaryPurpose);			
			DOM.XmlNode primaryRealEstateTypeNode = responseNode.getChildElement('primaryRealEstateType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.primaryRealEstateType = (primaryRealEstateTypeNode == null) ? null : Long.valueOf(primaryRealEstateTypeNode.getText());
			nodesParsed.add(primaryRealEstateTypeNode);
			//System.debug(this.primaryRealEstateType);			
			DOM.XmlNode secondaryPurposeNode = responseNode.getChildElement('secondaryPurpose', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.secondaryPurpose = (secondaryPurposeNode == null) ? null : Long.valueOf(secondaryPurposeNode.getText());
			nodesParsed.add(secondaryPurposeNode);
			//System.debug(this.secondaryPurpose);			
			DOM.XmlNode secondaryRealEstateTypeNode = responseNode.getChildElement('secondaryRealEstateType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.secondaryRealEstateType = (secondaryRealEstateTypeNode == null) ? null : Long.valueOf(secondaryRealEstateTypeNode.getText());
			nodesParsed.add(secondaryRealEstateTypeNode);
			//System.debug(this.secondaryRealEstateType);			
			DOM.XmlNode anotherPurposeNode = responseNode.getChildElement('anotherPurpose', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.anotherPurpose = (anotherPurposeNode == null) ? null : anotherPurposeNode.getText();
			nodesParsed.add(anotherPurposeNode);
			//System.debug(this.anotherPurpose);			
			DOM.XmlNode benefitNode = responseNode.getChildElement('benefit', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.benefit = (benefitNode == null) ? null : Long.valueOf(benefitNode.getText());
			nodesParsed.add(benefitNode);
			//System.debug(this.benefit);			
			DOM.XmlNode paymentTypeNode = responseNode.getChildElement('paymentType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.paymentType = (paymentTypeNode == null) ? null : Long.valueOf(paymentTypeNode.getText());
			nodesParsed.add(paymentTypeNode);
			//System.debug(this.paymentType);			
			DOM.XmlNode listOfCreditWorthinessNode = responseNode.getChildElement('listOfCreditWorthiness', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfCreditWorthinessNode == null){
				this.listOfCreditWorthiness = null;
			} else{
				LoanServiceDataTypes.ListOfCreditWorthinessType listOfCreditWorthinessObj = new LoanServiceDataTypes.ListOfCreditWorthinessType(listOfCreditWorthinessNode);
				nodesParsed.add(listOfCreditWorthinessNode);
				this.listOfCreditWorthiness = listOfCreditWorthinessObj;
			}
			//System.debug(this.listOfCreditWorthiness);			
			DOM.XmlNode listOfContractAttributesNode = responseNode.getChildElement('listOfContractAttributes', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfContractAttributesNode == null){
				this.listOfContractAttributes = null;
			} else{
				LoanServiceDataTypes.ListOfContractAttributesType listOfContractAttributesObj = new LoanServiceDataTypes.ListOfContractAttributesType(listOfContractAttributesNode);
				nodesParsed.add(listOfContractAttributesNode);
				this.listOfContractAttributes = listOfContractAttributesObj;
			}
			//System.debug(this.listOfContractAttributes);			
			DOM.XmlNode listOfCsProductsNode = responseNode.getChildElement('listOfCsProducts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfCsProductsNode == null){
				this.listOfCsProducts = null;
			} else{
				LoanServiceDataTypes.ListOfCsProductsType listOfCsProductsObj = new LoanServiceDataTypes.ListOfCsProductsType(listOfCsProductsNode);
				nodesParsed.add(listOfCsProductsNode);
				this.listOfCsProducts = listOfCsProductsObj;
			}
			//System.debug(this.listOfCsProducts);			
			DOM.XmlNode listOfCommitmentsNode = responseNode.getChildElement('listOfCommitments', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfCommitmentsNode == null){
				this.listOfCommitments = null;
			} else{
				LoanServiceDataTypes.ListOfCommitmentsType listOfCommitmentsObj = new LoanServiceDataTypes.ListOfCommitmentsType(listOfCommitmentsNode);
				nodesParsed.add(listOfCommitmentsNode);
				this.listOfCommitments = listOfCommitmentsObj;
			}
			//System.debug(this.listOfCommitments);			
			DOM.XmlNode registersAggreeDateNode = responseNode.getChildElement('registersAggreeDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.registersAggreeDate = (registersAggreeDateNode == null) ? null : Date.valueOf(registersAggreeDateNode.getText());
			nodesParsed.add(registersAggreeDateNode);
			//System.debug(this.registersAggreeDate);			
			DOM.XmlNode mediatorsProvAccNumberNode = responseNode.getChildElement('mediatorsProvAccNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(mediatorsProvAccNumberNode == null){
				this.mediatorsProvAccNumber = null;
			} else{
				BasicTypesService.AccountNumberType mediatorsProvAccNumberObj = new BasicTypesService.AccountNumberType(mediatorsProvAccNumberNode);
				nodesParsed.add(mediatorsProvAccNumberNode);
				this.mediatorsProvAccNumber = mediatorsProvAccNumberObj;
			}
			//System.debug(this.mediatorsProvAccNumber);			
			DOM.XmlNode modelIdNode = responseNode.getChildElement('modelId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.modelId = (modelIdNode == null) ? null : Long.valueOf(modelIdNode.getText());
			nodesParsed.add(modelIdNode);
			//System.debug(this.modelId);			
			DOM.XmlNode productTypeNode = responseNode.getChildElement('productType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.productType = (productTypeNode == null) ? null : Long.valueOf(productTypeNode.getText());
			nodesParsed.add(productTypeNode);
			//System.debug(this.productType);			
			DOM.XmlNode targetAmountNode = responseNode.getChildElement('targetAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.targetAmount = (targetAmountNode == null) ? null : targetAmountNode.getText();
			nodesParsed.add(targetAmountNode);
			//System.debug(this.targetAmount);			
			DOM.XmlNode listOfRelationPersonsNode = responseNode.getChildElement('listOfRelationPersons', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfRelationPersonsNode == null){
				this.listOfRelationPersons = null;
			} else{
				LoanServiceDataTypes.ListOfRelationPersonsType listOfRelationPersonsObj = new LoanServiceDataTypes.ListOfRelationPersonsType(listOfRelationPersonsNode);
				nodesParsed.add(listOfRelationPersonsNode);
				this.listOfRelationPersons = listOfRelationPersonsObj;
			}
			//System.debug(this.listOfRelationPersons);			
			DOM.XmlNode listOfContractDataNode = responseNode.getChildElement('listOfContractData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfContractDataNode == null){
				this.listOfContractData = null;
			} else{
				LoanServiceDataTypes.ListOfContractDataType listOfContractDataObj = new LoanServiceDataTypes.ListOfContractDataType(listOfContractDataNode);
				nodesParsed.add(listOfContractDataNode);
				this.listOfContractData = listOfContractDataObj;
			}
			//System.debug(this.listOfContractData);			
			DOM.XmlNode opportunityIdNode = responseNode.getChildElement('opportunityId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.opportunityId = (opportunityIdNode == null) ? null : opportunityIdNode.getText();
			nodesParsed.add(opportunityIdNode);
			//System.debug(this.opportunityId);			
			DOM.XmlNode repeatedCalculationReasonNode = responseNode.getChildElement('repeatedCalculationReason', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.repeatedCalculationReason = (repeatedCalculationReasonNode == null) ? null : repeatedCalculationReasonNode.getText();
			nodesParsed.add(repeatedCalculationReasonNode);
			//System.debug(this.repeatedCalculationReason);			
			DOM.XmlNode processingTypeNode = responseNode.getChildElement('processingType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.processingType = (processingTypeNode == null) ? null : Long.valueOf(processingTypeNode.getText());
			nodesParsed.add(processingTypeNode);
			//System.debug(this.processingType);			
			DOM.XmlNode fixationPeriodTypeNode = responseNode.getChildElement('fixationPeriodType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.fixationPeriodType = (fixationPeriodTypeNode == null) ? null : Long.valueOf(fixationPeriodTypeNode.getText());
			nodesParsed.add(fixationPeriodTypeNode);
			//System.debug(this.fixationPeriodType);			
			DOM.XmlNode loanActionTypeNode = responseNode.getChildElement('loanActionType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.loanActionType = (loanActionTypeNode == null) ? null : Long.valueOf(loanActionTypeNode.getText());
			nodesParsed.add(loanActionTypeNode);
			//System.debug(this.loanActionType);			
			DOM.XmlNode reloanTypeNode = responseNode.getChildElement('reloanType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.reloanType = (reloanTypeNode == null) ? null : Long.valueOf(reloanTypeNode.getText());
			nodesParsed.add(reloanTypeNode);
			//System.debug(this.reloanType);			
			DOM.XmlNode listOfLoanOtherActionsNode = responseNode.getChildElement('listOfLoanOtherActions', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(listOfLoanOtherActionsNode == null){
				this.listOfLoanOtherActions = null;
			} else{
				LoanServiceDataTypes.ListOfLoanOtherActionsType listOfLoanOtherActionsObj = new LoanServiceDataTypes.ListOfLoanOtherActionsType(listOfLoanOtherActionsNode);
				nodesParsed.add(listOfLoanOtherActionsNode);
				this.listOfLoanOtherActions = listOfLoanOtherActionsObj;
			}
			//System.debug(this.listOfLoanOtherActions);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode primaryPurposeNode = outerNode.addChildElement('primaryPurpose', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.primaryPurpose != null){
				primaryPurposeNode.addTextNode(String.valueOf(this.primaryPurpose));
			}
			Dom.XmlNode primaryRealEstateTypeNode = outerNode.addChildElement('primaryRealEstateType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.primaryRealEstateType != null){
				primaryRealEstateTypeNode.addTextNode(String.valueOf(this.primaryRealEstateType));
			}
			Dom.XmlNode secondaryPurposeNode = outerNode.addChildElement('secondaryPurpose', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			secondaryPurposeNode.addTextNode((this.secondaryPurpose == null) ? '' : String.valueOf(this.secondaryPurpose));
			Dom.XmlNode secondaryRealEstateTypeNode = outerNode.addChildElement('secondaryRealEstateType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			secondaryRealEstateTypeNode.addTextNode((this.secondaryRealEstateType == null) ? '' : String.valueOf(this.secondaryRealEstateType));
			Dom.XmlNode anotherPurposeNode = outerNode.addChildElement('anotherPurpose', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			anotherPurposeNode.addTextNode((this.anotherPurpose == null) ? '' : this.anotherPurpose);
			Dom.XmlNode benefitNode = outerNode.addChildElement('benefit', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.benefit != null){
				benefitNode.addTextNode(String.valueOf(this.benefit));
			}
			Dom.XmlNode paymentTypeNode = outerNode.addChildElement('paymentType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			paymentTypeNode.addTextNode((this.paymentType == null) ? '' : String.valueOf(this.paymentType));
			
			LoanServiceDataTypes.ListOfCreditWorthinessType listOfCreditWorthinessObj = this.listOfCreditWorthiness;
			Dom.XmlNode listOfCreditWorthinessNode = outerNode.addChildElement('listOfCreditWorthiness', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfCreditWorthinessObj != null){
				listOfCreditWorthinessObj.populateXmlNode(listOfCreditWorthinessNode);
			}
			
			LoanServiceDataTypes.ListOfContractAttributesType listOfContractAttributesObj = this.listOfContractAttributes;
			Dom.XmlNode listOfContractAttributesNode = outerNode.addChildElement('listOfContractAttributes', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfContractAttributesObj != null){
				listOfContractAttributesObj.populateXmlNode(listOfContractAttributesNode);
			}
			
			LoanServiceDataTypes.ListOfCsProductsType listOfCsProductsObj = this.listOfCsProducts;
			Dom.XmlNode listOfCsProductsNode = outerNode.addChildElement('listOfCsProducts', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfCsProductsObj != null){
				listOfCsProductsObj.populateXmlNode(listOfCsProductsNode);
			}
			
			LoanServiceDataTypes.ListOfCommitmentsType listOfCommitmentsObj = this.listOfCommitments;
			Dom.XmlNode listOfCommitmentsNode = outerNode.addChildElement('listOfCommitments', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfCommitmentsObj != null){
				listOfCommitmentsObj.populateXmlNode(listOfCommitmentsNode);
			}
			Dom.XmlNode registersAggreeDateNode = outerNode.addChildElement('registersAggreeDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.registersAggreeDate != null){
				registersAggreeDateNode.addTextNode(String.valueOf(this.registersAggreeDate));
			}
			
			BasicTypesService.AccountNumberType mediatorsProvAccNumberObj = this.mediatorsProvAccNumber;
			Dom.XmlNode mediatorsProvAccNumberNode = outerNode.addChildElement('mediatorsProvAccNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(mediatorsProvAccNumberObj != null){
				mediatorsProvAccNumberObj.populateXmlNode(mediatorsProvAccNumberNode);
			}
			Dom.XmlNode modelIdNode = outerNode.addChildElement('modelId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			modelIdNode.addTextNode((this.modelId == null) ? '' : String.valueOf(this.modelId));
			Dom.XmlNode productTypeNode = outerNode.addChildElement('productType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			productTypeNode.addTextNode((this.productType == null) ? '' : String.valueOf(this.productType));
			Dom.XmlNode targetAmountNode = outerNode.addChildElement('targetAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.targetAmount != null){
				targetAmountNode.addTextNode(this.targetAmount);
			}
			
			LoanServiceDataTypes.ListOfRelationPersonsType listOfRelationPersonsObj = this.listOfRelationPersons;
			Dom.XmlNode listOfRelationPersonsNode = outerNode.addChildElement('listOfRelationPersons', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfRelationPersonsObj != null){
				listOfRelationPersonsObj.populateXmlNode(listOfRelationPersonsNode);
			}
			
			LoanServiceDataTypes.ListOfContractDataType listOfContractDataObj = this.listOfContractData;
			Dom.XmlNode listOfContractDataNode = outerNode.addChildElement('listOfContractData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfContractDataObj != null){
				listOfContractDataObj.populateXmlNode(listOfContractDataNode);
			}
			Dom.XmlNode opportunityIdNode = outerNode.addChildElement('opportunityId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			opportunityIdNode.addTextNode((this.opportunityId == null) ? '' : this.opportunityId);
			Dom.XmlNode repeatedCalculationReasonNode = outerNode.addChildElement('repeatedCalculationReason', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			repeatedCalculationReasonNode.addTextNode((this.repeatedCalculationReason == null) ? '' : this.repeatedCalculationReason);
			Dom.XmlNode processingTypeNode = outerNode.addChildElement('processingType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.processingType != null){
				processingTypeNode.addTextNode(String.valueOf(this.processingType));
			}
			Dom.XmlNode fixationPeriodTypeNode = outerNode.addChildElement('fixationPeriodType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			fixationPeriodTypeNode.addTextNode((this.fixationPeriodType == null) ? '' : String.valueOf(this.fixationPeriodType));
			Dom.XmlNode loanActionTypeNode = outerNode.addChildElement('loanActionType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			loanActionTypeNode.addTextNode((this.loanActionType == null) ? '' : String.valueOf(this.loanActionType));
			Dom.XmlNode reloanTypeNode = outerNode.addChildElement('reloanType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			reloanTypeNode.addTextNode((this.reloanType == null) ? '' : String.valueOf(this.reloanType));
			
			LoanServiceDataTypes.ListOfLoanOtherActionsType listOfLoanOtherActionsObj = this.listOfLoanOtherActions;
			Dom.XmlNode listOfLoanOtherActionsNode = outerNode.addChildElement('listOfLoanOtherActions', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(listOfLoanOtherActionsObj != null){
				listOfLoanOtherActionsObj.populateXmlNode(listOfLoanOtherActionsNode);
			}
		}
	}
	public class ScoringResponseBodyType {
		public BasicTypesService.OperationSuccessType operationSuccessType;
		public BasicTypesService.AccountNumberType loanIdNumber;
		public Long scoringCount;
		public Long maxScoringCount;
		private transient String[] operationSuccessType_type_info = new String[]{'operationSuccessType',s_ns0,'OperationSuccessType','1','1','false'};
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] scoringCount_type_info = new String[]{'scoringCount',s_ns0,'CommonNumberType','0','1','false'};
		private transient String[] maxScoringCount_type_info = new String[]{'maxScoringCount',s_ns0,'CommonNumberType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'operationSuccessType','loanIdNumber','scoringCount','maxScoringCount'};
		public ScoringResponseBodyType(){
		}
		public ScoringResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode operationSuccessTypeNode = responseNode.getChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(operationSuccessTypeNode == null){
				this.operationSuccessType = null;
			} else{
				BasicTypesService.OperationSuccessType operationSuccessTypeObj = new BasicTypesService.OperationSuccessType(operationSuccessTypeNode);
				nodesParsed.add(operationSuccessTypeNode);
				this.operationSuccessType = operationSuccessTypeObj;
			}
			//System.debug(this.operationSuccessType);			
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode scoringCountNode = responseNode.getChildElement('scoringCount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.scoringCount = (scoringCountNode == null) ? null : Long.valueOf(scoringCountNode.getText());
			nodesParsed.add(scoringCountNode);
			//System.debug(this.scoringCount);			
			DOM.XmlNode maxScoringCountNode = responseNode.getChildElement('maxScoringCount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.maxScoringCount = (maxScoringCountNode == null) ? null : Long.valueOf(maxScoringCountNode.getText());
			nodesParsed.add(maxScoringCountNode);
			//System.debug(this.maxScoringCount);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType operationSuccessTypeObj = this.operationSuccessType;
			Dom.XmlNode operationSuccessTypeNode = outerNode.addChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(operationSuccessTypeObj != null){
				operationSuccessTypeObj.populateXmlNode(operationSuccessTypeNode);
			}
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode scoringCountNode = outerNode.addChildElement('scoringCount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			scoringCountNode.addTextNode((this.scoringCount == null) ? '' : String.valueOf(this.scoringCount));
			Dom.XmlNode maxScoringCountNode = outerNode.addChildElement('maxScoringCount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			maxScoringCountNode.addTextNode((this.maxScoringCount == null) ? '' : String.valueOf(this.maxScoringCount));
		}
	}
	public class SendLoanApprovalDataRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		public LoanServiceDataTypes.LoanApprovalDataDetailType loanApprovalData;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] loanApprovalData_type_info = new String[]{'loanApprovalData',s_ns0,'LoanApprovalDataDetailType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','loanApprovalData'};
		public SendLoanApprovalDataRequestBodyType(){
		}
		public SendLoanApprovalDataRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode loanApprovalDataNode = responseNode.getChildElement('loanApprovalData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanApprovalDataNode == null){
				this.loanApprovalData = null;
			} else{
				LoanServiceDataTypes.LoanApprovalDataDetailType loanApprovalDataObj = new LoanServiceDataTypes.LoanApprovalDataDetailType(loanApprovalDataNode);
				nodesParsed.add(loanApprovalDataNode);
				this.loanApprovalData = loanApprovalDataObj;
			}
			//System.debug(this.loanApprovalData);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			
			LoanServiceDataTypes.LoanApprovalDataDetailType loanApprovalDataObj = this.loanApprovalData;
			Dom.XmlNode loanApprovalDataNode = outerNode.addChildElement('loanApprovalData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanApprovalDataObj != null){
				loanApprovalDataObj.populateXmlNode(loanApprovalDataNode);
			}
		}
	}
	public class SendLoanApprovalDataResponseBodyType {
		public BasicTypesService.OperationSuccessType operationSuccessType;
		private transient String[] operationSuccessType_type_info = new String[]{'operationSuccessType',s_ns0,'OperationSuccessType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'operationSuccessType'};
		public SendLoanApprovalDataResponseBodyType(){
		}
		public SendLoanApprovalDataResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode operationSuccessTypeNode = responseNode.getChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(operationSuccessTypeNode == null){
				this.operationSuccessType = null;
			} else{
				BasicTypesService.OperationSuccessType operationSuccessTypeObj = new BasicTypesService.OperationSuccessType(operationSuccessTypeNode);
				nodesParsed.add(operationSuccessTypeNode);
				this.operationSuccessType = operationSuccessTypeObj;
			}
			//System.debug(this.operationSuccessType);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType operationSuccessTypeObj = this.operationSuccessType;
			Dom.XmlNode operationSuccessTypeNode = outerNode.addChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(operationSuccessTypeObj != null){
				operationSuccessTypeObj.populateXmlNode(operationSuccessTypeNode);
			}
		}
	}
	public class SetDocDeliveryDataRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		// Restriction enumeration: 
		public Date deliveryDate;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] deliveryDate_type_info = new String[]{'deliveryDate',s_ns0,'CommonDateType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','deliveryDate'};
		public SetDocDeliveryDataRequestBodyType(){
		}
		public SetDocDeliveryDataRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode deliveryDateNode = responseNode.getChildElement('deliveryDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.deliveryDate = (deliveryDateNode == null) ? null : Date.valueOf(deliveryDateNode.getText());
			nodesParsed.add(deliveryDateNode);
			//System.debug(this.deliveryDate);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode deliveryDateNode = outerNode.addChildElement('deliveryDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.deliveryDate != null){
				deliveryDateNode.addTextNode(String.valueOf(this.deliveryDate));
			}
		}
	}
	public class SetDocDeliveryDataResponseBodyType {
		public BasicTypesService.OperationSuccessType operationSuccess;
		private transient String[] operationSuccess_type_info = new String[]{'operationSuccess',s_ns0,'OperationSuccessType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'operationSuccess'};
		public SetDocDeliveryDataResponseBodyType(){
		}
		public SetDocDeliveryDataResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode operationSuccessNode = responseNode.getChildElement('operationSuccess', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(operationSuccessNode == null){
				this.operationSuccess = null;
			} else{
				BasicTypesService.OperationSuccessType operationSuccessObj = new BasicTypesService.OperationSuccessType(operationSuccessNode);
				nodesParsed.add(operationSuccessNode);
				this.operationSuccess = operationSuccessObj;
			}
			//System.debug(this.operationSuccess);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType operationSuccessObj = this.operationSuccess;
			Dom.XmlNode operationSuccessNode = outerNode.addChildElement('operationSuccess', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(operationSuccessObj != null){
				operationSuccessObj.populateXmlNode(operationSuccessNode);
			}
		}
	}
	public class SetLoanAsFinalRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		// Restriction enumeration: 
		public Date finalizationDataDate;
		public BasicTypesService.AccountNumberType mediatorsProvAccNumber;
		public LoanServiceDataTypes.ListOfPurposeDataType purposeData;
		public Long processingType;
		public String spotterNumber;
		public String externalNumber;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] finalizationDataDate_type_info = new String[]{'finalizationDataDate',s_ns0,'CommonDateType','1','1','false'};
		private transient String[] mediatorsProvAccNumber_type_info = new String[]{'mediatorsProvAccNumber',s_ns0,'AccountNumberType','0','1','false'};
		private transient String[] purposeData_type_info = new String[]{'purposeData',s_ns0,'ListOfPurposeDataType','1','1','false'};
		private transient String[] processingType_type_info = new String[]{'processingType',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] spotterNumber_type_info = new String[]{'spotterNumber',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] externalNumber_type_info = new String[]{'externalNumber',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','finalizationDataDate','mediatorsProvAccNumber','purposeData','processingType','spotterNumber','externalNumber'};
		public SetLoanAsFinalRequestBodyType(){
		}
		public SetLoanAsFinalRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode finalizationDataDateNode = responseNode.getChildElement('finalizationDataDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.finalizationDataDate = (finalizationDataDateNode == null) ? null : Date.valueOf(finalizationDataDateNode.getText());
			nodesParsed.add(finalizationDataDateNode);
			//System.debug(this.finalizationDataDate);			
			DOM.XmlNode mediatorsProvAccNumberNode = responseNode.getChildElement('mediatorsProvAccNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(mediatorsProvAccNumberNode == null){
				this.mediatorsProvAccNumber = null;
			} else{
				BasicTypesService.AccountNumberType mediatorsProvAccNumberObj = new BasicTypesService.AccountNumberType(mediatorsProvAccNumberNode);
				nodesParsed.add(mediatorsProvAccNumberNode);
				this.mediatorsProvAccNumber = mediatorsProvAccNumberObj;
			}
			//System.debug(this.mediatorsProvAccNumber);			
			DOM.XmlNode purposeDataNode = responseNode.getChildElement('purposeData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(purposeDataNode == null){
				this.purposeData = null;
			} else{
				LoanServiceDataTypes.ListOfPurposeDataType purposeDataObj = new LoanServiceDataTypes.ListOfPurposeDataType(purposeDataNode);
				nodesParsed.add(purposeDataNode);
				this.purposeData = purposeDataObj;
			}
			//System.debug(this.purposeData);			
			DOM.XmlNode processingTypeNode = responseNode.getChildElement('processingType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.processingType = (processingTypeNode == null) ? null : Long.valueOf(processingTypeNode.getText());
			nodesParsed.add(processingTypeNode);
			//System.debug(this.processingType);			
			DOM.XmlNode spotterNumberNode = responseNode.getChildElement('spotterNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.spotterNumber = (spotterNumberNode == null) ? null : spotterNumberNode.getText();
			nodesParsed.add(spotterNumberNode);
			//System.debug(this.spotterNumber);			
			DOM.XmlNode externalNumberNode = responseNode.getChildElement('externalNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.externalNumber = (externalNumberNode == null) ? null : externalNumberNode.getText();
			nodesParsed.add(externalNumberNode);
			//System.debug(this.externalNumber);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode finalizationDataDateNode = outerNode.addChildElement('finalizationDataDate', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.finalizationDataDate != null){
				finalizationDataDateNode.addTextNode(String.valueOf(this.finalizationDataDate));
			}
			
			BasicTypesService.AccountNumberType mediatorsProvAccNumberObj = this.mediatorsProvAccNumber;
			Dom.XmlNode mediatorsProvAccNumberNode = outerNode.addChildElement('mediatorsProvAccNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(mediatorsProvAccNumberObj != null){
				mediatorsProvAccNumberObj.populateXmlNode(mediatorsProvAccNumberNode);
			}
			
			LoanServiceDataTypes.ListOfPurposeDataType purposeDataObj = this.purposeData;
			Dom.XmlNode purposeDataNode = outerNode.addChildElement('purposeData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(purposeDataObj != null){
				purposeDataObj.populateXmlNode(purposeDataNode);
			}
			Dom.XmlNode processingTypeNode = outerNode.addChildElement('processingType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.processingType != null){
				processingTypeNode.addTextNode(String.valueOf(this.processingType));
			}
			Dom.XmlNode spotterNumberNode = outerNode.addChildElement('spotterNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			spotterNumberNode.addTextNode((this.spotterNumber == null) ? '' : this.spotterNumber);
			Dom.XmlNode externalNumberNode = outerNode.addChildElement('externalNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			externalNumberNode.addTextNode((this.externalNumber == null) ? '' : this.externalNumber);
		}
	}
	public class SetLoanAsFinalResponseBodyType {
		public BasicTypesService.OperationSuccessType operationSuccessType;
		private transient String[] operationSuccessType_type_info = new String[]{'operationSuccessType',s_ns0,'OperationSuccessType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'operationSuccessType'};
		public SetLoanAsFinalResponseBodyType(){
		}
		public SetLoanAsFinalResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode operationSuccessTypeNode = responseNode.getChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(operationSuccessTypeNode == null){
				this.operationSuccessType = null;
			} else{
				BasicTypesService.OperationSuccessType operationSuccessTypeObj = new BasicTypesService.OperationSuccessType(operationSuccessTypeNode);
				nodesParsed.add(operationSuccessTypeNode);
				this.operationSuccessType = operationSuccessTypeObj;
			}
			//System.debug(this.operationSuccessType);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType operationSuccessTypeObj = this.operationSuccessType;
			Dom.XmlNode operationSuccessTypeNode = outerNode.addChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(operationSuccessTypeObj != null){
				operationSuccessTypeObj.populateXmlNode(operationSuccessTypeNode);
			}
		}
	}
	public class SignerDetailType {
		public String fullName;
		public String uniqueIdentifier;
		public String phoneNumber;
		//Restriction from http://service.cmss.cz/loan/LoanService/v05/datatypes/EmailAddressType via http://service.cmss.cz/common/datamodel/basictypes/v02/EmailType
		public String email;
		public String transactionId;
		public String sessionToken;
		public String stationIdentifier;
		public String stationIdentifierData;
		public String role;
		private transient String[] fullName_type_info = new String[]{'fullName',s_ns0,'FullNameType','1','1','false'};
		private transient String[] uniqueIdentifier_type_info = new String[]{'uniqueIdentifier',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] phoneNumber_type_info = new String[]{'phoneNumber',s_ns0,'PhoneNumberType','1','1','false'};
		private transient String[] email_type_info = new String[]{'email',s_ns0,'EmailAddressType','0','1','false'};
		private transient String[] transactionId_type_info = new String[]{'transactionId',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] sessionToken_type_info = new String[]{'sessionToken',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] stationIdentifier_type_info = new String[]{'stationIdentifier',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] stationIdentifierData_type_info = new String[]{'stationIdentifierData',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] role_type_info = new String[]{'role',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'fullName','uniqueIdentifier','phoneNumber','email','transactionId','sessionToken','stationIdentifier','stationIdentifierData','role'};
		public SignerDetailType(){
		}
		public SignerDetailType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode fullNameNode = responseNode.getChildElement('fullName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.fullName = (fullNameNode == null) ? null : fullNameNode.getText();
			nodesParsed.add(fullNameNode);
			//System.debug(this.fullName);			
			DOM.XmlNode uniqueIdentifierNode = responseNode.getChildElement('uniqueIdentifier', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.uniqueIdentifier = (uniqueIdentifierNode == null) ? null : uniqueIdentifierNode.getText();
			nodesParsed.add(uniqueIdentifierNode);
			//System.debug(this.uniqueIdentifier);			
			DOM.XmlNode phoneNumberNode = responseNode.getChildElement('phoneNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.phoneNumber = (phoneNumberNode == null) ? null : phoneNumberNode.getText();
			nodesParsed.add(phoneNumberNode);
			//System.debug(this.phoneNumber);			
			DOM.XmlNode emailNode = responseNode.getChildElement('email', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.email = (emailNode == null) ? null : emailNode.getText();
			nodesParsed.add(emailNode);
			//System.debug(this.email);			
			DOM.XmlNode transactionIdNode = responseNode.getChildElement('transactionId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.transactionId = (transactionIdNode == null) ? null : transactionIdNode.getText();
			nodesParsed.add(transactionIdNode);
			//System.debug(this.transactionId);			
			DOM.XmlNode sessionTokenNode = responseNode.getChildElement('sessionToken', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.sessionToken = (sessionTokenNode == null) ? null : sessionTokenNode.getText();
			nodesParsed.add(sessionTokenNode);
			//System.debug(this.sessionToken);			
			DOM.XmlNode stationIdentifierNode = responseNode.getChildElement('stationIdentifier', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.stationIdentifier = (stationIdentifierNode == null) ? null : stationIdentifierNode.getText();
			nodesParsed.add(stationIdentifierNode);
			//System.debug(this.stationIdentifier);			
			DOM.XmlNode stationIdentifierDataNode = responseNode.getChildElement('stationIdentifierData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.stationIdentifierData = (stationIdentifierDataNode == null) ? null : stationIdentifierDataNode.getText();
			nodesParsed.add(stationIdentifierDataNode);
			//System.debug(this.stationIdentifierData);			
			DOM.XmlNode roleNode = responseNode.getChildElement('role', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.role = (roleNode == null) ? null : roleNode.getText();
			nodesParsed.add(roleNode);
			//System.debug(this.role);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode fullNameNode = outerNode.addChildElement('fullName', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.fullName != null){
				fullNameNode.addTextNode(this.fullName);
			}
			Dom.XmlNode uniqueIdentifierNode = outerNode.addChildElement('uniqueIdentifier', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.uniqueIdentifier != null){
				uniqueIdentifierNode.addTextNode(this.uniqueIdentifier);
			}
			Dom.XmlNode phoneNumberNode = outerNode.addChildElement('phoneNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.phoneNumber != null){
				phoneNumberNode.addTextNode(this.phoneNumber);
			}
			Dom.XmlNode emailNode = outerNode.addChildElement('email', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			emailNode.addTextNode((this.email == null) ? '' : this.email);
			Dom.XmlNode transactionIdNode = outerNode.addChildElement('transactionId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.transactionId != null){
				transactionIdNode.addTextNode(this.transactionId);
			}
			Dom.XmlNode sessionTokenNode = outerNode.addChildElement('sessionToken', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			sessionTokenNode.addTextNode((this.sessionToken == null) ? '' : this.sessionToken);
			Dom.XmlNode stationIdentifierNode = outerNode.addChildElement('stationIdentifier', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			stationIdentifierNode.addTextNode((this.stationIdentifier == null) ? '' : this.stationIdentifier);
			Dom.XmlNode stationIdentifierDataNode = outerNode.addChildElement('stationIdentifierData', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			stationIdentifierDataNode.addTextNode((this.stationIdentifierData == null) ? '' : this.stationIdentifierData);
			Dom.XmlNode roleNode = outerNode.addChildElement('role', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			roleNode.addTextNode((this.role == null) ? '' : this.role);
		}
	}
	public class StoreLoanAccountDataRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		public String SBM;
		public DateTime exportDateTime;
		// Restriction enumeration: 
		public String rpsn;
		public String conditionsForRPSNCalculation;
		public String foreignLoanCurrency;
		// Restriction enumeration: 
		public String foreignLoanPaymentDiff;
		// Restriction enumeration: 
		public String totalAmount;
		// Restriction enumeration: 
		public String MUPayment;
		// Restriction enumeration: 
		public String possibleFine;
		public LoanServiceDataTypes.AccountDetailListType accountDetails;
		public Long modelId;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber',s_ns0,'AccountNumberType','1','1','false'};
		private transient String[] SBM_type_info = new String[]{'SBM',s_ns0,'SBMType','1','1','false'};
		private transient String[] exportDateTime_type_info = new String[]{'exportDateTime',s_ns0,'CommonDateTimeType','1','1','false'};
		private transient String[] rpsn_type_info = new String[]{'rpsn',s_ns0,'CommonDecimalNumberType','1','1','false'};
		private transient String[] conditionsForRPSNCalculation_type_info = new String[]{'conditionsForRPSNCalculation',s_ns0,'DescriptionType','1','1','false'};
		private transient String[] foreignLoanCurrency_type_info = new String[]{'foreignLoanCurrency',s_ns0,'CurrencyType','1','1','false'};
		private transient String[] foreignLoanPaymentDiff_type_info = new String[]{'foreignLoanPaymentDiff',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] totalAmount_type_info = new String[]{'totalAmount',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] MUPayment_type_info = new String[]{'MUPayment',s_ns0,'MoneyAmountType','0','1','false'};
		private transient String[] possibleFine_type_info = new String[]{'possibleFine',s_ns0,'MoneyAmountType','1','1','false'};
		private transient String[] accountDetails_type_info = new String[]{'accountDetails',s_ns0,'AccountDetailListType','0','1','false'};
		private transient String[] modelId_type_info = new String[]{'modelId',s_ns0,'CommonNumberType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber','SBM','exportDateTime','rpsn','conditionsForRPSNCalculation','foreignLoanCurrency','foreignLoanPaymentDiff','totalAmount','MUPayment','possibleFine','accountDetails','modelId'};
		public StoreLoanAccountDataRequestBodyType(){
		}
		public StoreLoanAccountDataRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(loanIdNumberNode == null){
				this.loanIdNumber = null;
			} else{
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
			DOM.XmlNode SBMNode = responseNode.getChildElement('SBM', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.SBM = (SBMNode == null) ? null : SBMNode.getText();
			nodesParsed.add(SBMNode);
			//System.debug(this.SBM);			
			DOM.XmlNode exportDateTimeNode = responseNode.getChildElement('exportDateTime', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.exportDateTime = (exportDateTimeNode == null) ? null :  LoanServiceDataTypes.parseDateTime(exportDateTimeNode.getText());
			nodesParsed.add(exportDateTimeNode);
			//System.debug(this.exportDateTime);			
			DOM.XmlNode rpsnNode = responseNode.getChildElement('rpsn', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.rpsn = (rpsnNode == null) ? null : rpsnNode.getText();
			nodesParsed.add(rpsnNode);
			//System.debug(this.rpsn);			
			DOM.XmlNode conditionsForRPSNCalculationNode = responseNode.getChildElement('conditionsForRPSNCalculation', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.conditionsForRPSNCalculation = (conditionsForRPSNCalculationNode == null) ? null : conditionsForRPSNCalculationNode.getText();
			nodesParsed.add(conditionsForRPSNCalculationNode);
			//System.debug(this.conditionsForRPSNCalculation);			
			DOM.XmlNode foreignLoanCurrencyNode = responseNode.getChildElement('foreignLoanCurrency', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.foreignLoanCurrency = (foreignLoanCurrencyNode == null) ? null : foreignLoanCurrencyNode.getText();
			nodesParsed.add(foreignLoanCurrencyNode);
			//System.debug(this.foreignLoanCurrency);			
			DOM.XmlNode foreignLoanPaymentDiffNode = responseNode.getChildElement('foreignLoanPaymentDiff', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.foreignLoanPaymentDiff = (foreignLoanPaymentDiffNode == null) ? null : foreignLoanPaymentDiffNode.getText();
			nodesParsed.add(foreignLoanPaymentDiffNode);
			//System.debug(this.foreignLoanPaymentDiff);			
			DOM.XmlNode totalAmountNode = responseNode.getChildElement('totalAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.totalAmount = (totalAmountNode == null) ? null : totalAmountNode.getText();
			nodesParsed.add(totalAmountNode);
			//System.debug(this.totalAmount);			
			DOM.XmlNode MUPaymentNode = responseNode.getChildElement('MUPayment', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.MUPayment = (MUPaymentNode == null) ? null : MUPaymentNode.getText();
			nodesParsed.add(MUPaymentNode);
			//System.debug(this.MUPayment);			
			DOM.XmlNode possibleFineNode = responseNode.getChildElement('possibleFine', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.possibleFine = (possibleFineNode == null) ? null : possibleFineNode.getText();
			nodesParsed.add(possibleFineNode);
			//System.debug(this.possibleFine);			
			DOM.XmlNode accountDetailsNode = responseNode.getChildElement('accountDetails', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(accountDetailsNode == null){
				this.accountDetails = null;
			} else{
				LoanServiceDataTypes.AccountDetailListType accountDetailsObj = new LoanServiceDataTypes.AccountDetailListType(accountDetailsNode);
				nodesParsed.add(accountDetailsNode);
				this.accountDetails = accountDetailsObj;
			}
			//System.debug(this.accountDetails);			
			DOM.XmlNode modelIdNode = responseNode.getChildElement('modelId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			this.modelId = (modelIdNode == null) ? null : Long.valueOf(modelIdNode.getText());
			nodesParsed.add(modelIdNode);
			//System.debug(this.modelId);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(loanIdNumberObj != null){
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
			Dom.XmlNode SBMNode = outerNode.addChildElement('SBM', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.SBM != null){
				SBMNode.addTextNode(this.SBM);
			}
			Dom.XmlNode exportDateTimeNode = outerNode.addChildElement('exportDateTime', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.exportDateTime != null){
				exportDateTimeNode.addTextNode(String.valueOf(this.exportDateTime));
			}
			Dom.XmlNode rpsnNode = outerNode.addChildElement('rpsn', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.rpsn != null){
				rpsnNode.addTextNode(this.rpsn);
			}
			Dom.XmlNode conditionsForRPSNCalculationNode = outerNode.addChildElement('conditionsForRPSNCalculation', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.conditionsForRPSNCalculation != null){
				conditionsForRPSNCalculationNode.addTextNode(this.conditionsForRPSNCalculation);
			}
			Dom.XmlNode foreignLoanCurrencyNode = outerNode.addChildElement('foreignLoanCurrency', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.foreignLoanCurrency != null){
				foreignLoanCurrencyNode.addTextNode(this.foreignLoanCurrency);
			}
			Dom.XmlNode foreignLoanPaymentDiffNode = outerNode.addChildElement('foreignLoanPaymentDiff', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			foreignLoanPaymentDiffNode.addTextNode((this.foreignLoanPaymentDiff == null) ? '' : this.foreignLoanPaymentDiff);
			Dom.XmlNode totalAmountNode = outerNode.addChildElement('totalAmount', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.totalAmount != null){
				totalAmountNode.addTextNode(this.totalAmount);
			}
			Dom.XmlNode MUPaymentNode = outerNode.addChildElement('MUPayment', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			MUPaymentNode.addTextNode((this.MUPayment == null) ? '' : this.MUPayment);
			Dom.XmlNode possibleFineNode = outerNode.addChildElement('possibleFine', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.possibleFine != null){
				possibleFineNode.addTextNode(this.possibleFine);
			}
			
			LoanServiceDataTypes.AccountDetailListType accountDetailsObj = this.accountDetails;
			Dom.XmlNode accountDetailsNode = outerNode.addChildElement('accountDetails', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(accountDetailsObj != null){
				accountDetailsObj.populateXmlNode(accountDetailsNode);
			}
			Dom.XmlNode modelIdNode = outerNode.addChildElement('modelId', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(this.modelId != null){
				modelIdNode.addTextNode(String.valueOf(this.modelId));
			}
		}
	}
	public class StoreLoanAccountDataResponseBodyType {
		public BasicTypesService.OperationSuccessType operationSuccessType;
		private transient String[] operationSuccessType_type_info = new String[]{'operationSuccessType',s_ns0,'OperationSuccessType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'operationSuccessType'};
		public StoreLoanAccountDataResponseBodyType(){
		}
		public StoreLoanAccountDataResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode operationSuccessTypeNode = responseNode.getChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes');
			if(operationSuccessTypeNode == null){
				this.operationSuccessType = null;
			} else{
				BasicTypesService.OperationSuccessType operationSuccessTypeObj = new BasicTypesService.OperationSuccessType(operationSuccessTypeNode);
				nodesParsed.add(operationSuccessTypeNode);
				this.operationSuccessType = operationSuccessTypeObj;
			}
			//System.debug(this.operationSuccessType);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType operationSuccessTypeObj = this.operationSuccessType;
			Dom.XmlNode operationSuccessTypeNode = outerNode.addChildElement('operationSuccessType', 'http://service.cmss.cz/loan/LoanService/v05/datatypes', '');
			if(operationSuccessTypeObj != null){
				operationSuccessTypeObj.populateXmlNode(operationSuccessTypeNode);
			}
		}
	}
}