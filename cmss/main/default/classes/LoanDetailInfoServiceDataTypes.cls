//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)

public class LoanDetailInfoServiceDataTypes {
	private static final String s_ns0 = 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes';
	public class AccountDetailType {
		public BasicTypesService.AccountNumberType accountIdNumber;
		public Long accountType;
		// Restriction enumeration: 
		public String interestRate;
		private transient String[] accountIdNumber_type_info = new String[]{'accountIdNumber', s_ns0, 'AccountNumberType', '1', '1', 'false'};
		private transient String[] accountType_type_info = new String[]{'accountType', s_ns0, 'CodeListItemIdType', '1', '1', 'false'};
		private transient String[] interestRate_type_info = new String[]{'interestRate', s_ns0, 'InterestRateType', '0', '1', 'false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0, 'true', 'false'};
		private transient String[] field_order_type_info = new String[]{'accountIdNumber', 'accountType', 'interestRate'};
		public AccountDetailType() {
		}
		public AccountDetailType(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode accountIdNumberNode = responseNode.getChildElement('accountIdNumber', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			if (accountIdNumberNode == null) {
				this.accountIdNumber = null;
			} else {
				BasicTypesService.AccountNumberType accountIdNumberObj = new BasicTypesService.AccountNumberType(accountIdNumberNode);
				nodesParsed.add(accountIdNumberNode);
				this.accountIdNumber = accountIdNumberObj;
			}
			//System.debug(this.accountIdNumber);			
			DOM.XmlNode accountTypeNode = responseNode.getChildElement('accountType', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.accountType = (accountTypeNode == null) ? null : Long.valueOf(accountTypeNode.getText());
			nodesParsed.add(accountTypeNode);
			//System.debug(this.accountType);			
			DOM.XmlNode interestRateNode = responseNode.getChildElement('interestRate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.interestRate = (interestRateNode == null) ? null : interestRateNode.getText();
			nodesParsed.add(interestRateNode);
			//System.debug(this.interestRate);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {

			BasicTypesService.AccountNumberType accountIdNumberObj = this.accountIdNumber;
			Dom.XmlNode accountIdNumberNode = outerNode.addChildElement('accountIdNumber', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			if (accountIdNumberObj != null) {
				accountIdNumberObj.populateXmlNode(accountIdNumberNode);
			}
			Dom.XmlNode accountTypeNode = outerNode.addChildElement('accountType', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			if (this.accountType != null) {
				accountTypeNode.addTextNode(String.valueOf(this.accountType));
			}
			Dom.XmlNode interestRateNode = outerNode.addChildElement('interestRate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			interestRateNode.addTextNode((this.interestRate == null) ? '' : this.interestRate);
		}
	}
	public class GetLoanDetailInfoRequestBodyType {
		public BasicTypesService.AccountNumberType loanIdNumber;
		private transient String[] loanIdNumber_type_info = new String[]{'loanIdNumber', s_ns0, 'AccountNumberType', '1', '1', 'false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0, 'true', 'false'};
		private transient String[] field_order_type_info = new String[]{'loanIdNumber'};
		public GetLoanDetailInfoRequestBodyType() {
		}
		public GetLoanDetailInfoRequestBodyType(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanIdNumberNode = responseNode.getChildElement('loanIdNumber', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			if (loanIdNumberNode == null) {
				this.loanIdNumber = null;
			} else {
				BasicTypesService.AccountNumberType loanIdNumberObj = new BasicTypesService.AccountNumberType(loanIdNumberNode);
				nodesParsed.add(loanIdNumberNode);
				this.loanIdNumber = loanIdNumberObj;
			}
			//System.debug(this.loanIdNumber);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {

			BasicTypesService.AccountNumberType loanIdNumberObj = this.loanIdNumber;
			Dom.XmlNode loanIdNumberNode = outerNode.addChildElement('dat:loanIdNumber', null, null);
			if (loanIdNumberObj != null) {
				loanIdNumberObj.populateXmlNode(loanIdNumberNode);
			}
		}
	}

	//Extends http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
//Failed to find base class: http://service.cmss.cz/common/CommonMessage/v01:RequestMessage - Unable to create ApexClass for complexTypeQualifiedName: http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
	//Corresponding complexType was null.
	//Název parametru: complexType
	public class GetLoanDetailInfoRequestType {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader', s_ns0, 'RequestHeader', '1', '1', 'false'};
		public CommonMessageService.RequestHeader requestHeader_GetLoanDetailInfoRequestType;
		public LoanDetailInfoServiceDataTypes.GetLoanDetailInfoRequestBodyType requestBody;
		private transient String[] requestBody_type_info = new String[]{'requestBody', s_ns0, 'GetLoanDetailInfoRequestBodyType', '1', '1', 'false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0, 'true', 'false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader', 'requestBody'};
		public GetLoanDetailInfoRequestType() {
		}
		public GetLoanDetailInfoRequestType(CommonMessageService.RequestHeader requestHeader, LoanDetailInfoServiceDataTypes.GetLoanDetailInfoRequestBodyType requestBody) {
			this.requestHeader = requestHeader;
			this.requestBody = requestBody;
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {

			//System.assertEquals('getLoanDetailInfo', outerNode.getName());

			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('v01:requestHeader', null, null);
			if (requestHeaderObj != null) {
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}


			LoanDetailInfoServiceDataTypes.GetLoanDetailInfoRequestBodyType requestBodyObj = this.requestBody;
			Dom.XmlNode requestBodyNode = outerNode.addChildElement('dat:requestBody', null, null);
			if (requestBodyObj != null) {
				requestBodyObj.populateXmlNode(requestBodyNode);
			}
		}
	}
	public class GetLoanDetailInfoResponseBodyType {
		public LoanDetailInfoServiceDataTypes.LoanDetailInfoType loanDetailInfo;
		private transient String[] loanDetailInfo_type_info = new String[]{'loanDetailInfo', s_ns0, 'LoanDetailInfoType', '1', '1', 'false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0, 'true', 'false'};
		private transient String[] field_order_type_info = new String[]{'loanDetailInfo'};
		public GetLoanDetailInfoResponseBodyType() {
		}
		public GetLoanDetailInfoResponseBodyType(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode loanDetailInfoNode = responseNode.getChildElement('loanDetailInfo', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			if (loanDetailInfoNode == null) {
				this.loanDetailInfo = null;
			} else {
				LoanDetailInfoServiceDataTypes.LoanDetailInfoType loanDetailInfoObj = new LoanDetailInfoServiceDataTypes.LoanDetailInfoType(loanDetailInfoNode);
				nodesParsed.add(loanDetailInfoNode);
				this.loanDetailInfo = loanDetailInfoObj;
			}
			//System.debug(this.loanDetailInfo);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {

			LoanDetailInfoServiceDataTypes.LoanDetailInfoType loanDetailInfoObj = this.loanDetailInfo;
			Dom.XmlNode loanDetailInfoNode = outerNode.addChildElement('loanDetailInfo', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			if (loanDetailInfoObj != null) {
				loanDetailInfoObj.populateXmlNode(loanDetailInfoNode);
			}
		}
	}

	//Extends http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
//Failed to find base class: http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage - Unable to create ApexClass for complexTypeQualifiedName: http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
	//Corresponding complexType was null.
	//Název parametru: complexType
	public class GetLoanDetailInfoResponseType {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader', s_ns0, 'ResponseHeader', '1', '1', 'false'};
		public LoanDetailInfoServiceDataTypes.GetLoanDetailInfoResponseBodyType responseBody;
		private transient String[] responseBody_type_info = new String[]{'responseBody', s_ns0, 'GetLoanDetailInfoResponseBodyType', '1', '1', 'false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0, 'true', 'false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader', 'responseBody'};
		public GetLoanDetailInfoResponseType() {
		}
		public GetLoanDetailInfoResponseType(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('getLoanDetailInfoResponse', responseNode.getName());
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			if (responseHeaderNode == null) {
				this.responseHeader = null;
			} else {
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			

			//System.debug(this.responseHeader_GetLoanDetailInfoResponseType);			
			DOM.XmlNode responseBodyNode = responseNode.getChildElement('responseBody', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			if (responseBodyNode == null) {
				this.responseBody = null;
			} else {
				LoanDetailInfoServiceDataTypes.GetLoanDetailInfoResponseBodyType responseBodyObj = new LoanDetailInfoServiceDataTypes.GetLoanDetailInfoResponseBodyType(responseBodyNode);
				nodesParsed.add(responseBodyNode);
				this.responseBody = responseBodyObj;
			}
			//System.debug(this.responseBody);			
		}
	}
	public class IndemnityDetailType {
		public Long debtSecurityType;
		// Restriction enumeration: 
		public String acceptableValue;
		private transient String[] debtSecurityType_type_info = new String[]{'debtSecurityType', s_ns0, 'CodeListItemIdType', '0', '1', 'false'};
		private transient String[] acceptableValue_type_info = new String[]{'acceptableValue', s_ns0, 'MoneyAmountType', '0', '1', 'false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0, 'true', 'false'};
		private transient String[] field_order_type_info = new String[]{'debtSecurityType', 'acceptableValue'};
		public IndemnityDetailType() {
		}
		public IndemnityDetailType(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode debtSecurityTypeNode = responseNode.getChildElement('debtSecurityType', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.debtSecurityType = (debtSecurityTypeNode == null) ? null : Long.valueOf(debtSecurityTypeNode.getText());
			nodesParsed.add(debtSecurityTypeNode);
			//System.debug(this.debtSecurityType);			
			DOM.XmlNode acceptableValueNode = responseNode.getChildElement('acceptableValue', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.acceptableValue = (acceptableValueNode == null) ? null : acceptableValueNode.getText();
			nodesParsed.add(acceptableValueNode);
			//System.debug(this.acceptableValue);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {
			Dom.XmlNode debtSecurityTypeNode = outerNode.addChildElement('debtSecurityType', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			debtSecurityTypeNode.addTextNode((this.debtSecurityType == null) ? '' : String.valueOf(this.debtSecurityType));
			Dom.XmlNode acceptableValueNode = outerNode.addChildElement('acceptableValue', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			acceptableValueNode.addTextNode((this.acceptableValue == null) ? '' : this.acceptableValue);
		}
	}
	public class ListOfAccountsType {
		public LoanDetailInfoServiceDataTypes.AccountDetailType[] accountDetail;
		private transient String[] accountDetail_type_info = new String[]{'accountDetail', s_ns0, 'AccountDetailType', '0', '-1', 'false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0, 'true', 'false'};
		private transient String[] field_order_type_info = new String[]{'accountDetail'};
		public ListOfAccountsType() {
		}
		public ListOfAccountsType(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] accountDetailChildren = responseNode.getChildElements();
			LoanDetailInfoServiceDataTypes.AccountDetailType[] accountDetailList = new List<LoanDetailInfoServiceDataTypes.AccountDetailType>();
			if (accountDetailChildren == null || accountDetailChildren.size() == 0) {
				this.accountDetail = null;
			} else {
				for (DOM.XmlNode childNode : accountDetailChildren) {
					if (childNode.GetName() == 'accountDetail') {
						LoanDetailInfoServiceDataTypes.AccountDetailType Obj = new LoanDetailInfoServiceDataTypes.AccountDetailType(childNode);
						accountDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.accountDetail = accountDetailList;
			}
			//System.debug(this.accountDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {

			LoanDetailInfoServiceDataTypes.AccountDetailType[] accountDetailObj = this.accountDetail;
			if (accountDetailObj != null) {
				for (LoanDetailInfoServiceDataTypes.AccountDetailType element : accountDetailObj) {
					Dom.XmlNode accountDetailNode = outerNode.addChildElement('accountDetail', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
					element.populateXmlNode(accountDetailNode);
				}
			}
		}
	}
	public class ListOfIndemnityType {
		public LoanDetailInfoServiceDataTypes.IndemnityDetailType[] indemnityDetail;
		private transient String[] indemnityDetail_type_info = new String[]{'indemnityDetail', s_ns0, 'IndemnityDetailType', '0', '-1', 'false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0, 'true', 'false'};
		private transient String[] field_order_type_info = new String[]{'indemnityDetail'};
		public ListOfIndemnityType() {
		}
		public ListOfIndemnityType(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] indemnityDetailChildren = responseNode.getChildElements();
			LoanDetailInfoServiceDataTypes.IndemnityDetailType[] indemnityDetailList = new List<LoanDetailInfoServiceDataTypes.IndemnityDetailType>();
			if (indemnityDetailChildren == null || indemnityDetailChildren.size() == 0) {
				this.indemnityDetail = null;
			} else {
				for (DOM.XmlNode childNode : indemnityDetailChildren) {
					if (childNode.GetName() == 'indemnityDetail') {
						LoanDetailInfoServiceDataTypes.IndemnityDetailType Obj = new LoanDetailInfoServiceDataTypes.IndemnityDetailType(childNode);
						indemnityDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.indemnityDetail = indemnityDetailList;
			}
			//System.debug(this.indemnityDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {

			LoanDetailInfoServiceDataTypes.IndemnityDetailType[] indemnityDetailObj = this.indemnityDetail;
			if (indemnityDetailObj != null) {
				for (LoanDetailInfoServiceDataTypes.IndemnityDetailType element : indemnityDetailObj) {
					Dom.XmlNode indemnityDetailNode = outerNode.addChildElement('indemnityDetail', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
					element.populateXmlNode(indemnityDetailNode);
				}
			}
		}
	}
	public class ListOfPaymentsType {
		public LoanDetailInfoServiceDataTypes.PaymentsDetailType[] paymentsDetail;
		private transient String[] paymentsDetail_type_info = new String[]{'paymentsDetail', s_ns0, 'PaymentsDetailType', '0', '-1', 'false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0, 'true', 'false'};
		private transient String[] field_order_type_info = new String[]{'paymentsDetail'};
		public ListOfPaymentsType() {
		}
		public ListOfPaymentsType(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			Dom.XmlNode[] paymentsDetailChildren = responseNode.getChildElements();
			LoanDetailInfoServiceDataTypes.PaymentsDetailType[] paymentsDetailList = new List<LoanDetailInfoServiceDataTypes.PaymentsDetailType>();
			if (paymentsDetailChildren == null || paymentsDetailChildren.size() == 0) {
				this.paymentsDetail = null;
			} else {
				for (DOM.XmlNode childNode : paymentsDetailChildren) {
					if (childNode.GetName() == 'paymentsDetail') {
						LoanDetailInfoServiceDataTypes.PaymentsDetailType Obj = new LoanDetailInfoServiceDataTypes.PaymentsDetailType(childNode);
						paymentsDetailList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.paymentsDetail = paymentsDetailList;
			}
			//System.debug(this.paymentsDetail);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {

			LoanDetailInfoServiceDataTypes.PaymentsDetailType[] paymentsDetailObj = this.paymentsDetail;
			if (paymentsDetailObj != null) {
				for (LoanDetailInfoServiceDataTypes.PaymentsDetailType element : paymentsDetailObj) {
					Dom.XmlNode paymentsDetailNode = outerNode.addChildElement('paymentsDetail', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
					element.populateXmlNode(paymentsDetailNode);
				}
			}
		}
	}
	public class LoanDetailInfoType {
		// Restriction enumeration:
		public Date signDate;
		// Restriction enumeration: 
		public Date receiptDate;
		// Restriction enumeration: 
		public Date approvalDate1;
		// Restriction enumeration: 
		public Date approvalDate2;
		// Restriction enumeration: 
		public Date acceptanceDate;
		// Restriction enumeration: 
		public Date signDateOwner;
		public String loanUsageCode;
		public Long realEstateUsageCode;
		public Long loanPlaceCode;
		public String personNumber;
		public Long decisiveUserId;
		public String loanStateCode;
		// Restriction enumeration: 
		public Decimal variableAmount;
		public Long originalLoanModeCode;
		public Long currentLoanModeCode;
		public String loanUsage2Code;
		public String loanUsage3Desc;
		public LoanDetailInfoServiceDataTypes.ListOfIndemnityType listOfIndemnity;
		public LoanDetailInfoServiceDataTypes.ListOfPaymentsType listOfPayments;
		public LoanDetailInfoServiceDataTypes.ListOfAccountsType listOfAccounts;
		public String aquisitionChannelCode;
		public String loanCaseAdministrator;
		public String establishmentTypeCode;
		public String creditConditions;
		// Restriction enumeration: 
		public Date lastDrawdownReminder;
		// Restriction enumeration: 
		public Date lastChangeDate;
		// Restriction enumeration: 
		public String restObligAmount;
		// Restriction enumeration: 
		public String requestedAmount;
		public Date contractBeginDate;
		private transient String[] signDate_type_info = new String[]{'signDate', s_ns0, 'CommonDateType', '0', '1', 'false'};
		private transient String[] receiptDate_type_info = new String[]{'receiptDate', s_ns0, 'CommonDateType', '0', '1', 'false'};
		private transient String[] approvalDate1_type_info = new String[]{'approvalDate1', s_ns0, 'CommonDateType', '0', '1', 'false'};
		private transient String[] approvalDate2_type_info = new String[]{'approvalDate2', s_ns0, 'CommonDateType', '0', '1', 'false'};
		private transient String[] acceptanceDate_type_info = new String[]{'acceptanceDate', s_ns0, 'CommonDateType', '0', '1', 'false'};
		private transient String[] signDateOwner_type_info = new String[]{'signDateOwner', s_ns0, 'CommonDateType', '0', '1', 'false'};
		private transient String[] loanUsageCode_type_info = new String[]{'loanUsageCode', s_ns0, 'CodeListItemIdType', '0', '1', 'false'};
		private transient String[] realEstateUsageCode_type_info = new String[]{'realEstateUsageCode', s_ns0, 'CodeListItemIdType', '0', '1', 'false'};
		private transient String[] loanPlaceCode_type_info = new String[]{'loanPlaceCode', s_ns0, 'CodeListItemIdType', '0', '1', 'false'};
		private transient String[] personNumber_type_info = new String[]{'personNumber', s_ns0, 'PersonNumberType', '0', '1', 'false'};
		private transient String[] decisiveUserId_type_info = new String[]{'decisiveUserId', s_ns0, 'PersonNumberType', '0', '1', 'false'};
		private transient String[] loanStateCode_type_info = new String[]{'loanStateCode', s_ns0, 'CodeListItemIdType', '0', '1', 'false'};
		private transient String[] variableAmount_type_info = new String[]{'variableAmount', s_ns0, 'MoneyAmountType', '0', '1', 'false'};
		private transient String[] originalLoanModeCode_type_info = new String[]{'originalLoanModeCode', s_ns0, 'CodeListItemIdType', '0', '1', 'false'};
		private transient String[] currentLoanModeCode_type_info = new String[]{'currentLoanModeCode', s_ns0, 'CodeListItemIdType', '0', '1', 'false'};
		private transient String[] loanUsage2Code_type_info = new String[]{'loanUsage2Code', s_ns0, 'CodeListItemIdType', '0', '1', 'false'};
		private transient String[] loanUsage3Desc_type_info = new String[]{'loanUsage3Desc', s_ns0, 'DescriptionType', '0', '1', 'false'};
		private transient String[] listOfIndemnity_type_info = new String[]{'listOfIndemnity', s_ns0, 'ListOfIndemnityType', '0', '1', 'false'};
		private transient String[] listOfPayments_type_info = new String[]{'listOfPayments', s_ns0, 'ListOfPaymentsType', '0', '1', 'false'};
		private transient String[] listOfAccounts_type_info = new String[]{'listOfAccounts', s_ns0, 'ListOfAccountsType', '0', '1', 'false'};
		private transient String[] aquisitionChannelCode_type_info = new String[]{'aquisitionChannelCode', s_ns0, 'CommonNumberType', '0', '1', 'false'};
		private transient String[] loanCaseAdministrator_type_info = new String[]{'loanCaseAdministrator', s_ns0, 'DescriptionType', '0', '1', 'false'};
		private transient String[] establishmentTypeCode_type_info = new String[]{'establishmentTypeCode', s_ns0, 'CommonNumberType', '0', '1', 'false'};
		private transient String[] creditConditions_type_info = new String[]{'creditConditions', s_ns0, 'DescriptionType', '0', '1', 'false'};
		private transient String[] lastDrawdownReminder_type_info = new String[]{'lastDrawdownReminder', s_ns0, 'CommonDateType', '0', '1', 'false'};
		private transient String[] lastChangeDate_type_info = new String[]{'lastChangeDate', s_ns0, 'c', '0', '1', 'false'};
		private transient String[] restObligAmount_type_info = new String[]{'restObligAmount', s_ns0, 'MoneyAmountType', '0', '1', 'false'};
		private transient String[] requestedAmount_type_info = new String[]{'requestedAmount', s_ns0, 'MoneyAmountType', '0', '1', 'false'};
		private transient String[] contractBeginDate_type_info = new String[]{'contractBeginDate', s_ns0, 'CommonDateType', '0', '1', 'false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0, 'true', 'false'};
		private transient String[] field_order_type_info = new String[]{'signDate', 'receiptDate', 'approvalDate1', 'approvalDate2', 'acceptanceDate', 'signDateOwner', 'loanUsageCode', 'realEstateUsageCode', 'loanPlaceCode', 'personNumber', 'decisiveUserId', 'loanStateCode', 'variableAmount', 'originalLoanModeCode', 'currentLoanModeCode', 'loanUsage2Code', 'loanUsage3Desc', 'listOfIndemnity', 'listOfPayments', 'listOfAccounts', 'aquisitionChannelCode', 'loanCaseAdministrator', 'establishmentTypeCode', 'creditConditions', 'lastDrawdownReminder', 'lastChangeDate', 'restObligAmount', 'requestedAmount'};
		public LoanDetailInfoType() {
		}
		public LoanDetailInfoType(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode signDateNode = responseNode.getChildElement('signDate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.signDate = (signDateNode == null) ? null : Date.valueOf(signDateNode.getText());
			nodesParsed.add(signDateNode);
			//System.debug(this.signDate);			
			DOM.XmlNode receiptDateNode = responseNode.getChildElement('receiptDate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.receiptDate = (receiptDateNode == null) ? null : Date.valueOf(receiptDateNode.getText());
			nodesParsed.add(receiptDateNode);
			//System.debug(this.receiptDate);			
			DOM.XmlNode approvalDate1Node = responseNode.getChildElement('approvalDate1', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.approvalDate1 = (approvalDate1Node == null) ? null : Date.valueOf(approvalDate1Node.getText());
			nodesParsed.add(approvalDate1Node);
			//System.debug(this.approvalDate1);			
			DOM.XmlNode approvalDate2Node = responseNode.getChildElement('approvalDate2', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.approvalDate2 = (approvalDate2Node == null) ? null : Date.valueOf(approvalDate2Node.getText());
			nodesParsed.add(approvalDate2Node);
			//System.debug(this.approvalDate2);			
			DOM.XmlNode acceptanceDateNode = responseNode.getChildElement('acceptanceDate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.acceptanceDate = (acceptanceDateNode == null) ? null : Date.valueOf(acceptanceDateNode.getText());
			nodesParsed.add(acceptanceDateNode);
			//System.debug(this.acceptanceDate);			
			DOM.XmlNode signDateOwnerNode = responseNode.getChildElement('signDateOwner', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.signDateOwner = (signDateOwnerNode == null) ? null : Date.valueOf(signDateOwnerNode.getText());
			nodesParsed.add(signDateOwnerNode);
			//System.debug(this.signDateOwner);			
			DOM.XmlNode loanUsageCodeNode = responseNode.getChildElement('loanUsageCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.loanUsageCode = (loanUsageCodeNode == null) ? null : loanUsageCodeNode.getText();
			nodesParsed.add(loanUsageCodeNode);
			DOM.XmlNode realEstateUsageCodeNode = responseNode.getChildElement('realEstateUsageCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.realEstateUsageCode = (realEstateUsageCodeNode == null) ? null : Long.valueOf(realEstateUsageCodeNode.getText());
			nodesParsed.add(realEstateUsageCodeNode);
			//System.debug(this.realEstateUsageCode);			
			DOM.XmlNode loanPlaceCodeNode = responseNode.getChildElement('loanPlaceCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.loanPlaceCode = (loanPlaceCodeNode == null) ? null : Long.valueOf(loanPlaceCodeNode.getText());
			nodesParsed.add(loanPlaceCodeNode);
			//System.debug(this.loanPlaceCode);			
			DOM.XmlNode personNumberNode = responseNode.getChildElement('personNumber', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.personNumber = (personNumberNode == null) ? null : personNumberNode.getText();
			nodesParsed.add(personNumberNode);
			DOM.XmlNode decisiveUserIdNode = responseNode.getChildElement('decisiveUserId', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.decisiveUserId = (decisiveUserIdNode == null) ? null : Long.valueOf(decisiveUserIdNode.getText());
			nodesParsed.add(decisiveUserIdNode);
			//System.debug(this.decisiveUserId);			
			DOM.XmlNode loanStateCodeNode = responseNode.getChildElement('loanStateCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.loanStateCode = (loanStateCodeNode == null) ? null : loanStateCodeNode.getText();
			nodesParsed.add(loanStateCodeNode);
			DOM.XmlNode variableAmountNode = responseNode.getChildElement('variableAmount', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.variableAmount = (variableAmountNode == null) ? null : Decimal.valueOf(variableAmountNode.getText().replace(',', '.'));
			nodesParsed.add(variableAmountNode);
			DOM.XmlNode originalLoanModeCodeNode = responseNode.getChildElement('originalLoanModeCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.originalLoanModeCode = (originalLoanModeCodeNode == null) ? null : Long.valueOf(originalLoanModeCodeNode.getText());
			nodesParsed.add(originalLoanModeCodeNode);
			//System.debug(this.originalLoanModeCode);			
			DOM.XmlNode currentLoanModeCodeNode = responseNode.getChildElement('currentLoanModeCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.currentLoanModeCode = (currentLoanModeCodeNode == null) ? null : Long.valueOf(currentLoanModeCodeNode.getText());
			nodesParsed.add(currentLoanModeCodeNode);
			//System.debug(this.currentLoanModeCode);			
			DOM.XmlNode loanUsage2CodeNode = responseNode.getChildElement('loanUsage2Code', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.loanUsage2Code = (loanUsage2CodeNode == null) ? null : loanUsage2CodeNode.getText();
			nodesParsed.add(loanUsage2CodeNode);
			DOM.XmlNode loanUsage3DescNode = responseNode.getChildElement('loanUsage3Desc', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.loanUsage3Desc = (loanUsage3DescNode == null) ? null : loanUsage3DescNode.getText();
			nodesParsed.add(loanUsage3DescNode);
			//System.debug(this.loanUsage3Desc);			
			DOM.XmlNode listOfIndemnityNode = responseNode.getChildElement('listOfIndemnity', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			if (listOfIndemnityNode == null) {
				this.listOfIndemnity = null;
			} else {
				LoanDetailInfoServiceDataTypes.ListOfIndemnityType listOfIndemnityObj = new LoanDetailInfoServiceDataTypes.ListOfIndemnityType(listOfIndemnityNode);
				nodesParsed.add(listOfIndemnityNode);
				this.listOfIndemnity = listOfIndemnityObj;
			}
			//System.debug(this.listOfIndemnity);			
			DOM.XmlNode listOfPaymentsNode = responseNode.getChildElement('listOfPayments', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			if (listOfPaymentsNode == null) {
				this.listOfPayments = null;
			} else {
				LoanDetailInfoServiceDataTypes.ListOfPaymentsType listOfPaymentsObj = new LoanDetailInfoServiceDataTypes.ListOfPaymentsType(listOfPaymentsNode);
				nodesParsed.add(listOfPaymentsNode);
				this.listOfPayments = listOfPaymentsObj;
			}
			//System.debug(this.listOfPayments);			
			DOM.XmlNode listOfAccountsNode = responseNode.getChildElement('listOfAccounts', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			if (listOfAccountsNode == null) {
				this.listOfAccounts = null;
			} else {
				LoanDetailInfoServiceDataTypes.ListOfAccountsType listOfAccountsObj = new LoanDetailInfoServiceDataTypes.ListOfAccountsType(listOfAccountsNode);
				nodesParsed.add(listOfAccountsNode);
				this.listOfAccounts = listOfAccountsObj;
			}
			//System.debug(this.listOfAccounts);			
			DOM.XmlNode aquisitionChannelCodeNode = responseNode.getChildElement('aquisitionChannelCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.aquisitionChannelCode = (aquisitionChannelCodeNode == null) ? null : aquisitionChannelCodeNode.getText();
			nodesParsed.add(aquisitionChannelCodeNode);
			//System.debug(this.aquisitionChannelCode);			
			DOM.XmlNode loanCaseAdministratorNode = responseNode.getChildElement('loanCaseAdministrator', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.loanCaseAdministrator = (loanCaseAdministratorNode == null) ? null : loanCaseAdministratorNode.getText();
			nodesParsed.add(loanCaseAdministratorNode);
			//System.debug(this.loanCaseAdministrator);			
			DOM.XmlNode establishmentTypeCodeNode = responseNode.getChildElement('establishmentTypeCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.establishmentTypeCode = (establishmentTypeCodeNode == null) ? null : establishmentTypeCodeNode.getText();
			nodesParsed.add(establishmentTypeCodeNode);
			//System.debug(this.establishmentTypeCode);			
			DOM.XmlNode creditConditionsNode = responseNode.getChildElement('creditConditions', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.creditConditions = (creditConditionsNode == null) ? null : creditConditionsNode.getText();
			nodesParsed.add(creditConditionsNode);
			//System.debug(this.creditConditions);			
			DOM.XmlNode lastDrawdownReminderNode = responseNode.getChildElement('lastDrawdownReminder', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.lastDrawdownReminder = (lastDrawdownReminderNode == null) ? null : Date.valueOf(lastDrawdownReminderNode.getText());
			nodesParsed.add(lastDrawdownReminderNode);
			//System.debug(this.lastDrawdownReminder);			
			DOM.XmlNode lastChangeDateNode = responseNode.getChildElement('lastChangeDate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.lastChangeDate = (lastChangeDateNode == null) ? null : Date.valueOf(lastChangeDateNode.getText());
			nodesParsed.add(lastChangeDateNode);
			//System.debug(this.lastChangeDate);			
			DOM.XmlNode restObligAmountNode = responseNode.getChildElement('restObligAmount', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.restObligAmount = (restObligAmountNode == null) ? null : restObligAmountNode.getText();
			nodesParsed.add(restObligAmountNode);
			//System.debug(this.restObligAmount);			
			DOM.XmlNode requestedAmountNode = responseNode.getChildElement('requestedAmount', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.requestedAmount = (requestedAmountNode == null) ? null : requestedAmountNode.getText();
			nodesParsed.add(requestedAmountNode);
			//System.debug(this.requestedAmount);	
			DOM.XmlNode contractBeginDateNode = responseNode.getChildElement('contractBeginDate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.contractBeginDate = (contractBeginDateNode == null) ? null : Date.valueOf(contractBeginDateNode.getText());
			nodesParsed.add(contractBeginDateNode);
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {
			Dom.XmlNode signDateNode = outerNode.addChildElement('signDate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			signDateNode.addTextNode((this.signDate == null) ? '' : String.valueOf(this.signDate));
			Dom.XmlNode receiptDateNode = outerNode.addChildElement('receiptDate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			receiptDateNode.addTextNode((this.receiptDate == null) ? '' : String.valueOf(this.receiptDate));
			Dom.XmlNode approvalDate1Node = outerNode.addChildElement('approvalDate1', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			approvalDate1Node.addTextNode((this.approvalDate1 == null) ? '' : String.valueOf(this.approvalDate1));
			Dom.XmlNode approvalDate2Node = outerNode.addChildElement('approvalDate2', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			approvalDate2Node.addTextNode((this.approvalDate2 == null) ? '' : String.valueOf(this.approvalDate2));
			Dom.XmlNode acceptanceDateNode = outerNode.addChildElement('acceptanceDate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			acceptanceDateNode.addTextNode((this.acceptanceDate == null) ? '' : String.valueOf(this.acceptanceDate));
			Dom.XmlNode signDateOwnerNode = outerNode.addChildElement('signDateOwner', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			signDateOwnerNode.addTextNode((this.signDateOwner == null) ? '' : String.valueOf(this.signDateOwner));
			Dom.XmlNode loanUsageCodeNode = outerNode.addChildElement('loanUsageCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			loanUsageCodeNode.addTextNode((this.loanUsageCode == null) ? '' : String.valueOf(this.loanUsageCode));
			Dom.XmlNode realEstateUsageCodeNode = outerNode.addChildElement('realEstateUsageCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			realEstateUsageCodeNode.addTextNode((this.realEstateUsageCode == null) ? '' : String.valueOf(this.realEstateUsageCode));
			Dom.XmlNode loanPlaceCodeNode = outerNode.addChildElement('loanPlaceCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			loanPlaceCodeNode.addTextNode((this.loanPlaceCode == null) ? '' : String.valueOf(this.loanPlaceCode));
			Dom.XmlNode personNumberNode = outerNode.addChildElement('personNumber', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			personNumberNode.addTextNode((this.personNumber == null) ? '' : String.valueOf(this.personNumber));
			Dom.XmlNode decisiveUserIdNode = outerNode.addChildElement('decisiveUserId', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			decisiveUserIdNode.addTextNode((this.decisiveUserId == null) ? '' : String.valueOf(this.decisiveUserId));
			Dom.XmlNode loanStateCodeNode = outerNode.addChildElement('loanStateCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			loanStateCodeNode.addTextNode((this.loanStateCode == null) ? '' : String.valueOf(this.loanStateCode));
			Dom.XmlNode variableAmountNode = outerNode.addChildElement('variableAmount', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			variableAmountNode.addTextNode((this.variableAmount == null) ? '' : String.valueOf(this.variableAmount));
			Dom.XmlNode originalLoanModeCodeNode = outerNode.addChildElement('originalLoanModeCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			originalLoanModeCodeNode.addTextNode((this.originalLoanModeCode == null) ? '' : String.valueOf(this.originalLoanModeCode));
			Dom.XmlNode currentLoanModeCodeNode = outerNode.addChildElement('currentLoanModeCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			currentLoanModeCodeNode.addTextNode((this.currentLoanModeCode == null) ? '' : String.valueOf(this.currentLoanModeCode));
			Dom.XmlNode loanUsage2CodeNode = outerNode.addChildElement('loanUsage2Code', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			loanUsage2CodeNode.addTextNode((this.loanUsage2Code == null) ? '' : String.valueOf(this.loanUsage2Code));
			Dom.XmlNode loanUsage3DescNode = outerNode.addChildElement('loanUsage3Desc', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			loanUsage3DescNode.addTextNode((this.loanUsage3Desc == null) ? '' : this.loanUsage3Desc);

			LoanDetailInfoServiceDataTypes.ListOfIndemnityType listOfIndemnityObj = this.listOfIndemnity;
			Dom.XmlNode listOfIndemnityNode = outerNode.addChildElement('listOfIndemnity', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			if (listOfIndemnityObj != null) {
				listOfIndemnityObj.populateXmlNode(listOfIndemnityNode);
			}

			LoanDetailInfoServiceDataTypes.ListOfPaymentsType listOfPaymentsObj = this.listOfPayments;
			Dom.XmlNode listOfPaymentsNode = outerNode.addChildElement('listOfPayments', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			if (listOfPaymentsObj != null) {
				listOfPaymentsObj.populateXmlNode(listOfPaymentsNode);
			}

			LoanDetailInfoServiceDataTypes.ListOfAccountsType listOfAccountsObj = this.listOfAccounts;
			Dom.XmlNode listOfAccountsNode = outerNode.addChildElement('listOfAccounts', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			if (listOfAccountsObj != null) {
				listOfAccountsObj.populateXmlNode(listOfAccountsNode);
			}
			Dom.XmlNode aquisitionChannelCodeNode = outerNode.addChildElement('aquisitionChannelCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			aquisitionChannelCodeNode.addTextNode((this.aquisitionChannelCode == null) ? '' : this.aquisitionChannelCode);
			Dom.XmlNode loanCaseAdministratorNode = outerNode.addChildElement('loanCaseAdministrator', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			loanCaseAdministratorNode.addTextNode((this.loanCaseAdministrator == null) ? '' : this.loanCaseAdministrator);
			Dom.XmlNode establishmentTypeCodeNode = outerNode.addChildElement('establishmentTypeCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			establishmentTypeCodeNode.addTextNode((this.establishmentTypeCode == null) ? '' : this.establishmentTypeCode);
			Dom.XmlNode creditConditionsNode = outerNode.addChildElement('creditConditions', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			creditConditionsNode.addTextNode((this.creditConditions == null) ? '' : this.creditConditions);
			Dom.XmlNode lastDrawdownReminderNode = outerNode.addChildElement('lastDrawdownReminder', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			lastDrawdownReminderNode.addTextNode((this.lastDrawdownReminder == null) ? '' : String.valueOf(this.lastDrawdownReminder));
			Dom.XmlNode lastChangeDateNode = outerNode.addChildElement('lastChangeDate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			lastChangeDateNode.addTextNode((this.lastChangeDate == null) ? '' : String.valueOf(this.lastChangeDate));
			Dom.XmlNode restObligAmountNode = outerNode.addChildElement('restObligAmount', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			restObligAmountNode.addTextNode((this.restObligAmount == null) ? '' : String.valueOf(this.restObligAmount));
			Dom.XmlNode requestedAmountNode = outerNode.addChildElement('requestedAmount', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			requestedAmountNode.addTextNode((this.requestedAmount == null) ? '' : this.requestedAmount);
			Dom.XmlNode contractBeginDateNode = outerNode.addChildElement('contractBeginDate', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			contractBeginDateNode.addTextNode((this.contractBeginDate == null) ? '' : String.valueOf(this.contractBeginDate));
		}
	}
	public class PaymentsDetailType {
		public String payingSegmentPrefixNumber;
		public String payingSegmentNumber;
		public String payingSegmentBankCode;
		public String payingSegmentConstaintSymbol;
		public String payingSegmentVariableSymbol;
		public String payingSegmentSpecificSymbol;
		public String payingSegmentAV;
		public String payingSegmentRecipient;
		private transient String[] payingSegmentPrefixNumber_type_info = new String[]{'payingSegmentPrefixNumber', s_ns0, 'DescriptionType', '0', '1', 'false'};
		private transient String[] payingSegmentNumber_type_info = new String[]{'payingSegmentNumber', s_ns0, 'DescriptionType', '0', '1', 'false'};
		private transient String[] payingSegmentBankCode_type_info = new String[]{'payingSegmentBankCode', s_ns0, 'DescriptionType', '0', '1', 'false'};
		private transient String[] payingSegmentConstaintSymbol_type_info = new String[]{'payingSegmentConstaintSymbol', s_ns0, 'DescriptionType', '0', '1', 'false'};
		private transient String[] payingSegmentVariableSymbol_type_info = new String[]{'payingSegmentVariableSymbol', s_ns0, 'DescriptionType', '0', '1', 'false'};
		private transient String[] payingSegmentSpecificSymbol_type_info = new String[]{'payingSegmentSpecificSymbol', s_ns0, 'DescriptionType', '0', '1', 'false'};
		private transient String[] payingSegmentAV_type_info = new String[]{'payingSegmentAV', s_ns0, 'DescriptionType', '0', '1', 'false'};
		private transient String[] payingSegmentRecipient_type_info = new String[]{'payingSegmentRecipient', s_ns0, 'DescriptionType', '0', '1', 'false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0, 'true', 'false'};
		private transient String[] field_order_type_info = new String[]{'payingSegmentPrefixNumber', 'payingSegmentNumber', 'payingSegmentBankCode', 'payingSegmentConstaintSymbol', 'payingSegmentVariableSymbol', 'payingSegmentSpecificSymbol', 'payingSegmentAV', 'payingSegmentRecipient'};
		public PaymentsDetailType() {
		}
		public PaymentsDetailType(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode payingSegmentPrefixNumberNode = responseNode.getChildElement('payingSegmentPrefixNumber', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.payingSegmentPrefixNumber = (payingSegmentPrefixNumberNode == null) ? null : payingSegmentPrefixNumberNode.getText();
			nodesParsed.add(payingSegmentPrefixNumberNode);
			//System.debug(this.payingSegmentPrefixNumber);			
			DOM.XmlNode payingSegmentNumberNode = responseNode.getChildElement('payingSegmentNumber', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.payingSegmentNumber = (payingSegmentNumberNode == null) ? null : payingSegmentNumberNode.getText();
			nodesParsed.add(payingSegmentNumberNode);
			//System.debug(this.payingSegmentNumber);			
			DOM.XmlNode payingSegmentBankCodeNode = responseNode.getChildElement('payingSegmentBankCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.payingSegmentBankCode = (payingSegmentBankCodeNode == null) ? null : payingSegmentBankCodeNode.getText();
			nodesParsed.add(payingSegmentBankCodeNode);
			//System.debug(this.payingSegmentBankCode);			
			DOM.XmlNode payingSegmentConstaintSymbolNode = responseNode.getChildElement('payingSegmentConstaintSymbol', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.payingSegmentConstaintSymbol = (payingSegmentConstaintSymbolNode == null) ? null : payingSegmentConstaintSymbolNode.getText();
			nodesParsed.add(payingSegmentConstaintSymbolNode);
			//System.debug(this.payingSegmentConstaintSymbol);			
			DOM.XmlNode payingSegmentVariableSymbolNode = responseNode.getChildElement('payingSegmentVariableSymbol', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.payingSegmentVariableSymbol = (payingSegmentVariableSymbolNode == null) ? null : payingSegmentVariableSymbolNode.getText();
			nodesParsed.add(payingSegmentVariableSymbolNode);
			//System.debug(this.payingSegmentVariableSymbol);			
			DOM.XmlNode payingSegmentSpecificSymbolNode = responseNode.getChildElement('payingSegmentSpecificSymbol', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.payingSegmentSpecificSymbol = (payingSegmentSpecificSymbolNode == null) ? null : payingSegmentSpecificSymbolNode.getText();
			nodesParsed.add(payingSegmentSpecificSymbolNode);
			//System.debug(this.payingSegmentSpecificSymbol);			
			DOM.XmlNode payingSegmentAVNode = responseNode.getChildElement('payingSegmentAV', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.payingSegmentAV = (payingSegmentAVNode == null) ? null : payingSegmentAVNode.getText();
			nodesParsed.add(payingSegmentAVNode);
			//System.debug(this.payingSegmentAV);			
			DOM.XmlNode payingSegmentRecipientNode = responseNode.getChildElement('payingSegmentRecipient', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes');
			this.payingSegmentRecipient = (payingSegmentRecipientNode == null) ? null : payingSegmentRecipientNode.getText();
			nodesParsed.add(payingSegmentRecipientNode);
			//System.debug(this.payingSegmentRecipient);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {
			Dom.XmlNode payingSegmentPrefixNumberNode = outerNode.addChildElement('payingSegmentPrefixNumber', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			payingSegmentPrefixNumberNode.addTextNode((this.payingSegmentPrefixNumber == null) ? '' : this.payingSegmentPrefixNumber);
			Dom.XmlNode payingSegmentNumberNode = outerNode.addChildElement('payingSegmentNumber', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			payingSegmentNumberNode.addTextNode((this.payingSegmentNumber == null) ? '' : this.payingSegmentNumber);
			Dom.XmlNode payingSegmentBankCodeNode = outerNode.addChildElement('payingSegmentBankCode', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			payingSegmentBankCodeNode.addTextNode((this.payingSegmentBankCode == null) ? '' : this.payingSegmentBankCode);
			Dom.XmlNode payingSegmentConstaintSymbolNode = outerNode.addChildElement('payingSegmentConstaintSymbol', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			payingSegmentConstaintSymbolNode.addTextNode((this.payingSegmentConstaintSymbol == null) ? '' : this.payingSegmentConstaintSymbol);
			Dom.XmlNode payingSegmentVariableSymbolNode = outerNode.addChildElement('payingSegmentVariableSymbol', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			payingSegmentVariableSymbolNode.addTextNode((this.payingSegmentVariableSymbol == null) ? '' : this.payingSegmentVariableSymbol);
			Dom.XmlNode payingSegmentSpecificSymbolNode = outerNode.addChildElement('payingSegmentSpecificSymbol', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			payingSegmentSpecificSymbolNode.addTextNode((this.payingSegmentSpecificSymbol == null) ? '' : this.payingSegmentSpecificSymbol);
			Dom.XmlNode payingSegmentAVNode = outerNode.addChildElement('payingSegmentAV', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			payingSegmentAVNode.addTextNode((this.payingSegmentAV == null) ? '' : this.payingSegmentAV);
			Dom.XmlNode payingSegmentRecipientNode = outerNode.addChildElement('payingSegmentRecipient', 'http://service.cmss.cz/loan/LoanDetailInfoService/v05/datatypes', '');
			payingSegmentRecipientNode.addTextNode((this.payingSegmentRecipient == null) ? '' : this.payingSegmentRecipient);
		}
	}
}