//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
	
public class CommonMessageService {
	private static final String s_ns0 = 'http://service.cmss.cz/common/CommonMessage/v01';
	public static DateTime parseDateTime(String nodeText){
			String iso8601 = nodeText;
			JSONParser parser = JSON.createParser( '{"t":"' + iso8601 + '"}');
			parser.nextToken();
			parser.nextValue();
			DateTime dt = parser.getDateTimeValue();
			//System.debug('dt: ' + dt);
			return dt;
		}
	public class Header {
		public String conversationIdName;
		public String conversationIdValue;
		public String correlationId;
		public String messageId;
		public String physicalSource;
		public String sourceSystem;
		public String targetSystem;
		public DateTime timestamp;
		public String userId;
		private transient String[] conversationIdName_type_info = new String[]{'conversationIdName',s_ns0,'string','0','1','false'};
		private transient String[] conversationIdValue_type_info = new String[]{'conversationIdValue',s_ns0,'string','0','1','false'};
		private transient String[] correlationId_type_info = new String[]{'correlationId',s_ns0,'string','0','1','false'};
		private transient String[] messageId_type_info = new String[]{'messageId',s_ns0,'string','1','1','false'};
		private transient String[] physicalSource_type_info = new String[]{'physicalSource',s_ns0,'string','0','1','false'};
		private transient String[] sourceSystem_type_info = new String[]{'sourceSystem',s_ns0,'string','1','1','false'};
		private transient String[] targetSystem_type_info = new String[]{'targetSystem',s_ns0,'string','0','1','false'};
		private transient String[] timestamp_type_info = new String[]{'timestamp',s_ns0,'dateTime','1','1','false'};
		private transient String[] userId_type_info = new String[]{'userId',s_ns0,'string','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'conversationIdName','conversationIdValue','correlationId','messageId','physicalSource','sourceSystem','targetSystem','timestamp','userId'};
		public Header(){
		}
		public Header(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode conversationIdNameNode = responseNode.getChildElement('conversationIdName', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.conversationIdName = (conversationIdNameNode == null) ? null : conversationIdNameNode.getText();
			nodesParsed.add(conversationIdNameNode);
			//System.debug(this.conversationIdName);			
			DOM.XmlNode conversationIdValueNode = responseNode.getChildElement('conversationIdValue', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.conversationIdValue = (conversationIdValueNode == null) ? null : conversationIdValueNode.getText();
			nodesParsed.add(conversationIdValueNode);
			//System.debug(this.conversationIdValue);			
			DOM.XmlNode correlationIdNode = responseNode.getChildElement('correlationId', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.correlationId = (correlationIdNode == null) ? null : correlationIdNode.getText();
			nodesParsed.add(correlationIdNode);
			//System.debug(this.correlationId);			
			DOM.XmlNode messageIdNode = responseNode.getChildElement('messageId', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.messageId = (messageIdNode == null) ? null : messageIdNode.getText();
			nodesParsed.add(messageIdNode);
			//System.debug(this.messageId);			
			DOM.XmlNode physicalSourceNode = responseNode.getChildElement('physicalSource', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.physicalSource = (physicalSourceNode == null) ? null : physicalSourceNode.getText();
			nodesParsed.add(physicalSourceNode);
			//System.debug(this.physicalSource);			
			DOM.XmlNode sourceSystemNode = responseNode.getChildElement('sourceSystem', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.sourceSystem = (sourceSystemNode == null) ? null : sourceSystemNode.getText();
			nodesParsed.add(sourceSystemNode);
			//System.debug(this.sourceSystem);			
			DOM.XmlNode targetSystemNode = responseNode.getChildElement('targetSystem', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.targetSystem = (targetSystemNode == null) ? null : targetSystemNode.getText();
			nodesParsed.add(targetSystemNode);
			//System.debug(this.targetSystem);			
			DOM.XmlNode timestampNode = responseNode.getChildElement('timestamp', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.timestamp = (timestampNode == null) ? null :  CommonMessageService.parseDateTime(timestampNode.getText());
			nodesParsed.add(timestampNode);
			//System.debug(this.timestamp);			
			DOM.XmlNode userIdNode = responseNode.getChildElement('userId', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.userId = (userIdNode == null) ? null : userIdNode.getText();
			nodesParsed.add(userIdNode);
			//System.debug(this.userId);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode conversationIdNameNode = outerNode.addChildElement('conversationIdName', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			conversationIdNameNode.addTextNode((this.conversationIdName == null) ? '' : this.conversationIdName);
			Dom.XmlNode conversationIdValueNode = outerNode.addChildElement('conversationIdValue', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			conversationIdValueNode.addTextNode((this.conversationIdValue == null) ? '' : this.conversationIdValue);
			Dom.XmlNode correlationIdNode = outerNode.addChildElement('correlationId', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			correlationIdNode.addTextNode((this.correlationId == null) ? '' : this.correlationId);
			Dom.XmlNode messageIdNode = outerNode.addChildElement('messageId', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			if(this.messageId != null){
				messageIdNode.addTextNode(this.messageId);
			}
			Dom.XmlNode physicalSourceNode = outerNode.addChildElement('physicalSource', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			physicalSourceNode.addTextNode((this.physicalSource == null) ? '' : this.physicalSource);
			Dom.XmlNode sourceSystemNode = outerNode.addChildElement('sourceSystem', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			if(this.sourceSystem != null){
				sourceSystemNode.addTextNode(this.sourceSystem);
			}
			Dom.XmlNode targetSystemNode = outerNode.addChildElement('targetSystem', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			targetSystemNode.addTextNode((this.targetSystem == null) ? '' : this.targetSystem);
			Dom.XmlNode timestampNode = outerNode.addChildElement('timestamp', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			if(this.timestamp != null){
				timestampNode.addTextNode(String.valueOf(this.timestamp));
			}
			Dom.XmlNode userIdNode = outerNode.addChildElement('userId', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			userIdNode.addTextNode((this.userId == null) ? '' : this.userId);
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:Header
	public class RequestHeader {
		public String conversationIdName;
		public String conversationIdValue;
		public String correlationId;
		public String messageId;
		public String physicalSource;
		public String sourceSystem;
		public String targetSystem;
		public DateTime timestamp;
		public String userId;
		private transient String[] conversationIdName_type_info = new String[]{'conversationIdName',s_ns0,'string','0','1','false'};
		private transient String[] conversationIdValue_type_info = new String[]{'conversationIdValue',s_ns0,'string','0','1','false'};
		private transient String[] correlationId_type_info = new String[]{'correlationId',s_ns0,'string','0','1','false'};
		private transient String[] messageId_type_info = new String[]{'messageId',s_ns0,'string','1','1','false'};
		private transient String[] physicalSource_type_info = new String[]{'physicalSource',s_ns0,'string','0','1','false'};
		private transient String[] sourceSystem_type_info = new String[]{'sourceSystem',s_ns0,'string','1','1','false'};
		private transient String[] targetSystem_type_info = new String[]{'targetSystem',s_ns0,'string','0','1','false'};
		private transient String[] timestamp_type_info = new String[]{'timestamp',s_ns0,'dateTime','1','1','false'};
		private transient String[] userId_type_info = new String[]{'userId',s_ns0,'string','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'conversationIdName','conversationIdValue','correlationId','messageId','physicalSource','sourceSystem','targetSystem','timestamp','userId'};
        public RequestHeader() {
            this.timestamp = Datetime.now();
            this.messageId = MockServicesUtil.generateUUID();
            this.sourceSystem = '20';
            this.targetSystem = 'ESB';
            this.physicalSource = Url.getSalesforceBaseUrl().toExternalForm();
            this.userId = UserInfo.getUserId();
        }
		public RequestHeader(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode conversationIdNameNode = responseNode.getChildElement('conversationIdName', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.conversationIdName = (conversationIdNameNode == null) ? null : conversationIdNameNode.getText();
			nodesParsed.add(conversationIdNameNode);
			//System.debug(this.conversationIdName);			
			DOM.XmlNode conversationIdValueNode = responseNode.getChildElement('conversationIdValue', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.conversationIdValue = (conversationIdValueNode == null) ? null : conversationIdValueNode.getText();
			nodesParsed.add(conversationIdValueNode);
			//System.debug(this.conversationIdValue);			
			DOM.XmlNode correlationIdNode = responseNode.getChildElement('correlationId', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.correlationId = (correlationIdNode == null) ? null : correlationIdNode.getText();
			nodesParsed.add(correlationIdNode);
			//System.debug(this.correlationId);			
			DOM.XmlNode messageIdNode = responseNode.getChildElement('messageId', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.messageId = (messageIdNode == null) ? null : messageIdNode.getText();
			nodesParsed.add(messageIdNode);
			//System.debug(this.messageId);			
			DOM.XmlNode physicalSourceNode = responseNode.getChildElement('physicalSource', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.physicalSource = (physicalSourceNode == null) ? null : physicalSourceNode.getText();
			nodesParsed.add(physicalSourceNode);
			//System.debug(this.physicalSource);			
			DOM.XmlNode sourceSystemNode = responseNode.getChildElement('sourceSystem', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.sourceSystem = (sourceSystemNode == null) ? null : sourceSystemNode.getText();
			nodesParsed.add(sourceSystemNode);
			//System.debug(this.sourceSystem);			
			DOM.XmlNode targetSystemNode = responseNode.getChildElement('targetSystem', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.targetSystem = (targetSystemNode == null) ? null : targetSystemNode.getText();
			nodesParsed.add(targetSystemNode);
			//System.debug(this.targetSystem);			
			DOM.XmlNode timestampNode = responseNode.getChildElement('timestamp', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.timestamp = (timestampNode == null) ? null :  CommonMessageService.parseDateTime(timestampNode.getText());
			nodesParsed.add(timestampNode);
			//System.debug(this.timestamp);			
			DOM.XmlNode userIdNode = responseNode.getChildElement('userId', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.userId = (userIdNode == null) ? null : userIdNode.getText();
			nodesParsed.add(userIdNode);
			//System.debug(this.userId);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode conversationIdNameNode = outerNode.addChildElement('conversationIdName', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			conversationIdNameNode.addTextNode((this.conversationIdName == null) ? '' : this.conversationIdName);
			Dom.XmlNode conversationIdValueNode = outerNode.addChildElement('conversationIdValue', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			conversationIdValueNode.addTextNode((this.conversationIdValue == null) ? '' : this.conversationIdValue);
			Dom.XmlNode correlationIdNode = outerNode.addChildElement('correlationId', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			correlationIdNode.addTextNode((this.correlationId == null) ? '' : this.correlationId);
			Dom.XmlNode messageIdNode = outerNode.addChildElement('messageId', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			if(this.messageId != null){
				messageIdNode.addTextNode(this.messageId);
			}
			Dom.XmlNode physicalSourceNode = outerNode.addChildElement('physicalSource', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			physicalSourceNode.addTextNode((this.physicalSource == null) ? '' : this.physicalSource);
			Dom.XmlNode sourceSystemNode = outerNode.addChildElement('sourceSystem', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			if(this.sourceSystem != null){
				sourceSystemNode.addTextNode(this.sourceSystem);
			}
			Dom.XmlNode targetSystemNode = outerNode.addChildElement('targetSystem', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			targetSystemNode.addTextNode((this.targetSystem == null) ? '' : this.targetSystem);
			Dom.XmlNode timestampNode = outerNode.addChildElement('timestamp', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			if(this.timestamp != null){
				timestampNode.addTextNode(String.valueOf(this.timestamp));
			}
			Dom.XmlNode userIdNode = outerNode.addChildElement('userId', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			userIdNode.addTextNode((this.userId == null) ? '' : this.userId);
		}
	}
	public class RequestMessage {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader',s_ns0,'RequestHeader','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader'};
		public RequestMessage(){
		}
		public RequestMessage(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode requestHeaderNode = responseNode.getChildElement('requestHeader', 'http://service.cmss.cz/common/CommonMessage/v01');
			if(requestHeaderNode == null){
				this.requestHeader = null;
			} else{
				CommonMessageService.RequestHeader requestHeaderObj = new CommonMessageService.RequestHeader(requestHeaderNode);
				nodesParsed.add(requestHeaderNode);
				this.requestHeader = requestHeaderObj;
			}
			//System.debug(this.requestHeader);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('requestHeader', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			if(requestHeaderObj != null){
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:Header
	public class ResponseHeader {
		public String conversationIdName;
		public String conversationIdValue;
		public String correlationId;
		public String messageId;
		public String physicalSource;
		public String sourceSystem;
		public String targetSystem;
		public DateTime timestamp;
		public String userId;
		private transient String[] conversationIdName_type_info = new String[]{'conversationIdName',s_ns0,'string','0','1','false'};
		private transient String[] conversationIdValue_type_info = new String[]{'conversationIdValue',s_ns0,'string','0','1','false'};
		private transient String[] correlationId_type_info = new String[]{'correlationId',s_ns0,'string','0','1','false'};
		private transient String[] messageId_type_info = new String[]{'messageId',s_ns0,'string','1','1','false'};
		private transient String[] physicalSource_type_info = new String[]{'physicalSource',s_ns0,'string','0','1','false'};
		private transient String[] sourceSystem_type_info = new String[]{'sourceSystem',s_ns0,'string','1','1','false'};
		private transient String[] targetSystem_type_info = new String[]{'targetSystem',s_ns0,'string','0','1','false'};
		private transient String[] timestamp_type_info = new String[]{'timestamp',s_ns0,'dateTime','1','1','false'};
		private transient String[] userId_type_info = new String[]{'userId',s_ns0,'string','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'conversationIdName','conversationIdValue','correlationId','messageId','physicalSource','sourceSystem','targetSystem','timestamp','userId'};
		public ResponseHeader(){
		}
		public ResponseHeader(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode conversationIdNameNode = responseNode.getChildElement('conversationIdName', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.conversationIdName = (conversationIdNameNode == null) ? null : conversationIdNameNode.getText();
			nodesParsed.add(conversationIdNameNode);
			//System.debug(this.conversationIdName);			
			DOM.XmlNode conversationIdValueNode = responseNode.getChildElement('conversationIdValue', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.conversationIdValue = (conversationIdValueNode == null) ? null : conversationIdValueNode.getText();
			nodesParsed.add(conversationIdValueNode);
			//System.debug(this.conversationIdValue);			
			DOM.XmlNode correlationIdNode = responseNode.getChildElement('correlationId', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.correlationId = (correlationIdNode == null) ? null : correlationIdNode.getText();
			nodesParsed.add(correlationIdNode);
			//System.debug(this.correlationId);			
			DOM.XmlNode messageIdNode = responseNode.getChildElement('messageId', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.messageId = (messageIdNode == null) ? null : messageIdNode.getText();
			nodesParsed.add(messageIdNode);
			//System.debug(this.messageId);			
			DOM.XmlNode physicalSourceNode = responseNode.getChildElement('physicalSource', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.physicalSource = (physicalSourceNode == null) ? null : physicalSourceNode.getText();
			nodesParsed.add(physicalSourceNode);
			//System.debug(this.physicalSource);			
			DOM.XmlNode sourceSystemNode = responseNode.getChildElement('sourceSystem', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.sourceSystem = (sourceSystemNode == null) ? null : sourceSystemNode.getText();
			nodesParsed.add(sourceSystemNode);
			//System.debug(this.sourceSystem);			
			DOM.XmlNode targetSystemNode = responseNode.getChildElement('targetSystem', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.targetSystem = (targetSystemNode == null) ? null : targetSystemNode.getText();
			nodesParsed.add(targetSystemNode);
			//System.debug(this.targetSystem);			
			DOM.XmlNode timestampNode = responseNode.getChildElement('timestamp', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.timestamp = (timestampNode == null) ? null :  CommonMessageService.parseDateTime(timestampNode.getText());
			nodesParsed.add(timestampNode);
			//System.debug(this.timestamp);			
			DOM.XmlNode userIdNode = responseNode.getChildElement('userId', 'http://service.cmss.cz/common/CommonMessage/v01');
			this.userId = (userIdNode == null) ? null : userIdNode.getText();
			nodesParsed.add(userIdNode);
			//System.debug(this.userId);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode conversationIdNameNode = outerNode.addChildElement('conversationIdName', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			conversationIdNameNode.addTextNode((this.conversationIdName == null) ? '' : this.conversationIdName);
			Dom.XmlNode conversationIdValueNode = outerNode.addChildElement('conversationIdValue', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			conversationIdValueNode.addTextNode((this.conversationIdValue == null) ? '' : this.conversationIdValue);
			Dom.XmlNode correlationIdNode = outerNode.addChildElement('correlationId', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			correlationIdNode.addTextNode((this.correlationId == null) ? '' : this.correlationId);
			Dom.XmlNode messageIdNode = outerNode.addChildElement('messageId', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			if(this.messageId != null){
				messageIdNode.addTextNode(this.messageId);
			}
			Dom.XmlNode physicalSourceNode = outerNode.addChildElement('physicalSource', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			physicalSourceNode.addTextNode((this.physicalSource == null) ? '' : this.physicalSource);
			Dom.XmlNode sourceSystemNode = outerNode.addChildElement('sourceSystem', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			if(this.sourceSystem != null){
				sourceSystemNode.addTextNode(this.sourceSystem);
			}
			Dom.XmlNode targetSystemNode = outerNode.addChildElement('targetSystem', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			targetSystemNode.addTextNode((this.targetSystem == null) ? '' : this.targetSystem);
			Dom.XmlNode timestampNode = outerNode.addChildElement('timestamp', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			if(this.timestamp != null){
				timestampNode.addTextNode(String.valueOf(this.timestamp));
			}
			Dom.XmlNode userIdNode = outerNode.addChildElement('userId', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			userIdNode.addTextNode((this.userId == null) ? '' : this.userId);
		}
	}
	public class ResponseMessage {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader'};
		public ResponseMessage(){
		}
		public ResponseMessage(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/common/CommonMessage/v01');
			if(responseHeaderNode == null){
				this.responseHeader = null;
			} else{
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			CommonMessageService.ResponseHeader responseHeaderObj = this.responseHeader;
			Dom.XmlNode responseHeaderNode = outerNode.addChildElement('responseHeader', 'http://service.cmss.cz/common/CommonMessage/v01', '');
			if(responseHeaderObj != null){
				responseHeaderObj.populateXmlNode(responseHeaderNode);
			}
		}
	}
}