//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
	
public class ConsentDataTypesService {
	private static final String s_ns0 = 'http://service.cmss.cz/person/ConsentService/v01/datatypes';
	public static DateTime parseDateTime(String nodeText){
			String iso8601 = nodeText;
			JSONParser parser = JSON.createParser( '{"t":"' + iso8601 + '"}');
			parser.nextToken();
			parser.nextValue();
			DateTime dt = parser.getDateTimeValue();
			//System.debug('dt: ' + dt);
			return dt;
		}
	public class DisableChannelConsentRequestBodyType {
		public String consentEntityId;
		public String consentChannelId;
		public String globalId;
		public String consentSourceId;
		public DateTime validFrom;
		public String agentCPU;
		private transient String[] consentEntityId_type_info = new String[]{'consentEntityId',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] consentChannelId_type_info = new String[]{'consentChannelId',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] globalId_type_info = new String[]{'globalId',s_ns0,'ClientGlobalIdType','1','1','false'};
		private transient String[] consentSourceId_type_info = new String[]{'consentSourceId',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] validFrom_type_info = new String[]{'validFrom',s_ns0,'CommonDateTimeType','0','1','false'};
		private transient String[] agentCPU_type_info = new String[]{'agentCPU',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'consentEntityId','consentChannelId','globalId','consentSourceId','validFrom','agentCPU'};
		public DisableChannelConsentRequestBodyType(){
		}
		public DisableChannelConsentRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode consentEntityIdNode = responseNode.getChildElement('consentEntityId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentEntityId = (consentEntityIdNode == null) ? null : consentEntityIdNode.getText();
			nodesParsed.add(consentEntityIdNode);
			//System.debug(this.consentEntityId);			
			DOM.XmlNode consentChannelIdNode = responseNode.getChildElement('consentChannelId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentChannelId = (consentChannelIdNode == null) ? null : consentChannelIdNode.getText();
			nodesParsed.add(consentChannelIdNode);
			//System.debug(this.consentChannelId);			
			DOM.XmlNode globalIdNode = responseNode.getChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.globalId = (globalIdNode == null) ? null : globalIdNode.getText();
			nodesParsed.add(globalIdNode);
			//System.debug(this.globalId);			
			DOM.XmlNode consentSourceIdNode = responseNode.getChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentSourceId = (consentSourceIdNode == null) ? null : consentSourceIdNode.getText();
			nodesParsed.add(consentSourceIdNode);
			//System.debug(this.consentSourceId);			
			DOM.XmlNode validFromNode = responseNode.getChildElement('validFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.validFrom = (validFromNode == null) ? null :  ConsentDataTypesService.parseDateTime(validFromNode.getText());
			nodesParsed.add(validFromNode);
			//System.debug(this.validFrom);			
			DOM.XmlNode agentCPUNode = responseNode.getChildElement('agentCPU', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.agentCPU = (agentCPUNode == null) ? null : agentCPUNode.getText();
			nodesParsed.add(agentCPUNode);
			//System.debug(this.agentCPU);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode consentEntityIdNode = outerNode.addChildElement('consentEntityId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.consentEntityId != null){
				consentEntityIdNode.addTextNode(this.consentEntityId);
			}
			Dom.XmlNode consentChannelIdNode = outerNode.addChildElement('consentChannelId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.consentChannelId != null){
				consentChannelIdNode.addTextNode(this.consentChannelId);
			}
			Dom.XmlNode globalIdNode = outerNode.addChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.globalId != null){
				globalIdNode.addTextNode(String.valueOf(this.globalId));
			}
			Dom.XmlNode consentSourceIdNode = outerNode.addChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.consentSourceId != null){
				consentSourceIdNode.addTextNode(this.consentSourceId);
			}
			Dom.XmlNode validFromNode = outerNode.addChildElement('validFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			validFromNode.addTextNode((this.validFrom == null) ? '' : String.valueOf(this.validFrom));
			Dom.XmlNode agentCPUNode = outerNode.addChildElement('agentCPU', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			agentCPUNode.addTextNode((this.agentCPU == null) ? '' : this.agentCPU);
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
	public class DisableChannelConsentRequestType {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader',s_ns0,'RequestHeader','1','1','false'};
		public ConsentDataTypesService.DisableChannelConsentRequestBodyType requestBody;
		private transient String[] requestBody_type_info = new String[]{'requestBody',s_ns0,'DisableChannelConsentRequestBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader','requestBody'};
		public DisableChannelConsentRequestType(){
		}
		public DisableChannelConsentRequestType(CommonMessageService.RequestHeader requestHeader,ConsentDataTypesService.DisableChannelConsentRequestBodyType requestBody){
			this.requestHeader = requestHeader;
			this.requestBody = requestBody;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			//System.assertEquals('disableChannelConsent', outerNode.getName());
			
			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('requestHeader', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			if(requestHeaderObj != null){
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}
			
			ConsentDataTypesService.DisableChannelConsentRequestBodyType requestBodyObj = this.requestBody;
			Dom.XmlNode requestBodyNode = outerNode.addChildElement('requestBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(requestBodyObj != null){
				requestBodyObj.populateXmlNode(requestBodyNode);
			}
		}
	}
	public class DisableChannelConsentResponseBodyType {
		public BasicTypesService.OperationSuccessType success;
		private transient String[] success_type_info = new String[]{'success',s_ns0,'OperationSuccessType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'success'};
		public DisableChannelConsentResponseBodyType(){
		}
		public DisableChannelConsentResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode successNode = responseNode.getChildElement('success', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(successNode == null){
				this.success = null;
			} else{
				BasicTypesService.OperationSuccessType successObj = new BasicTypesService.OperationSuccessType(successNode);
				nodesParsed.add(successNode);
				this.success = successObj;
			}
			//System.debug(this.success);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType successObj = this.success;
			Dom.XmlNode successNode = outerNode.addChildElement('success', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			if(successObj != null){
				successObj.populateXmlNode(successNode);
			}
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
	public class DisableChannelConsentResponseType {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public ConsentDataTypesService.DisableChannelConsentResponseBodyType responseBody;
		private transient String[] responseBody_type_info = new String[]{'responseBody',s_ns0,'DisableChannelConsentResponseBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader','responseBody'};
		public DisableChannelConsentResponseType(){
		}
		public DisableChannelConsentResponseType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('disableChannelConsentResponse', responseNode.getName());
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseHeaderNode == null){
				this.responseHeader = null;
			} else{
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			
			DOM.XmlNode responseBodyNode = responseNode.getChildElement('responseBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseBodyNode == null){
				this.responseBody = null;
			} else{
				ConsentDataTypesService.DisableChannelConsentResponseBodyType responseBodyObj = new ConsentDataTypesService.DisableChannelConsentResponseBodyType(responseBodyNode);
				nodesParsed.add(responseBodyNode);
				this.responseBody = responseBodyObj;
			}
			//System.debug(this.responseBody);			
		}
	}
	public class DisableGeneralConsentRequestBodyType {
		public String consentCrmGuid;
		public DateTime validFrom;
		public String consentSourceId;
		public DateTime validTo;
		public String agentCPU;
		public String substitutePersonId;
		public String substituteRoleId;
		public String consentProvidedById;
		private transient String[] consentCrmGuid_type_info = new String[]{'consentCrmGuid',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] validFrom_type_info = new String[]{'validFrom',s_ns0,'CommonDateTimeType','0','1','false'};
		private transient String[] consentSourceId_type_info = new String[]{'consentSourceId',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] validTo_type_info = new String[]{'validTo',s_ns0,'CommonDateTimeType','0','1','false'};
		private transient String[] agentCPU_type_info = new String[]{'agentCPU',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] substitutePersonId_type_info = new String[]{'substitutePersonId',s_ns0,'ClientGlobalIdType','0','1','false'};
		private transient String[] substituteRoleId_type_info = new String[]{'substituteRoleId',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] consentProvidedById_type_info = new String[]{'consentProvidedById',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'consentCrmGuid','validFrom','consentSourceId','validTo','agentCPU','substitutePersonId','substituteRoleId','consentProvidedById'};
		public DisableGeneralConsentRequestBodyType(){
		}
		public DisableGeneralConsentRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode consentCrmGuidNode = responseNode.getChildElement('consentCrmGuid', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentCrmGuid = (consentCrmGuidNode == null) ? null : consentCrmGuidNode.getText();
			nodesParsed.add(consentCrmGuidNode);
			//System.debug(this.consentCrmGuid);			
			DOM.XmlNode validFromNode = responseNode.getChildElement('validFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.validFrom = (validFromNode == null) ? null :  ConsentDataTypesService.parseDateTime(validFromNode.getText());
			nodesParsed.add(validFromNode);
			//System.debug(this.validFrom);			
			DOM.XmlNode consentSourceIdNode = responseNode.getChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentSourceId = (consentSourceIdNode == null) ? null : consentSourceIdNode.getText();
			nodesParsed.add(consentSourceIdNode);
			//System.debug(this.consentSourceId);			
			DOM.XmlNode validToNode = responseNode.getChildElement('validTo', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.validTo = (validToNode == null) ? null :  ConsentDataTypesService.parseDateTime(validToNode.getText());
			nodesParsed.add(validToNode);
			//System.debug(this.validTo);			
			DOM.XmlNode agentCPUNode = responseNode.getChildElement('agentCPU', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.agentCPU = (agentCPUNode == null) ? null : agentCPUNode.getText();
			nodesParsed.add(agentCPUNode);
			//System.debug(this.agentCPU);			
			DOM.XmlNode substitutePersonIdNode = responseNode.getChildElement('substitutePersonId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.substitutePersonId = (substitutePersonIdNode == null) ? null : substitutePersonIdNode.getText();
			nodesParsed.add(substitutePersonIdNode);
			//System.debug(this.substitutePersonId);			
			DOM.XmlNode substituteRoleIdNode = responseNode.getChildElement('substituteRoleId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.substituteRoleId = (substituteRoleIdNode == null) ? null : substituteRoleIdNode.getText();
			nodesParsed.add(substituteRoleIdNode);
			//System.debug(this.substituteRoleId);			
			DOM.XmlNode consentProvidedByIdNode = responseNode.getChildElement('consentProvidedById', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentProvidedById = (consentProvidedByIdNode == null) ? null : consentProvidedByIdNode.getText();
			nodesParsed.add(consentProvidedByIdNode);
			//System.debug(this.consentProvidedById);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode consentCrmGuidNode = outerNode.addChildElement('consentCrmGuid', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			if(this.consentCrmGuid != null){
				consentCrmGuidNode.addTextNode(this.consentCrmGuid);
			}
			Dom.XmlNode validFromNode = outerNode.addChildElement('validFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			validFromNode.addTextNode((this.validFrom == null) ? '' : String.valueOf(this.validFrom));
			Dom.XmlNode consentSourceIdNode = outerNode.addChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentSourceIdNode.addTextNode((this.consentSourceId == null) ? '' : String.valueOf(this.consentSourceId));
			Dom.XmlNode validToNode = outerNode.addChildElement('validTo', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			validToNode.addTextNode((this.validTo == null) ? '' : String.valueOf(this.validTo));
			Dom.XmlNode agentCPUNode = outerNode.addChildElement('agentCPU', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			agentCPUNode.addTextNode((this.agentCPU == null) ? '' : this.agentCPU);
			Dom.XmlNode substitutePersonIdNode = outerNode.addChildElement('substitutePersonId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			substitutePersonIdNode.addTextNode((this.substitutePersonId == null) ? '' : String.valueOf(this.substitutePersonId));
			Dom.XmlNode substituteRoleIdNode = outerNode.addChildElement('substituteRoleId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			substituteRoleIdNode.addTextNode((this.substituteRoleId == null) ? '' : String.valueOf(this.substituteRoleId));
			Dom.XmlNode consentProvidedByIdNode = outerNode.addChildElement('consentProvidedById', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentProvidedByIdNode.addTextNode((this.consentProvidedById == null) ? '' : String.valueOf(this.consentProvidedById));
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
	public class DisableGeneralConsentRequestType {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader',s_ns0,'RequestHeader','1','1','false'};
		public ConsentDataTypesService.DisableGeneralConsentRequestBodyType requestBody;
		private transient String[] requestBody_type_info = new String[]{'requestBody',s_ns0,'DisableGeneralConsentRequestBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader','requestBody'};
		public DisableGeneralConsentRequestType(){
		}
		public DisableGeneralConsentRequestType(CommonMessageService.RequestHeader requestHeader,ConsentDataTypesService.DisableGeneralConsentRequestBodyType requestBody){
			this.requestHeader = requestHeader;
			this.requestBody = requestBody;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			//System.assertEquals('disableGeneralConsent', outerNode.getName());
			
			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('requestHeader', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			if(requestHeaderObj != null){
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}
			
			ConsentDataTypesService.DisableGeneralConsentRequestBodyType requestBodyObj = this.requestBody;
			Dom.XmlNode requestBodyNode = outerNode.addChildElement('requestBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(requestBodyObj != null){
				requestBodyObj.populateXmlNode(requestBodyNode);
			}
		}
	}
	public class DisableGeneralConsentResponseBodyType {
		public BasicTypesService.OperationSuccessType success;
		private transient String[] success_type_info = new String[]{'success',s_ns0,'OperationSuccessType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'success'};
		public DisableGeneralConsentResponseBodyType(){
		}
		public DisableGeneralConsentResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode successNode = responseNode.getChildElement('success', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(successNode == null){
				this.success = null;
			} else{
				BasicTypesService.OperationSuccessType successObj = new BasicTypesService.OperationSuccessType(successNode);
				nodesParsed.add(successNode);
				this.success = successObj;
			}
			//System.debug(this.success);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType successObj = this.success;
			Dom.XmlNode successNode = outerNode.addChildElement('success', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			if(successObj != null){
				successObj.populateXmlNode(successNode);
			}
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
	public class DisableGeneralConsentResponseType {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public ConsentDataTypesService.DisableGeneralConsentResponseBodyType responseBody;
		private transient String[] responseBody_type_info = new String[]{'responseBody',s_ns0,'DisableGeneralConsentResponseBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader','responseBody'};
		public DisableGeneralConsentResponseType(){
		}
		public DisableGeneralConsentResponseType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('disableGeneralConsentResponse', responseNode.getName());
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseHeaderNode == null){
				this.responseHeader = null;
			} else{
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			
			DOM.XmlNode responseBodyNode = responseNode.getChildElement('responseBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseBodyNode == null){
				this.responseBody = null;
			} else{
				ConsentDataTypesService.DisableGeneralConsentResponseBodyType responseBodyObj = new ConsentDataTypesService.DisableGeneralConsentResponseBodyType(responseBodyNode);
				nodesParsed.add(responseBodyNode);
				this.responseBody = responseBodyObj;
			}
			//System.debug(this.responseBody);			
		}
	}
	public class DisableInternalConsentForPersonRequestBodyType {
		public String globalId;
		public String emailAddress;
		public String consentKindId;
		public String consentSourceId;
		public String consentProvidedById;
		private transient String[] globalId_type_info = new String[]{'globalId',s_ns0,'ClientGlobalIdType','0','1','false'};
		private transient String[] emailAddress_type_info = new String[]{'emailAddress',s_ns0,'EmailType','0','1','false'};
		private transient String[] consentKindId_type_info = new String[]{'consentKindId',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] consentSourceId_type_info = new String[]{'consentSourceId',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] consentProvidedById_type_info = new String[]{'consentProvidedById',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'globalId','emailAddress','consentKindId','consentSourceId','consentProvidedById'};
		public DisableInternalConsentForPersonRequestBodyType(){
		}
		public DisableInternalConsentForPersonRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode globalIdNode = responseNode.getChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.globalId = (globalIdNode == null) ? null : globalIdNode.getText();
			nodesParsed.add(globalIdNode);
			//System.debug(this.globalId);			
			DOM.XmlNode emailAddressNode = responseNode.getChildElement('emailAddress', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.emailAddress = (emailAddressNode == null) ? null : emailAddressNode.getText();
			nodesParsed.add(emailAddressNode);
			//System.debug(this.emailAddress);			
			DOM.XmlNode consentKindIdNode = responseNode.getChildElement('consentKindId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentKindId = (consentKindIdNode == null) ? null : consentKindIdNode.getText();
			nodesParsed.add(consentKindIdNode);
			//System.debug(this.consentKindId);			
			DOM.XmlNode consentSourceIdNode = responseNode.getChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentSourceId = (consentSourceIdNode == null) ? null : consentSourceIdNode.getText();
			nodesParsed.add(consentSourceIdNode);
			//System.debug(this.consentSourceId);			
			DOM.XmlNode consentProvidedByIdNode = responseNode.getChildElement('consentProvidedById', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentProvidedById = (consentProvidedByIdNode == null) ? null : consentProvidedByIdNode.getText();
			nodesParsed.add(consentProvidedByIdNode);
			//System.debug(this.consentProvidedById);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode globalIdNode = outerNode.addChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			globalIdNode.addTextNode((this.globalId == null) ? '' : String.valueOf(this.globalId));
			Dom.XmlNode emailAddressNode = outerNode.addChildElement('emailAddress', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			emailAddressNode.addTextNode((this.emailAddress == null) ? '' : this.emailAddress);
			Dom.XmlNode consentKindIdNode = outerNode.addChildElement('consentKindId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			if(this.consentKindId != null){
				consentKindIdNode.addTextNode(String.valueOf(this.consentKindId));
			}
			Dom.XmlNode consentSourceIdNode = outerNode.addChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			if(this.consentSourceId != null){
				consentSourceIdNode.addTextNode(String.valueOf(this.consentSourceId));
			}
			Dom.XmlNode consentProvidedByIdNode = outerNode.addChildElement('consentProvidedById', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentProvidedByIdNode.addTextNode((this.consentProvidedById == null) ? '' : String.valueOf(this.consentProvidedById));
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
	public class DisableInternalConsentForPersonRequestType {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader',s_ns0,'RequestHeader','1','1','false'};
		public ConsentDataTypesService.DisableInternalConsentForPersonRequestBodyType requestBody;
		private transient String[] requestBody_type_info = new String[]{'requestBody',s_ns0,'DisableInternalConsentForPersonRequestBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader','requestBody'};
		public DisableInternalConsentForPersonRequestType(){
		}
		public DisableInternalConsentForPersonRequestType(CommonMessageService.RequestHeader requestHeader,ConsentDataTypesService.DisableInternalConsentForPersonRequestBodyType requestBody){
			this.requestHeader = requestHeader;
			this.requestBody = requestBody;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			//System.assertEquals('disableInternalConsentForPerson', outerNode.getName());
			
			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('requestHeader', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			if(requestHeaderObj != null){
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}
			
			ConsentDataTypesService.DisableInternalConsentForPersonRequestBodyType requestBodyObj = this.requestBody;
			Dom.XmlNode requestBodyNode = outerNode.addChildElement('requestBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(requestBodyObj != null){
				requestBodyObj.populateXmlNode(requestBodyNode);
			}
		}
	}
	public class DisableInternalConsentForPersonResponseBodyType {
		public BasicTypesService.OperationSuccessType success;
		private transient String[] success_type_info = new String[]{'success',s_ns0,'OperationSuccessType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'success'};
		public DisableInternalConsentForPersonResponseBodyType(){
		}
		public DisableInternalConsentForPersonResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode successNode = responseNode.getChildElement('success', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(successNode == null){
				this.success = null;
			} else{
				BasicTypesService.OperationSuccessType successObj = new BasicTypesService.OperationSuccessType(successNode);
				nodesParsed.add(successNode);
				this.success = successObj;
			}
			//System.debug(this.success);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType successObj = this.success;
			Dom.XmlNode successNode = outerNode.addChildElement('success', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			if(successObj != null){
				successObj.populateXmlNode(successNode);
			}
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
	public class DisableInternalConsentForPersonResponseType {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public ConsentDataTypesService.DisableInternalConsentForPersonResponseBodyType responseBody;
		private transient String[] responseBody_type_info = new String[]{'responseBody',s_ns0,'DisableInternalConsentForPersonResponseBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader','responseBody'};
		public DisableInternalConsentForPersonResponseType(){
		}
		public DisableInternalConsentForPersonResponseType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('disableInternalConsentForPersonResponse', responseNode.getName());
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseHeaderNode == null){
				this.responseHeader = null;
			} else{
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			
			DOM.XmlNode responseBodyNode = responseNode.getChildElement('responseBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseBodyNode == null){
				this.responseBody = null;
			} else{
				ConsentDataTypesService.DisableInternalConsentForPersonResponseBodyType responseBodyObj = new ConsentDataTypesService.DisableInternalConsentForPersonResponseBodyType(responseBodyNode);
				nodesParsed.add(responseBodyNode);
				this.responseBody = responseBodyObj;
			}
			//System.debug(this.responseBody);			
		}
	}
	public class DisableInternalConsentRequestBodyType {
		public String consentCrmGuid;
		public String consentSourceId;
		public String consentProvidedById;
		private transient String[] consentCrmGuid_type_info = new String[]{'consentCrmGuid',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] consentSourceId_type_info = new String[]{'consentSourceId',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] consentProvidedById_type_info = new String[]{'consentProvidedById',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'consentCrmGuid','consentSourceId','consentProvidedById'};
		public DisableInternalConsentRequestBodyType(){
		}
		public DisableInternalConsentRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode consentCrmGuidNode = responseNode.getChildElement('consentCrmGuid', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentCrmGuid = (consentCrmGuidNode == null) ? null : consentCrmGuidNode.getText();
			nodesParsed.add(consentCrmGuidNode);
			//System.debug(this.consentCrmGuid);			
			DOM.XmlNode consentSourceIdNode = responseNode.getChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentSourceId = (consentSourceIdNode == null) ? null : consentSourceIdNode.getText();
			nodesParsed.add(consentSourceIdNode);
			//System.debug(this.consentSourceId);			
			DOM.XmlNode consentProvidedByIdNode = responseNode.getChildElement('consentProvidedById', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentProvidedById = (consentProvidedByIdNode == null) ? null : consentProvidedByIdNode.getText();
			nodesParsed.add(consentProvidedByIdNode);
			//System.debug(this.consentProvidedById);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode consentCrmGuidNode = outerNode.addChildElement('consentCrmGuid', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.consentCrmGuid != null){
				consentCrmGuidNode.addTextNode(this.consentCrmGuid);
			}
			Dom.XmlNode consentSourceIdNode = outerNode.addChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.consentSourceId != null){
				consentSourceIdNode.addTextNode(String.valueOf(this.consentSourceId));
			}
			Dom.XmlNode consentProvidedByIdNode = outerNode.addChildElement('consentProvidedById', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			consentProvidedByIdNode.addTextNode((this.consentProvidedById == null) ? '' : String.valueOf(this.consentProvidedById));
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
	public class DisableInternalConsentRequestType {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader',s_ns0,'RequestHeader','1','1','false'};
		public ConsentDataTypesService.DisableInternalConsentRequestBodyType requestBody;
		private transient String[] requestBody_type_info = new String[]{'requestBody',s_ns0,'DisableInternalConsentRequestBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader','requestBody'};
		public DisableInternalConsentRequestType(){
		}
		public DisableInternalConsentRequestType(CommonMessageService.RequestHeader requestHeader,ConsentDataTypesService.DisableInternalConsentRequestBodyType requestBody){
			this.requestHeader = requestHeader;
			this.requestBody = requestBody;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			//System.assertEquals('disableInternalConsent', outerNode.getName());
			
			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('requestHeader', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			if(requestHeaderObj != null){
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}
			
			ConsentDataTypesService.DisableInternalConsentRequestBodyType requestBodyObj = this.requestBody;
			Dom.XmlNode requestBodyNode = outerNode.addChildElement('requestBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(requestBodyObj != null){
				requestBodyObj.populateXmlNode(requestBodyNode);
			}
		}
	}
	public class DisableInternalConsentResponseBodyType {
		public BasicTypesService.OperationSuccessType success;
		private transient String[] success_type_info = new String[]{'success',s_ns0,'OperationSuccessType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'success'};
		public DisableInternalConsentResponseBodyType(){
		}
		public DisableInternalConsentResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode successNode = responseNode.getChildElement('success', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(successNode == null){
				this.success = null;
			} else{
				BasicTypesService.OperationSuccessType successObj = new BasicTypesService.OperationSuccessType(successNode);
				nodesParsed.add(successNode);
				this.success = successObj;
			}
			//System.debug(this.success);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			BasicTypesService.OperationSuccessType successObj = this.success;
			Dom.XmlNode successNode = outerNode.addChildElement('success', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			if(successObj != null){
				successObj.populateXmlNode(successNode);
			}
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
	public class DisableInternalConsentResponseType {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public ConsentDataTypesService.DisableInternalConsentResponseBodyType responseBody;
		private transient String[] responseBody_type_info = new String[]{'responseBody',s_ns0,'DisableInternalConsentResponseBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader','responseBody'};
		public DisableInternalConsentResponseType(){
		}
		public DisableInternalConsentResponseType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('disableInternalConsentResponse', responseNode.getName());
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseHeaderNode == null){
				this.responseHeader = null;
			} else{
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			
			DOM.XmlNode responseBodyNode = responseNode.getChildElement('responseBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseBodyNode == null){
				this.responseBody = null;
			} else{
				ConsentDataTypesService.DisableInternalConsentResponseBodyType responseBodyObj = new ConsentDataTypesService.DisableInternalConsentResponseBodyType(responseBodyNode);
				nodesParsed.add(responseBodyNode);
				this.responseBody = responseBodyObj;
			}
			//System.debug(this.responseBody);			
		}
	}
	public class EnableChannelConsentRequestBodyType {
		public String consentEntityId;
		public String consentChannelId;
		public String globalId;
		public String consentSourceId;
		public DateTime validFrom;
		public String agentCPU;
		private transient String[] consentEntityId_type_info = new String[]{'consentEntityId',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] consentChannelId_type_info = new String[]{'consentChannelId',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] globalId_type_info = new String[]{'globalId',s_ns0,'ClientGlobalIdType','1','1','false'};
		private transient String[] consentSourceId_type_info = new String[]{'consentSourceId',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] validFrom_type_info = new String[]{'validFrom',s_ns0,'CommonDateTimeType','0','1','false'};
		private transient String[] agentCPU_type_info = new String[]{'agentCPU',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'consentEntityId','consentChannelId','globalId','consentSourceId','validFrom','agentCPU'};
		public EnableChannelConsentRequestBodyType(){
		}
		public EnableChannelConsentRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode consentEntityIdNode = responseNode.getChildElement('consentEntityId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentEntityId = (consentEntityIdNode == null) ? null : consentEntityIdNode.getText();
			nodesParsed.add(consentEntityIdNode);
			//System.debug(this.consentEntityId);			
			DOM.XmlNode consentChannelIdNode = responseNode.getChildElement('consentChannelId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentChannelId = (consentChannelIdNode == null) ? null : consentChannelIdNode.getText();
			nodesParsed.add(consentChannelIdNode);
			//System.debug(this.consentChannelId);			
			DOM.XmlNode globalIdNode = responseNode.getChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.globalId = (globalIdNode == null) ? null : globalIdNode.getText();
			nodesParsed.add(globalIdNode);
			//System.debug(this.globalId);			
			DOM.XmlNode consentSourceIdNode = responseNode.getChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentSourceId = (consentSourceIdNode == null) ? null : consentSourceIdNode.getText();
			nodesParsed.add(consentSourceIdNode);
			//System.debug(this.consentSourceId);			
			DOM.XmlNode validFromNode = responseNode.getChildElement('validFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.validFrom = (validFromNode == null) ? null :  ConsentDataTypesService.parseDateTime(validFromNode.getText());
			nodesParsed.add(validFromNode);
			//System.debug(this.validFrom);			
			DOM.XmlNode agentCPUNode = responseNode.getChildElement('agentCPU', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.agentCPU = (agentCPUNode == null) ? null : agentCPUNode.getText();
			nodesParsed.add(agentCPUNode);
			//System.debug(this.agentCPU);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode consentEntityIdNode = outerNode.addChildElement('consentEntityId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.consentEntityId != null){
				consentEntityIdNode.addTextNode(String.valueOf(this.consentEntityId));
			}
			Dom.XmlNode consentChannelIdNode = outerNode.addChildElement('consentChannelId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.consentChannelId != null){
				consentChannelIdNode.addTextNode(String.valueOf(this.consentChannelId));
			}
			Dom.XmlNode globalIdNode = outerNode.addChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.globalId != null){
				globalIdNode.addTextNode(String.valueOf(this.globalId));
			}
			Dom.XmlNode consentSourceIdNode = outerNode.addChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			consentSourceIdNode.addTextNode((this.consentSourceId == null) ? '' : String.valueOf(this.consentSourceId));
			Dom.XmlNode validFromNode = outerNode.addChildElement('validFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			validFromNode.addTextNode((this.validFrom == null) ? '' : String.valueOf(this.validFrom));
			Dom.XmlNode agentCPUNode = outerNode.addChildElement('agentCPU', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			agentCPUNode.addTextNode((this.agentCPU == null) ? '' : this.agentCPU);
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
	public class EnableChannelConsentRequestType {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader',s_ns0,'RequestHeader','1','1','false'};
		public ConsentDataTypesService.EnableChannelConsentRequestBodyType requestBody;
		private transient String[] requestBody_type_info = new String[]{'requestBody',s_ns0,'EnableChannelConsentRequestBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader','requestBody'};
		public EnableChannelConsentRequestType(){
		}
		public EnableChannelConsentRequestType(CommonMessageService.RequestHeader requestHeader,ConsentDataTypesService.EnableChannelConsentRequestBodyType requestBody){
			this.requestHeader = requestHeader;
			this.requestBody = requestBody;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			//System.assertEquals('enableChannelConsent', outerNode.getName());
			
			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('requestHeader', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			if(requestHeaderObj != null){
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}
			
			ConsentDataTypesService.EnableChannelConsentRequestBodyType requestBodyObj = this.requestBody;
			Dom.XmlNode requestBodyNode = outerNode.addChildElement('requestBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(requestBodyObj != null){
				requestBodyObj.populateXmlNode(requestBodyNode);
			}
		}
	}
	public class EnableChannelConsentResponseBodyType {
		public String consentGuid;
		private transient String[] consentGuid_type_info = new String[]{'consentGuid',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'consentGuid'};
		public EnableChannelConsentResponseBodyType(){
		}
		public EnableChannelConsentResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode consentGuidNode = responseNode.getChildElement('consentGuid', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentGuid = (consentGuidNode == null) ? null : consentGuidNode.getText();
			nodesParsed.add(consentGuidNode);
			//System.debug(this.consentGuid);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode consentGuidNode = outerNode.addChildElement('consentGuid', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentGuidNode.addTextNode((this.consentGuid == null) ? '' : this.consentGuid);
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
	public class EnableChannelConsentResponseType {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public ConsentDataTypesService.EnableChannelConsentResponseBodyType responseBody;
		private transient String[] responseBody_type_info = new String[]{'responseBody',s_ns0,'EnableChannelConsentResponseBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader','responseBody'};
		public EnableChannelConsentResponseType(){
		}
		public EnableChannelConsentResponseType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('enableChannelConsentResponse', responseNode.getName());
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseHeaderNode == null){
				this.responseHeader = null;
			} else{
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			
			DOM.XmlNode responseBodyNode = responseNode.getChildElement('responseBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseBodyNode == null){
				this.responseBody = null;
			} else{
				ConsentDataTypesService.EnableChannelConsentResponseBodyType responseBodyObj = new ConsentDataTypesService.EnableChannelConsentResponseBodyType(responseBodyNode);
				nodesParsed.add(responseBodyNode);
				this.responseBody = responseBodyObj;
			}
			//System.debug(this.responseBody);			
		}
	}
	public class EnableGeneralConsentRequestBodyType {
		public String consentEntityId;
		public String consentVersionId;
		public String globalId;
		public String consentSourceId;
		public DateTime validFrom;
		public DateTime validTo;
		public String agentCPU;
		public String substitutePersonId;
		public String substituteRoleId;
		private transient String[] consentEntityId_type_info = new String[]{'consentEntityId',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] consentVersionId_type_info = new String[]{'consentVersionId',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] globalId_type_info = new String[]{'globalId',s_ns0,'ClientGlobalIdType','1','1','false'};
		private transient String[] consentSourceId_type_info = new String[]{'consentSourceId',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] validFrom_type_info = new String[]{'validFrom',s_ns0,'CommonDateTimeType','0','1','false'};
		private transient String[] validTo_type_info = new String[]{'validTo',s_ns0,'CommonDateTimeType','0','1','false'};
		private transient String[] agentCPU_type_info = new String[]{'agentCPU',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] substitutePersonId_type_info = new String[]{'substitutePersonId',s_ns0,'ClientGlobalIdType','0','1','false'};
		private transient String[] substituteRoleId_type_info = new String[]{'substituteRoleId',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'consentEntityId','consentVersionId','globalId','consentSourceId','validFrom','validTo','agentCPU','substitutePersonId','substituteRoleId'};
		public EnableGeneralConsentRequestBodyType(){
		}
		public EnableGeneralConsentRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode consentEntityIdNode = responseNode.getChildElement('consentEntityId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentEntityId = (consentEntityIdNode == null) ? null : consentEntityIdNode.getText();
			nodesParsed.add(consentEntityIdNode);
			//System.debug(this.consentEntityId);			
			DOM.XmlNode consentVersionIdNode = responseNode.getChildElement('consentVersionId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentVersionId = (consentVersionIdNode == null) ? null : consentVersionIdNode.getText();
			nodesParsed.add(consentVersionIdNode);
			//System.debug(this.consentVersionId);			
			DOM.XmlNode globalIdNode = responseNode.getChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.globalId = (globalIdNode == null) ? null : globalIdNode.getText();
			nodesParsed.add(globalIdNode);
			//System.debug(this.globalId);			
			DOM.XmlNode consentSourceIdNode = responseNode.getChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentSourceId = (consentSourceIdNode == null) ? null : consentSourceIdNode.getText();
			nodesParsed.add(consentSourceIdNode);
			//System.debug(this.consentSourceId);			
			DOM.XmlNode validFromNode = responseNode.getChildElement('validFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.validFrom = (validFromNode == null) ? null : ConsentDataTypesService.parseDateTime(validFromNode.getText());
			nodesParsed.add(validFromNode);
			//System.debug(this.validFrom);			
			DOM.XmlNode validToNode = responseNode.getChildElement('validTo', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.validTo = (validToNode == null) ? null : ConsentDataTypesService.parseDateTime(validToNode.getText());
			nodesParsed.add(validToNode);
			//System.debug(this.validTo);			
			DOM.XmlNode agentCPUNode = responseNode.getChildElement('agentCPU', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.agentCPU = (agentCPUNode == null) ? null : agentCPUNode.getText();
			nodesParsed.add(agentCPUNode);
			//System.debug(this.agentCPU);			
			DOM.XmlNode substitutePersonIdNode = responseNode.getChildElement('substitutePersonId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.substitutePersonId = (substitutePersonIdNode == null) ? null : substitutePersonIdNode.getText();
			nodesParsed.add(substitutePersonIdNode);
			//System.debug(this.substitutePersonId);			
			DOM.XmlNode substituteRoleIdNode = responseNode.getChildElement('substituteRoleId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.substituteRoleId = (substituteRoleIdNode == null) ? null : substituteRoleIdNode.getText();
			nodesParsed.add(substituteRoleIdNode);
			//System.debug(this.substituteRoleId);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode consentEntityIdNode = outerNode.addChildElement('consentEntityId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.consentEntityId != null){
				consentEntityIdNode.addTextNode(String.valueOf(this.consentEntityId));
			}
			Dom.XmlNode consentVersionIdNode = outerNode.addChildElement('consentVersionId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.consentVersionId != null){
				consentVersionIdNode.addTextNode(String.valueOf(this.consentVersionId));
			}
			Dom.XmlNode globalIdNode = outerNode.addChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.globalId != null){
				globalIdNode.addTextNode(String.valueOf(this.globalId));
			}
			Dom.XmlNode consentSourceIdNode = outerNode.addChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			consentSourceIdNode.addTextNode((this.consentSourceId == null) ? '' : String.valueOf(this.consentSourceId));
			Dom.XmlNode validFromNode = outerNode.addChildElement('validFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			validFromNode.addTextNode((this.validFrom == null) ? '' : String.valueOf(this.validFrom));
			Dom.XmlNode validToNode = outerNode.addChildElement('validTo', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			validToNode.addTextNode((this.validTo == null) ? '' : String.valueOf(this.validTo));
			Dom.XmlNode agentCPUNode = outerNode.addChildElement('agentCPU', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			agentCPUNode.addTextNode((this.agentCPU == null) ? '' : String.valueOf(this.agentCPU));
			Dom.XmlNode substitutePersonIdNode = outerNode.addChildElement('substitutePersonId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			substitutePersonIdNode.addTextNode((this.substitutePersonId == null) ? '' : String.valueOf(this.substitutePersonId));
			Dom.XmlNode substituteRoleIdNode = outerNode.addChildElement('substituteRoleId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			substituteRoleIdNode.addTextNode((this.substituteRoleId == null) ? '' : String.valueOf(this.substituteRoleId));
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
	public class EnableGeneralConsentRequestType {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader',s_ns0,'RequestHeader','1','1','false'};
		public ConsentDataTypesService.EnableGeneralConsentRequestBodyType requestBody;
		private transient String[] requestBody_type_info = new String[]{'requestBody',s_ns0,'EnableGeneralConsentRequestBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader','requestBody'};
		public EnableGeneralConsentRequestType(){
		}
		public EnableGeneralConsentRequestType(CommonMessageService.RequestHeader requestHeader,ConsentDataTypesService.EnableGeneralConsentRequestBodyType requestBody){
			this.requestHeader = requestHeader;
			this.requestBody = requestBody;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			//System.assertEquals('enableGeneralConsent', outerNode.getName());
			
			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('requestHeader', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			if(requestHeaderObj != null){
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}
            
			ConsentDataTypesService.EnableGeneralConsentRequestBodyType requestBodyObj = this.requestBody;
			Dom.XmlNode requestBodyNode = outerNode.addChildElement('requestBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(requestBodyObj != null){
				requestBodyObj.populateXmlNode(requestBodyNode);
			}
		}
	}
	public class EnableGeneralConsentResponseBodyType {
		public String consentGuid;
		private transient String[] consentGuid_type_info = new String[]{'consentGuid',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'consentGuid'};
		public EnableGeneralConsentResponseBodyType(){
		}
		public EnableGeneralConsentResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode consentGuidNode = responseNode.getChildElement('consentGuid', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentGuid = (consentGuidNode == null) ? null : consentGuidNode.getText();
			nodesParsed.add(consentGuidNode);
			//System.debug(this.consentGuid);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode consentGuidNode = outerNode.addChildElement('consentGuid', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentGuidNode.addTextNode((this.consentGuid == null) ? '' : this.consentGuid);
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
	public class EnableGeneralConsentResponseType {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public ConsentDataTypesService.EnableGeneralConsentResponseBodyType responseBody;
		private transient String[] responseBody_type_info = new String[]{'responseBody',s_ns0,'EnableGeneralConsentResponseBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader','responseBody'};
		public EnableGeneralConsentResponseType(){
		}
		public EnableGeneralConsentResponseType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('enableGeneralConsentResponse', responseNode.getName());
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseHeaderNode == null){
				this.responseHeader = null;
			} else{
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			
			DOM.XmlNode responseBodyNode = responseNode.getChildElement('responseBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseBodyNode == null){
				this.responseBody = null;
			} else{
				ConsentDataTypesService.EnableGeneralConsentResponseBodyType responseBodyObj = new ConsentDataTypesService.EnableGeneralConsentResponseBodyType(responseBodyNode);
				nodesParsed.add(responseBodyNode);
				this.responseBody = responseBodyObj;
			}
			//System.debug(this.responseBody);			
		}
	}
	public class EnableInternalConsentRequestBodyType {
		public String globalId;
		public String emailAddress;
		public String consentKind;
		public DateTime consentValidFrom;
		public DateTime consentValidTo;
		public String consentSourceId;
		public String consentProvidedBy;
		private transient String[] globalId_type_info = new String[]{'globalId',s_ns0,'ClientGlobalIdType','0','1','false'};
		private transient String[] emailAddress_type_info = new String[]{'emailAddress',s_ns0,'EmailType','0','1','false'};
		private transient String[] consentKind_type_info = new String[]{'consentKind',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] consentValidFrom_type_info = new String[]{'consentValidFrom',s_ns0,'CommonDateTimeType','0','1','false'};
		private transient String[] consentValidTo_type_info = new String[]{'consentValidTo',s_ns0,'CommonDateTimeType','0','1','false'};
		private transient String[] consentSourceId_type_info = new String[]{'consentSourceId',s_ns0,'CodeListItemIdType','1','1','false'};
		private transient String[] consentProvidedBy_type_info = new String[]{'consentProvidedBy',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'globalId','emailAddress','consentKind','consentValidFrom','consentValidTo','consentSourceId','consentProvidedBy'};
		public EnableInternalConsentRequestBodyType(){
		}
		public EnableInternalConsentRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode globalIdNode = responseNode.getChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.globalId = (globalIdNode == null) ? null : globalIdNode.getText();
			nodesParsed.add(globalIdNode);
			//System.debug(this.globalId);			
			DOM.XmlNode emailAddressNode = responseNode.getChildElement('emailAddress', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.emailAddress = (emailAddressNode == null) ? null : emailAddressNode.getText();
			nodesParsed.add(emailAddressNode);
			//System.debug(this.emailAddress);			
			DOM.XmlNode consentKindNode = responseNode.getChildElement('consentKind', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentKind = (consentKindNode == null) ? null : consentKindNode.getText();
			nodesParsed.add(consentKindNode);
			//System.debug(this.consentKind);			
			DOM.XmlNode consentValidFromNode = responseNode.getChildElement('consentValidFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentValidFrom = (consentValidFromNode == null) ? null :  ConsentDataTypesService.parseDateTime(consentValidFromNode.getText());
			nodesParsed.add(consentValidFromNode);
			//System.debug(this.consentValidFrom);			
			DOM.XmlNode consentValidToNode = responseNode.getChildElement('consentValidTo', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentValidTo = (consentValidToNode == null) ? null :  ConsentDataTypesService.parseDateTime(consentValidToNode.getText());
			nodesParsed.add(consentValidToNode);
			//System.debug(this.consentValidTo);			
			DOM.XmlNode consentSourceIdNode = responseNode.getChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentSourceId = (consentSourceIdNode == null) ? null : consentSourceIdNode.getText();
			nodesParsed.add(consentSourceIdNode);
			//System.debug(this.consentSourceId);			
			DOM.XmlNode consentProvidedByNode = responseNode.getChildElement('consentProvidedBy', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentProvidedBy = (consentProvidedByNode == null) ? null : consentProvidedByNode.getText();
			nodesParsed.add(consentProvidedByNode);
			//System.debug(this.consentProvidedBy);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode globalIdNode = outerNode.addChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			globalIdNode.addTextNode((this.globalId == null) ? '' : String.valueOf(this.globalId));
			Dom.XmlNode emailAddressNode = outerNode.addChildElement('emailAddress', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			emailAddressNode.addTextNode((this.emailAddress == null) ? '' : this.emailAddress);
			Dom.XmlNode consentKindNode = outerNode.addChildElement('consentKind', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.consentKind != null){
				consentKindNode.addTextNode(String.valueOf(this.consentKind));
			}
			Dom.XmlNode consentValidFromNode = outerNode.addChildElement('consentValidFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			consentValidFromNode.addTextNode((this.consentValidFrom == null) ? '' : String.valueOf(this.consentValidFrom));
			Dom.XmlNode consentValidToNode = outerNode.addChildElement('consentValidTo', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			consentValidToNode.addTextNode((this.consentValidTo == null) ? '' : String.valueOf(this.consentValidTo));
			Dom.XmlNode consentSourceIdNode = outerNode.addChildElement('consentSourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(this.consentSourceId != null){
				consentSourceIdNode.addTextNode(String.valueOf(this.consentSourceId));
			}
			Dom.XmlNode consentProvidedByNode = outerNode.addChildElement('consentProvidedBy', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			consentProvidedByNode.addTextNode((this.consentProvidedBy == null) ? '' : String.valueOf(this.consentProvidedBy));
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
	public class EnableInternalConsentRequestType {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader',s_ns0,'RequestHeader','1','1','false'};
		public ConsentDataTypesService.EnableInternalConsentRequestBodyType requestBody;
		private transient String[] requestBody_type_info = new String[]{'requestBody',s_ns0,'EnableInternalConsentRequestBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader','requestBody'};
		public EnableInternalConsentRequestType(){
		}
		public EnableInternalConsentRequestType(CommonMessageService.RequestHeader requestHeader,ConsentDataTypesService.EnableInternalConsentRequestBodyType requestBody){
			this.requestHeader = requestHeader;
			this.requestBody = requestBody;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			//System.assertEquals('enableInternalConsent', outerNode.getName());
			
			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('requestHeader', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			if(requestHeaderObj != null){
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}
			
			ConsentDataTypesService.EnableInternalConsentRequestBodyType requestBodyObj = this.requestBody;
			Dom.XmlNode requestBodyNode = outerNode.addChildElement('requestBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(requestBodyObj != null){
				requestBodyObj.populateXmlNode(requestBodyNode);
			}
		}
	}
	public class EnableInternalConsentResponseBodyType {
		public String consentGuid;
		private transient String[] consentGuid_type_info = new String[]{'consentGuid',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'consentGuid'};
		public EnableInternalConsentResponseBodyType(){
		}
		public EnableInternalConsentResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode consentGuidNode = responseNode.getChildElement('consentGuid', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentGuid = (consentGuidNode == null) ? null : consentGuidNode.getText();
			nodesParsed.add(consentGuidNode);
			//System.debug(this.consentGuid);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode consentGuidNode = outerNode.addChildElement('consentGuid', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentGuidNode.addTextNode((this.consentGuid == null) ? '' : this.consentGuid);
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
	public class EnableInternalConsentResponseType {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public ConsentDataTypesService.EnableInternalConsentResponseBodyType responseBody;
		private transient String[] responseBody_type_info = new String[]{'responseBody',s_ns0,'EnableInternalConsentResponseBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader','responseBody'};
		public EnableInternalConsentResponseType(){
		}
		public EnableInternalConsentResponseType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('enableInternalConsentResponse', responseNode.getName());
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseHeaderNode == null){
				this.responseHeader = null;
			} else{
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			
			DOM.XmlNode responseBodyNode = responseNode.getChildElement('responseBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseBodyNode == null){
				this.responseBody = null;
			} else{
				ConsentDataTypesService.EnableInternalConsentResponseBodyType responseBodyObj = new ConsentDataTypesService.EnableInternalConsentResponseBodyType(responseBodyNode);
				nodesParsed.add(responseBodyNode);
				this.responseBody = responseBodyObj;
			}
			//System.debug(this.responseBody);			
		}
	}
	public class GetGeneralConsentByIdNumberRequestBodyType {
		public String consentEntity;
		public String personalIdentityNumber;
		private transient String[] consentEntity_type_info = new String[]{'consentEntity',s_ns0,'AlphanumericIdType','1','1','false'};
		private transient String[] personalIdentityNumber_type_info = new String[]{'personalIdentityNumber',s_ns0,'PersonalIdentityNumberType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'consentEntity','personalIdentityNumber'};
		public GetGeneralConsentByIdNumberRequestBodyType(){
		}
		public GetGeneralConsentByIdNumberRequestBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode consentEntityNode = responseNode.getChildElement('consentEntity', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentEntity = (consentEntityNode == null) ? null : consentEntityNode.getText();
			nodesParsed.add(consentEntityNode);
			//System.debug(this.consentEntity);			
			DOM.XmlNode personalIdentityNumberNode = responseNode.getChildElement('personalIdentityNumber', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.personalIdentityNumber = (personalIdentityNumberNode == null) ? null : personalIdentityNumberNode.getText();
			nodesParsed.add(personalIdentityNumberNode);
			//System.debug(this.personalIdentityNumber);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode consentEntityNode = outerNode.addChildElement('consentEntity', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			if(this.consentEntity != null){
				consentEntityNode.addTextNode(this.consentEntity);
			}
			Dom.XmlNode personalIdentityNumberNode = outerNode.addChildElement('personalIdentityNumber', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			if(this.personalIdentityNumber != null){
				personalIdentityNumberNode.addTextNode(this.personalIdentityNumber);
			}
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:RequestMessage
	public class GetGeneralConsentByIdNumberRequestType {
		public CommonMessageService.RequestHeader requestHeader;
		private transient String[] requestHeader_type_info = new String[]{'requestHeader',s_ns0,'RequestHeader','1','1','false'};
		public ConsentDataTypesService.GetGeneralConsentByIdNumberRequestBodyType requestBody;
		private transient String[] requestBody_type_info = new String[]{'requestBody',s_ns0,'GetGeneralConsentByIdNumberRequestBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'requestHeader','requestBody'};
		public GetGeneralConsentByIdNumberRequestType(){
		}
		public GetGeneralConsentByIdNumberRequestType(CommonMessageService.RequestHeader requestHeader,ConsentDataTypesService.GetGeneralConsentByIdNumberRequestBodyType requestBody){
			this.requestHeader = requestHeader;
			this.requestBody = requestBody;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			//System.assertEquals('getGeneralConsentByIdNumber', outerNode.getName());
			
			CommonMessageService.RequestHeader requestHeaderObj = this.requestHeader;
			Dom.XmlNode requestHeaderNode = outerNode.addChildElement('requestHeader', 'http://service.cmss.cz/common/CommonMessage/v01', 'v01');
			if(requestHeaderObj != null){
				requestHeaderObj.populateXmlNode(requestHeaderNode);
			}
			
			ConsentDataTypesService.GetGeneralConsentByIdNumberRequestBodyType requestBodyObj = this.requestBody;
			Dom.XmlNode requestBodyNode = outerNode.addChildElement('requestBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'dat');
			if(requestBodyObj != null){
				requestBodyObj.populateXmlNode(requestBodyNode);
			}
		}
	}
	public class GetGeneralConsentByIdNumberResponseBodyType {
		public String globalId;
		public String generalConsentId;
		public String consentValue;
		public DateTime consentValidFrom;
		public DateTime consentValidTo;
		public String consentAgreedBy;
		public String consentVersionId;
		public String entityId;
		public String sourceId;
		public String consentProvidedById;
		public String substitutePersonId;
		public String substituteRoleId;
		private transient String[] globalId_type_info = new String[]{'globalId',s_ns0,'ClientGlobalIdType','0','1','false'};
		private transient String[] generalConsentId_type_info = new String[]{'generalConsentId',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] consentValue_type_info = new String[]{'consentValue',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] consentValidFrom_type_info = new String[]{'consentValidFrom',s_ns0,'CommonDateTimeType','0','1','false'};
		private transient String[] consentValidTo_type_info = new String[]{'consentValidTo',s_ns0,'CommonDateTimeType','0','1','false'};
		private transient String[] consentAgreedBy_type_info = new String[]{'consentAgreedBy',s_ns0,'AlphanumericIdType','0','1','false'};
		private transient String[] consentVersionId_type_info = new String[]{'consentVersionId',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] entityId_type_info = new String[]{'entityId',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] sourceId_type_info = new String[]{'sourceId',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] consentProvidedById_type_info = new String[]{'consentProvidedById',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] substitutePersonId_type_info = new String[]{'substitutePersonId',s_ns0,'ClientGlobalIdType','0','1','false'};
		private transient String[] substituteRoleId_type_info = new String[]{'substituteRoleId',s_ns0,'CodeListItemIdType','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'globalId','generalConsentId','consentValue','consentValidFrom','consentValidTo','consentAgreedBy','consentVersionId','entityId','sourceId','consentProvidedById','substitutePersonId','substituteRoleId'};
		public GetGeneralConsentByIdNumberResponseBodyType(){
		}
		public GetGeneralConsentByIdNumberResponseBodyType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode globalIdNode = responseNode.getChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.globalId = (globalIdNode == null) ? null : globalIdNode.getText();
			nodesParsed.add(globalIdNode);
			//System.debug(this.globalId);			
			DOM.XmlNode generalConsentIdNode = responseNode.getChildElement('generalConsentId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.generalConsentId = (generalConsentIdNode == null) ? null : generalConsentIdNode.getText();
			nodesParsed.add(generalConsentIdNode);
			//System.debug(this.generalConsentId);			
			DOM.XmlNode consentValueNode = responseNode.getChildElement('consentValue', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentValue = (consentValueNode == null) ? null : consentValueNode.getText();
			nodesParsed.add(consentValueNode);
			//System.debug(this.consentValue);			
			DOM.XmlNode consentValidFromNode = responseNode.getChildElement('consentValidFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentValidFrom = (consentValidFromNode == null) ? null :  ConsentDataTypesService.parseDateTime(consentValidFromNode.getText());
			nodesParsed.add(consentValidFromNode);
			//System.debug(this.consentValidFrom);			
			DOM.XmlNode consentValidToNode = responseNode.getChildElement('consentValidTo', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentValidTo = (consentValidToNode == null) ? null :  ConsentDataTypesService.parseDateTime(consentValidToNode.getText());
			nodesParsed.add(consentValidToNode);
			//System.debug(this.consentValidTo);			
			DOM.XmlNode consentAgreedByNode = responseNode.getChildElement('consentAgreedBy', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentAgreedBy = (consentAgreedByNode == null) ? null : consentAgreedByNode.getText();
			nodesParsed.add(consentAgreedByNode);
			//System.debug(this.consentAgreedBy);			
			DOM.XmlNode consentVersionIdNode = responseNode.getChildElement('consentVersionId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentVersionId = (consentVersionIdNode == null) ? null : consentVersionIdNode.getText();
			nodesParsed.add(consentVersionIdNode);
			//System.debug(this.consentVersionId);			
			DOM.XmlNode entityIdNode = responseNode.getChildElement('entityId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.entityId = (entityIdNode == null) ? null : entityIdNode.getText();
			nodesParsed.add(entityIdNode);
			//System.debug(this.entityId);			
			DOM.XmlNode sourceIdNode = responseNode.getChildElement('sourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.sourceId = (sourceIdNode == null) ? null : sourceIdNode.getText();
			nodesParsed.add(sourceIdNode);
			//System.debug(this.sourceId);			
			DOM.XmlNode consentProvidedByIdNode = responseNode.getChildElement('consentProvidedById', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.consentProvidedById = (consentProvidedByIdNode == null) ? null : consentProvidedByIdNode.getText();
			nodesParsed.add(consentProvidedByIdNode);
			//System.debug(this.consentProvidedById);			
			DOM.XmlNode substitutePersonIdNode = responseNode.getChildElement('substitutePersonId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.substitutePersonId = (substitutePersonIdNode == null) ? null : substitutePersonIdNode.getText();
			nodesParsed.add(substitutePersonIdNode);
			//System.debug(this.substitutePersonId);			
			DOM.XmlNode substituteRoleIdNode = responseNode.getChildElement('substituteRoleId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			this.substituteRoleId = (substituteRoleIdNode == null) ? null : substituteRoleIdNode.getText();
			nodesParsed.add(substituteRoleIdNode);
			//System.debug(this.substituteRoleId);			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode globalIdNode = outerNode.addChildElement('globalId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			globalIdNode.addTextNode((this.globalId == null) ? '' : String.valueOf(this.globalId));
			Dom.XmlNode generalConsentIdNode = outerNode.addChildElement('generalConsentId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			generalConsentIdNode.addTextNode((this.generalConsentId == null) ? '' : this.generalConsentId);
			Dom.XmlNode consentValueNode = outerNode.addChildElement('consentValue', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentValueNode.addTextNode((this.consentValue == null) ? '' : String.valueOf(this.consentValue));
			Dom.XmlNode consentValidFromNode = outerNode.addChildElement('consentValidFrom', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentValidFromNode.addTextNode((this.consentValidFrom == null) ? '' : String.valueOf(this.consentValidFrom));
			Dom.XmlNode consentValidToNode = outerNode.addChildElement('consentValidTo', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentValidToNode.addTextNode((this.consentValidTo == null) ? '' : String.valueOf(this.consentValidTo));
			Dom.XmlNode consentAgreedByNode = outerNode.addChildElement('consentAgreedBy', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentAgreedByNode.addTextNode((this.consentAgreedBy == null) ? '' : this.consentAgreedBy);
			Dom.XmlNode consentVersionIdNode = outerNode.addChildElement('consentVersionId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentVersionIdNode.addTextNode((this.consentVersionId == null) ? '' : String.valueOf(this.consentVersionId));
			Dom.XmlNode entityIdNode = outerNode.addChildElement('entityId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			entityIdNode.addTextNode((this.entityId == null) ? '' : String.valueOf(this.entityId));
			Dom.XmlNode sourceIdNode = outerNode.addChildElement('sourceId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			sourceIdNode.addTextNode((this.sourceId == null) ? '' : String.valueOf(this.sourceId));
			Dom.XmlNode consentProvidedByIdNode = outerNode.addChildElement('consentProvidedById', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			consentProvidedByIdNode.addTextNode((this.consentProvidedById == null) ? '' : String.valueOf(this.consentProvidedById));
			Dom.XmlNode substitutePersonIdNode = outerNode.addChildElement('substitutePersonId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			substitutePersonIdNode.addTextNode((this.substitutePersonId == null) ? '' : String.valueOf(this.substitutePersonId));
			Dom.XmlNode substituteRoleIdNode = outerNode.addChildElement('substituteRoleId', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', '');
			substituteRoleIdNode.addTextNode((this.substituteRoleId == null) ? '' : String.valueOf(this.substituteRoleId));
		}
	}
	
	//Extends http://service.cmss.cz/common/CommonMessage/v01:ResponseMessage
	public class GetGeneralConsentByIdNumberResponseType {
		public CommonMessageService.ResponseHeader responseHeader;
		private transient String[] responseHeader_type_info = new String[]{'responseHeader',s_ns0,'ResponseHeader','1','1','false'};
		public ConsentDataTypesService.GetGeneralConsentByIdNumberResponseBodyType responseBody;
		private transient String[] responseBody_type_info = new String[]{'responseBody',s_ns0,'GetGeneralConsentByIdNumberResponseBodyType','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'responseHeader','responseBody'};
		public GetGeneralConsentByIdNumberResponseType(){
		}
		public GetGeneralConsentByIdNumberResponseType(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			//System.assertEquals('getGeneralConsentByIdNumberResponse', responseNode.getName());
			DOM.XmlNode responseHeaderNode = responseNode.getChildElement('responseHeader', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseHeaderNode == null){
				this.responseHeader = null;
			} else{
				CommonMessageService.ResponseHeader responseHeaderObj = new CommonMessageService.ResponseHeader(responseHeaderNode);
				nodesParsed.add(responseHeaderNode);
				this.responseHeader = responseHeaderObj;
			}
			//System.debug(this.responseHeader);			
			DOM.XmlNode responseBodyNode = responseNode.getChildElement('responseBody', 'http://service.cmss.cz/person/ConsentService/v01/datatypes');
			if(responseBodyNode == null){
				this.responseBody = null;
			} else{
				ConsentDataTypesService.GetGeneralConsentByIdNumberResponseBodyType responseBodyObj = new ConsentDataTypesService.GetGeneralConsentByIdNumberResponseBodyType(responseBodyNode);
				nodesParsed.add(responseBodyNode);
				this.responseBody = responseBodyObj;
			}
			//System.debug(this.responseBody);			
		}
	}
}