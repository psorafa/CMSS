//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)

@isTest
public class MailSOAPServiceTest {
	public class MailServiceMockImpl implements WebServiceMock {
		public void doInvoke(
			Object stub,
			Object request,
			Map<String, Object> response,
			String endpoint,
			String soapAction,
			String requestName,
			String responseNS,
			String responseName,
			String responseType
		) {
			System.debug(
				LoggingLevel.INFO,
				'MailSOAPServiceTest.doInvoke() - ' +
				'\n request: ' +
				request +
				'\n response: ' +
				response +
				'\n endpoint: ' +
				endpoint +
				'\n soapAction: ' +
				soapAction +
				'\n requestName: ' +
				requestName +
				'\n responseNS: ' +
				responseNS +
				'\n responseName: ' +
				responseName +
				'\n responseType: ' +
				responseType
			);

			if (request instanceof MailSOAPService.SendEmailType) {
				response.put('response_x', new MailSOAPService.sendEmailResponse_element());
			} else if (request instanceof MailSOAPService.SendEmailWithAttachmentsType) {
				response.put('response_x', new MailSOAPService.sendEmailWithAttachmentsResponse_element());
			}
		}
	}

	@TestSetup
	static void insertCustomSettings() {
		IntegrationSettings__c intSet = TestDataFactory.getIntegrationSettings();
		insert intSet;
	}

	@isTest
	static void coverGeneratedCodeTypes() {
		Test.setMock(WebServiceMock.class, new MailServiceMockImpl());
		MailSOAPService parentObject = new MailSOAPService();
		new MailSOAPService.SendEmailType();
		new MailSOAPService.SendEmailWithAttachmentsType();
		new MailSOAPService.CMSSBusinessLogicFaultInfo();
		new MailSOAPService.CMSSFaultInfo();
		new MailSOAPService.CMSSSecurityFaultInfo();
		new MailSOAPService.CMSSServiceFaultInfo();
		new MailSOAPService.sendEmailResponse_element();
		new MailSOAPService.sendEmailWithAttachmentsResponse_element();
	}

	@isTest
	static void coverCodeForsendEmail() {
		Test.setMock(WebServiceMock.class, new MailServiceMockImpl());
		Test.startTest();
		MailSOAPService.MailServicePort testObject = new MailSOAPService.MailServicePort();
		testObject.sendEmail(null, null, null, null);
		Test.stopTest();
	}

	@isTest
	static void coverCodeForsendEmailWithAttachments() {
		Test.setMock(WebServiceMock.class, new MailServiceMockImpl());
		Test.startTest();
		MailSOAPService.MailServicePort testObject = new MailSOAPService.MailServicePort();
		testObject.sendEmailWithAttachments(null, null, null, null, null);
		Test.stopTest();
	}
}
