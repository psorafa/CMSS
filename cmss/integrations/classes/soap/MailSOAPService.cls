//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
//Methods Included: sendEmail, sendEmailWithAttachments
// Primary Port Class Name: MailServicePort
public class MailSOAPService {
	private static final String serviceNamespace = 'http://service.cmss.cz/mail';
	private static final String sendMailEndpoint = 'http://service.cmss.cz/datamodel/mailservice/sendemail';
	private static final String faultEndpoint = 'http://service.cmss.cz/fault';

	public class MailServicePort {
		public String endpoint_x = 'http://wasvyvojesbi.cmss.local:11116/mail_service-2.0.0/MailService';
		public Map<String, String> inputHttpHeaders_x;
		public Map<String, String> outputHttpHeaders_x;
		public String clientCertName_x;
		public String clientCert_x;
		public String clientCertPasswd_x;
		public Integer timeout_x;
		private transient String[] ns_map_type_info = new List<String>{
			'http://service.cmss.cz/datamodel/mailservice/sendemail',
			'MailSOAPService',
			'http://service.cmss.cz/fault',
			'MailSOAPService'
		};

		public void sendEmail(String Receiver, String Sender, String Subject, String Body) {
			DOM.Document doc = new DOM.Document();
			Dom.XmlNode methodNode = setupRequest(doc);

			MailSOAPService.SendEmailType request_x = new MailSOAPService.SendEmailType();
			MailSOAPService.sendEmailResponse_element response_x;
			request_x.Receiver = Receiver;
			request_x.Sender = Sender;
			request_x.Subject = Subject;
			request_x.Body = Body;
			request_x.populateXmlNode(methodNode);

			Map<String, MailSOAPService.sendEmailResponse_element> response_map_x = new Map<String, MailSOAPService.sendEmailResponse_element>();
			response_map_x.put('response_x', response_x);
			WebServiceCallout.invoke(
				this,
				request_x,
				response_map_x,
				new List<String>{
					endpoint_x,
					'http://services.cmss.cz/MailService/sendEmail',
					serviceNamespace,
					'sendEmailRequest',
					serviceNamespace,
					'sendEmailResponse',
					'MailSOAPService.sendEmailResponse_element'
				}
			);
			response_x = response_map_x.get('response_x');
		}

		public void sendEmailWithAttachments(
			String Receiver,
			String Sender,
			String Subject,
			String Body,
			MailSOAPService.AttachmentType[] Attachments
		) {
			DOM.Document doc = new DOM.Document();
			Dom.XmlNode methodNode = setupRequest(doc);

			MailSOAPService.SendEmailWithAttachmentsType request_x = new MailSOAPService.SendEmailWithAttachmentsType();
			MailSOAPService.sendEmailWithAttachmentsResponse_element response_x;
			request_x.Receiver = Receiver;
			request_x.Sender = Sender;
			request_x.Subject = Subject;
			request_x.Body = Body;
			request_x.Attachments = Attachments;
			request_x.populateXmlNode(methodNode);

			Map<String, MailSOAPService.sendEmailWithAttachmentsResponse_element> response_map_x = new Map<String, MailSOAPService.sendEmailWithAttachmentsResponse_element>();
			response_map_x.put('response_x', response_x);
			WebServiceCallout.invoke(
				this,
				request_x,
				response_map_x,
				new List<String>{
					endpoint_x,
					'http://services.cmss.cz/MailService/sendEmailWithAttachments',
					serviceNamespace,
					'sendEmailWithAttachmentsRequest',
					serviceNamespace,
					'sendEmailWithAttachmentsResponse',
					'MailSOAPService.sendEmailWithAttachmentsResponse_element'
				}
			);
			response_x = response_map_x.get('response_x');
		}

		private Dom.XmlNode setupRequest(DOM.Document doc) {
			String env_ns = 'http://schemas.xmlsoap.org/soap/envelope/';

			DOM.XmlNode envelope = doc.createRootElement('Envelope', env_ns, 'soapenv');
			envelope.setNamespace('mailservice', serviceNamespace);
			envelope.setNamespace('sendemail', sendMailEndpoint);
			DOM.XmlNode header = envelope.addChildElement('Header', env_ns, 'soapenv');
			new SOAPCommonTypes.OutboundHttpHeader()
				.addWssToHeader(
					header,
					IntegrationSettings__c.getOrgDefaults().MailServiceUsername__c,
					IntegrationSettings__c.getOrgDefaults().MailServicePassword__c
				);
			DOM.XmlNode body = envelope.addChildElement('Body', env_ns, 'soapenv');
			return body.addChildElement('requestName', serviceNamespace, 'sendemail');
		}
	}

	public class sendEmailResponse_element {
		private transient String[] apex_schema_type_info = new List<String>{ serviceNamespace, 'true', 'false' };
		private transient String[] field_order_type_info = new List<String>{};
	}
	public class sendEmailWithAttachmentsResponse_element {
		private transient String[] apex_schema_type_info = new List<String>{ serviceNamespace, 'true', 'false' };
		private transient String[] field_order_type_info = new List<String>{};
	}

	public class SendEmailType {
		public String Receiver;
		public String Sender;
		public String Subject;
		public String Body;
		public CommonMessageService.RequestHeader requestHeader;

		public void populateXmlNode(Dom.XmlNode outerNode) {
			Dom.XmlNode receiverNode = outerNode.addChildElement('Receiver', sendMailEndpoint, '');
			receiverNode.addTextNode((this.Receiver == null) ? '' : this.Receiver);

			Dom.XmlNode senderNode = outerNode.addChildElement('Sender', sendMailEndpoint, '');
			senderNode.addTextNode((this.Sender == null) ? '' : this.Sender);

			Dom.XmlNode subjectNode = outerNode.addChildElement('Subject', sendMailEndpoint, '');
			subjectNode.addTextNode((this.Subject == null) ? '' : this.Subject);

			Dom.XmlNode bodyNode = outerNode.addChildElement('Body', sendMailEndpoint, '');
			bodyNode.addTextNode((this.Body == null) ? '' : this.Body);
		}

		private transient String[] Receiver_type_info = new List<String>{
			'Receiver',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Sender_type_info = new List<String>{
			'Sender',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Subject_type_info = new List<String>{
			'Subject',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Body_type_info = new List<String>{
			'Body',
			sendMailEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] requestHeader_type_info = new List<String>{
			'requestHeader',
			sendMailEndpoint,
			'RequestHeader',
			'1',
			'1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{ sendMailEndpoint, 'true', 'false' };
		private transient String[] field_order_type_info = new List<String>{ 'Receiver', 'Sender', 'Subject', 'Body' };
	}

	public class SendEmailWithAttachmentsType {
		public String Receiver;
		public String Sender;
		public String Subject;
		public String Body;
		public MailSOAPService.AttachmentType[] Attachments;

		public void populateXmlNode(Dom.XmlNode outerNode) {
			Dom.XmlNode receiverNode = outerNode.addChildElement('Receiver', sendMailEndpoint, '');
			receiverNode.addTextNode((this.Receiver == null) ? '' : this.Receiver);

			Dom.XmlNode senderNode = outerNode.addChildElement('Sender', sendMailEndpoint, '');
			senderNode.addTextNode((this.Sender == null) ? '' : this.Sender);

			Dom.XmlNode subjectNode = outerNode.addChildElement('Subject', sendMailEndpoint, '');
			subjectNode.addTextNode((this.Subject == null) ? '' : this.Subject);

			Dom.XmlNode bodyNode = outerNode.addChildElement('Body', sendMailEndpoint, '');
			bodyNode.addTextNode((this.Body == null) ? '' : this.Body);

			Dom.XmlNode attachmentsNode = outerNode.addChildElement('Attachments', sendMailEndpoint, '');
			if (this.Attachments != null) {
				for (MailSOAPService.AttachmentType att : Attachments) {
					Dom.XmlNode currentAttachmentNode = attachmentsNode.addChildElement(
						'Attachment',
						sendMailEndpoint,
						''
					);
					currentAttachmentNode.addTextNode(String.valueOf(att.attachment));
				}
			}
		}

		private transient String[] Receiver_type_info = new List<String>{
			'Receiver',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Sender_type_info = new List<String>{
			'Sender',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Subject_type_info = new List<String>{
			'Subject',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Body_type_info = new List<String>{
			'Body',
			sendMailEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] Attachments_type_info = new List<String>{
			'Attachments',
			sendMailEndpoint,
			'AttachmentType',
			'0',
			'-1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{ sendMailEndpoint, 'true', 'false' };
		private transient String[] field_order_type_info = new List<String>{
			'Receiver',
			'Sender',
			'Subject',
			'Body',
			'Attachments'
		};
	}

	public class AttachmentType {
		Attachment attachment;
	}

	//Extends http://service.cmss.cz/fault:CMSSFaultInfo
	public class CMSSBusinessLogicFaultInfo {
		public String message;
		public MailSOAPService.CMSSFaultInfo cause;
		private transient String[] message_type_info = new List<String>{
			'message',
			faultEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] cause_type_info = new List<String>{
			'cause',
			faultEndpoint,
			'CMSSFaultInfo',
			'0',
			'1',
			'false'
		};
		public Integer errorNumber;
		private transient String[] errorNumber_type_info = new List<String>{
			'errorNumber',
			faultEndpoint,
			'int',
			'1',
			'1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{ faultEndpoint, 'true', 'false' };
		private transient String[] field_order_type_info = new List<String>{ 'message', 'cause', 'errorNumber' };
	}

	public class CMSSFaultInfo {
		public String message;
		public MailSOAPService.CMSSFaultInfo cause;
		private transient String[] message_type_info = new List<String>{
			'message',
			faultEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] cause_type_info = new List<String>{
			'cause',
			faultEndpoint,
			'CMSSFaultInfo',
			'0',
			'1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{ faultEndpoint, 'true', 'false' };
		private transient String[] field_order_type_info = new List<String>{ 'message', 'cause' };
	}

	//Extends http://service.cmss.cz/fault:CMSSFaultInfo
	public class CMSSSecurityFaultInfo {
		public String message;
		public MailSOAPService.CMSSFaultInfo cause;
		private transient String[] message_type_info = new List<String>{
			'message',
			faultEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] cause_type_info = new List<String>{
			'cause',
			faultEndpoint,
			'CMSSFaultInfo',
			'0',
			'1',
			'false'
		};
		public Integer errorNumber;
		public Integer errorNumberDetail;
		private transient String[] errorNumber_type_info = new List<String>{
			'errorNumber',
			faultEndpoint,
			'int',
			'1',
			'1',
			'false'
		};
		private transient String[] errorNumberDetail_type_info = new List<String>{
			'errorNumberDetail',
			faultEndpoint,
			'int',
			'1',
			'1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{ faultEndpoint, 'true', 'false' };
		private transient String[] field_order_type_info = new List<String>{
			'message',
			'cause',
			'errorNumber',
			'errorNumberDetail'
		};
	}

	//Extends http://service.cmss.cz/fault:CMSSFaultInfo
	public class CMSSServiceFaultInfo {
		public String message;
		public MailSOAPService.CMSSFaultInfo cause;
		private transient String[] message_type_info = new List<String>{
			'message',
			faultEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] cause_type_info = new List<String>{
			'cause',
			faultEndpoint,
			'CMSSFaultInfo',
			'0',
			'1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{ faultEndpoint, 'true', 'false' };
		private transient String[] field_order_type_info = new List<String>{ 'message', 'cause' };
	}
}
