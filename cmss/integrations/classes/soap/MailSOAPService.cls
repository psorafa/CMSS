//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
//Methods Included: sendEmail, sendEmailWithAttachments
// Primary Port Class Name: MailServicePort
public class MailSOAPService {
	private static final String serviceNamespace = 'http://service.cmss.cz/mail';
	private static final String sendMailEndpoint = 'http://service.cmss.cz/datamodel/mailservice/sendemail';
	private static final String faultEndpoint = 'http://service.cmss.cz/fault';

	public class MailServicePort {
		public String endpoint_x =
			IntegrationSettings__c.getOrgDefaults().EsbEndpoint__c + '/mail_service_v02/MailService';
		public Map<String, String> inputHttpHeaders_x;
		public Map<String, String> outputHttpHeaders_x;
		public String clientCertName_x;
		public String clientCert_x;
		public String clientCertPasswd_x;
		public Integer timeout_x;
		private transient String[] ns_map_type_info = new List<String>{
			sendMailEndpoint,
			'MailSOAPService',
			faultEndpoint,
			'MailSOAPService'
		};

		private DOM.XmlNode populateDoc(DOM.Document doc) {
			String env = 'http://schemas.xmlsoap.org/soap/envelope/';
			String xsi = 'http://www.w3.org/2001/XMLSchema-instance';
			String xsd = 'http://www.w3.org/2001/XMLSchema';

			DOM.XmlNode envelope = doc.createRootElement('Envelope', env, 'soapenv');
			envelope.setNamespace('xsd', xsd);
			envelope.setNamespace('xsi', xsi);
			DOM.XmlNode header = envelope.addChildElement('Header', env, 'soapenv');
			new SOAPCommonTypes.OutboundHttpHeader()
				.addWssToHeader(
					header,
					IntegrationSettings__c.getOrgDefaults().EsbUsername__c,
					IntegrationSettings__c.getOrgDefaults().EsbPassword__c
				);

			DOM.XmlNode body = envelope.addChildElement('Body', env, 'soapenv');
			return body;
		}

		public HTTPResponse sendEmail_Http(String Reciever, String Sender, String Subject, String Body) {
			DOM.Document doc = new DOM.Document();
			DOM.XmlNode reqBody = populateDoc(doc);
			DOM.XmlNode methodNode = reqBody.addChildElement('sendEmailRequest', serviceNamespace, 'mail');
			MailSOAPService.SendEmailType request_x = new MailSOAPService.SendEmailType(
				Reciever,
				Sender,
				Subject,
				Body
			);
			request_x.populateXmlNode(methodNode);

			HttpRequest req = new HttpRequest();
			req.setTimeout(20000);
			req.setEndpoint(endpoint_x);
			req.setMethod('POST');
			req.setHeader('Content-Type', 'text/xml; charset=UTF-8');
			req.setHeader('SOAPAction', 'http://services.cmss.cz/MailService/sendEmail');
			req.setBodyDocument(doc);

			Logger.debug('Outgoing request', Logger.serializeHttpRequest(req));
			Http http = new Http();
			HTTPResponse res = http.send(req);
			Logger.debug('Incoming response', Logger.serializeHttpResponse(res));
			Dom.Document responseDoc = res.getBodyDocument();
			Dom.XmlNode rootNode = responseDoc.getRootElement();
			Dom.XmlNode bodyNode = rootNode.getChildElement('Body', 'http://schemas.xmlsoap.org/soap/envelope/');
			Dom.XmlNode sendEmailResponseNode = bodyNode.getChildElement('sendEmailResponse', serviceNamespace);
			System.debug(res.getStatus());
			return res;
		}

		public void sendEmailWithAttachments_Http(
			String Reciever,
			String Sender,
			String Subject,
			String Body,
			MailSOAPService.AttachmentType[] Attachments
		) {
			DOM.Document doc = new DOM.Document();
			DOM.XmlNode reqBody = populateDoc(doc);
			DOM.XmlNode methodNode = reqBody.addChildElement(
				'sendEmailWithAttachmentsRequest',
				serviceNamespace,
				'mail'
			);
			MailSOAPService.SendEmailWithAttachmentsType request_x = new MailSOAPService.SendEmailWithAttachmentsType(
				Reciever,
				Sender,
				Subject,
				Body,
				Attachments
			);
			request_x.populateXmlNode(methodNode);

			HttpRequest req = new HttpRequest();
			req.setEndpoint(endpoint_x);
			req.setMethod('POST');
			req.setHeader('Content-Type', 'text/xml; charset=UTF-8');
			req.setHeader('SOAPAction', 'http://services.cmss.cz/MailService/sendEmailWithAttachments');
			req.setBodyDocument(doc);
			Http http = new Http();
			HTTPResponse res = http.send(req);
			Dom.Document responseDoc = res.getBodyDocument();
			Dom.XmlNode rootNode = responseDoc.getRootElement();
			Dom.XmlNode bodyNode = rootNode.getChildElement('Body', 'http://schemas.xmlsoap.org/soap/envelope/');
			Dom.XmlNode sendEmailWithAttachmentsResponseNode = bodyNode.getChildElement(
				'sendEmailWithAttachmentsResponse',
				serviceNamespace
			);
		}
	}

	public class sendEmailResponse_element {
		private transient String[] apex_schema_type_info = new List<String>{serviceNamespace, 'true', 'false'};
		private transient String[] field_order_type_info = new List<String>{};
		public sendEmailResponse_element(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
		}
	}
	public class sendEmailWithAttachmentsResponse_element {
		private transient String[] apex_schema_type_info = new List<String>{serviceNamespace, 'true', 'false'};
		private transient String[] field_order_type_info = new List<String>{};
		public sendEmailWithAttachmentsResponse_element(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
		}
	}

	public class SendEmailType {
		public String Reciever;
		public String Sender;
		public String Subject;
		public String Body;
		private transient String[] Reciever_type_info = new List<String>{
			'Reciever',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Sender_type_info = new List<String>{
			'Sender',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Subject_type_info = new List<String>{
			'Subject',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Body_type_info = new List<String>{
			'Body',
			sendMailEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{sendMailEndpoint, 'true', 'false'};
		private transient String[] field_order_type_info = new List<String>{'Reciever', 'Sender', 'Subject', 'Body'};
		public SendEmailType() {
		}

		public SendEmailType(String Reciever, String Sender, String Subject, String Body) {
			this.Reciever = Reciever;
			this.Sender = Sender;
			this.Subject = Subject;
			this.Body = Body;
		}

		public void populateXmlNode(Dom.XmlNode outerNode) {
			Dom.XmlNode RecieverNode = outerNode.addChildElement('Reciever', sendMailEndpoint, 'sen');
			if (this.Reciever != null) {
				RecieverNode.addTextNode(this.Reciever);
			}
			Dom.XmlNode SenderNode = outerNode.addChildElement('Sender', sendMailEndpoint, 'sen');
			if (this.Sender != null) {
				SenderNode.addTextNode(this.Sender);
			}
			Dom.XmlNode SubjectNode = outerNode.addChildElement('Subject', sendMailEndpoint, 'sen');
			if (this.Subject != null) {
				SubjectNode.addTextNode(this.Subject);
			}
			Dom.XmlNode BodyNode = outerNode.addChildElement('Body', sendMailEndpoint, 'sen');
			BodyNode.addTextNode((this.Body == null) ? '' : this.Body);
		}
	}

	public class SendEmailWithAttachmentsType {
		public String Reciever;
		public String Sender;
		public String Subject;
		public String Body;
		public MailSOAPService.AttachmentType[] Attachments;
		private transient String[] Reciever_type_info = new List<String>{
			'Reciever',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Sender_type_info = new List<String>{
			'Sender',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Subject_type_info = new List<String>{
			'Subject',
			sendMailEndpoint,
			'string',
			'1',
			'1',
			'false'
		};
		private transient String[] Body_type_info = new List<String>{
			'Body',
			sendMailEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] Attachments_type_info = new List<String>{
			'Attachments',
			sendMailEndpoint,
			'AttachmentType',
			'0',
			'-1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{sendMailEndpoint, 'true', 'false'};
		private transient String[] field_order_type_info = new List<String>{
			'Reciever',
			'Sender',
			'Subject',
			'Body',
			'Attachments'
		};
		public SendEmailWithAttachmentsType() {
		}
		public SendEmailWithAttachmentsType(
			String Reciever,
			String Sender,
			String Subject,
			String Body,
			MailSOAPService.AttachmentType[] Attachments
		) {
			this.Reciever = Reciever;
			this.Sender = Sender;
			this.Subject = Subject;
			this.Body = Body;
			this.Attachments = Attachments;
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {
			Dom.XmlNode RecieverNode = outerNode.addChildElement('Reciever', sendMailEndpoint, '');
			if (this.Reciever != null) {
				RecieverNode.addTextNode(this.Reciever);
			}
			Dom.XmlNode SenderNode = outerNode.addChildElement('Sender', sendMailEndpoint, '');
			if (this.Sender != null) {
				SenderNode.addTextNode(this.Sender);
			}
			Dom.XmlNode SubjectNode = outerNode.addChildElement('Subject', sendMailEndpoint, '');
			if (this.Subject != null) {
				SubjectNode.addTextNode(this.Subject);
			}
			Dom.XmlNode BodyNode = outerNode.addChildElement('Body', sendMailEndpoint, '');
			BodyNode.addTextNode((this.Body == null) ? '' : this.Body);

			MailSOAPService.AttachmentType[] AttachmentsObj = this.Attachments;
			if (AttachmentsObj != null) {
				Dom.XmlNode AttachmentsNode = outerNode.addChildElement('Attachments', sendMailEndpoint, '');
				for (MailSOAPService.AttachmentType element : AttachmentsObj) {
					Dom.XmlNode AttachmentNode = AttachmentsNode.addChildElement('Attachment', sendMailEndpoint, '');
					AttachmentsNode.addTextNode(JSON.serialize(element.attachment));
				}
			}
		}
	}

	public class AttachmentType {
		Attachment attachment; //TBD
		public void populateXmlNode(Dom.XmlNode outerNode) {
		}
	}

	//Extends http://service.cmss.cz/fault:CMSSFaultInfo
	public class CMSSBusinessLogicFaultInfo {
		public String message;
		public MailSOAPService.CMSSFaultInfo cause;
		private transient String[] message_type_info = new List<String>{
			'message',
			faultEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] cause_type_info = new List<String>{
			'cause',
			faultEndpoint,
			'CMSSFaultInfo',
			'0',
			'1',
			'false'
		};
		public Integer errorNumber;
		private transient String[] errorNumber_type_info = new List<String>{
			'errorNumber',
			faultEndpoint,
			'int',
			'1',
			'1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{faultEndpoint, 'true', 'false'};
		private transient String[] field_order_type_info = new List<String>{'message', 'cause', 'errorNumber'};
		public CMSSBusinessLogicFaultInfo() {
		}
		public CMSSBusinessLogicFaultInfo(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode messageNode = responseNode.getChildElement('message', faultEndpoint);
			this.message = (messageNode == null) ? null : messageNode.getText();
			nodesParsed.add(messageNode);
			DOM.XmlNode causeNode = responseNode.getChildElement('cause', faultEndpoint);
			if (causeNode == null) {
				this.cause = null;
			} else {
				MailSOAPService.CMSSFaultInfo causeObj = new MailSOAPService.CMSSFaultInfo(causeNode);
				nodesParsed.add(causeNode);
				this.cause = causeObj;
			}
			DOM.XmlNode errorNumberNode = responseNode.getChildElement('errorNumber', faultEndpoint);
			this.errorNumber = (errorNumberNode == null) ? null : Integer.valueOf(errorNumberNode.getText());
			nodesParsed.add(errorNumberNode);
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {
			Dom.XmlNode messageNode = outerNode.addChildElement('message', faultEndpoint, '');
			messageNode.addTextNode((this.message == null) ? '' : this.message);

			MailSOAPService.CMSSFaultInfo causeObj = this.cause;
			Dom.XmlNode causeNode = outerNode.addChildElement('cause', faultEndpoint, '');
			if (causeObj != null) {
				causeObj.populateXmlNode(causeNode);
			}
			Dom.XmlNode errorNumberNode = outerNode.addChildElement('errorNumber', faultEndpoint, '');
			if (this.errorNumber != null) {
				errorNumberNode.addTextNode(String.valueOf(this.errorNumber));
			}
		}
	}

	public class CMSSFaultInfo {
		public String message;
		public MailSOAPService.CMSSFaultInfo cause;
		private transient String[] message_type_info = new List<String>{
			'message',
			faultEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] cause_type_info = new List<String>{
			'cause',
			faultEndpoint,
			'CMSSFaultInfo',
			'0',
			'1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{faultEndpoint, 'true', 'false'};
		private transient String[] field_order_type_info = new List<String>{'message', 'cause'};
		public CMSSFaultInfo() {
		}
		public CMSSFaultInfo(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode messageNode = responseNode.getChildElement('message', faultEndpoint);
			this.message = (messageNode == null) ? null : messageNode.getText();
			nodesParsed.add(messageNode);
			DOM.XmlNode causeNode = responseNode.getChildElement('cause', faultEndpoint);
			if (causeNode == null) {
				this.cause = null;
			} else {
				MailSOAPService.CMSSFaultInfo causeObj = new MailSOAPService.CMSSFaultInfo(causeNode);
				nodesParsed.add(causeNode);
				this.cause = causeObj;
			}
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {
			Dom.XmlNode messageNode = outerNode.addChildElement('message', faultEndpoint, '');
			messageNode.addTextNode((this.message == null) ? '' : this.message);

			MailSOAPService.CMSSFaultInfo causeObj = this.cause;
			Dom.XmlNode causeNode = outerNode.addChildElement('cause', faultEndpoint, '');
			if (causeObj != null) {
				causeObj.populateXmlNode(causeNode);
			}
		}
	}

	//Extends http://service.cmss.cz/fault:CMSSFaultInfo
	public class CMSSSecurityFaultInfo {
		public String message;
		public MailSOAPService.CMSSFaultInfo cause;
		private transient String[] message_type_info = new List<String>{
			'message',
			faultEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] cause_type_info = new List<String>{
			'cause',
			faultEndpoint,
			'CMSSFaultInfo',
			'0',
			'1',
			'false'
		};
		public Integer errorNumber;
		public Integer errorNumberDetail;
		private transient String[] errorNumber_type_info = new List<String>{
			'errorNumber',
			faultEndpoint,
			'int',
			'1',
			'1',
			'false'
		};
		private transient String[] errorNumberDetail_type_info = new List<String>{
			'errorNumberDetail',
			faultEndpoint,
			'int',
			'1',
			'1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{faultEndpoint, 'true', 'false'};
		private transient String[] field_order_type_info = new List<String>{
			'message',
			'cause',
			'errorNumber',
			'errorNumberDetail'
		};
		public CMSSSecurityFaultInfo() {
		}
		public CMSSSecurityFaultInfo(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode messageNode = responseNode.getChildElement('message', faultEndpoint);
			this.message = (messageNode == null) ? null : messageNode.getText();
			nodesParsed.add(messageNode);
			DOM.XmlNode causeNode = responseNode.getChildElement('cause', faultEndpoint);
			if (causeNode == null) {
				this.cause = null;
			} else {
				MailSOAPService.CMSSFaultInfo causeObj = new MailSOAPService.CMSSFaultInfo(causeNode);
				nodesParsed.add(causeNode);
				this.cause = causeObj;
			}
			DOM.XmlNode errorNumberNode = responseNode.getChildElement('errorNumber', faultEndpoint);
			this.errorNumber = (errorNumberNode == null) ? null : Integer.valueOf(errorNumberNode.getText());
			nodesParsed.add(errorNumberNode);
			DOM.XmlNode errorNumberDetailNode = responseNode.getChildElement('errorNumberDetail', faultEndpoint);
			this.errorNumberDetail = (errorNumberDetailNode == null)
				? null
				: Integer.valueOf(errorNumberDetailNode.getText());
			nodesParsed.add(errorNumberDetailNode);
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {
			Dom.XmlNode messageNode = outerNode.addChildElement('message', faultEndpoint, '');
			messageNode.addTextNode((this.message == null) ? '' : this.message);

			MailSOAPService.CMSSFaultInfo causeObj = this.cause;
			Dom.XmlNode causeNode = outerNode.addChildElement('cause', faultEndpoint, '');
			if (causeObj != null) {
				causeObj.populateXmlNode(causeNode);
			}
			Dom.XmlNode errorNumberNode = outerNode.addChildElement('errorNumber', faultEndpoint, '');
			if (this.errorNumber != null) {
				errorNumberNode.addTextNode(String.valueOf(this.errorNumber));
			}
			Dom.XmlNode errorNumberDetailNode = outerNode.addChildElement('errorNumberDetail', faultEndpoint, '');
			if (this.errorNumberDetail != null) {
				errorNumberDetailNode.addTextNode(String.valueOf(this.errorNumberDetail));
			}
		}
	}

	//Extends http://service.cmss.cz/fault:CMSSFaultInfo
	public class CMSSServiceFaultInfo {
		public String message;
		public MailSOAPService.CMSSFaultInfo cause;
		private transient String[] message_type_info = new List<String>{
			'message',
			faultEndpoint,
			'string',
			'0',
			'1',
			'false'
		};
		private transient String[] cause_type_info = new List<String>{
			'cause',
			faultEndpoint,
			'CMSSFaultInfo',
			'0',
			'1',
			'false'
		};
		private transient String[] apex_schema_type_info = new List<String>{faultEndpoint, 'true', 'false'};
		private transient String[] field_order_type_info = new List<String>{'message', 'cause'};
		public CMSSServiceFaultInfo() {
		}
		public CMSSServiceFaultInfo(DOM.XmlNode responseNode) {
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode messageNode = responseNode.getChildElement('message', faultEndpoint);
			this.message = (messageNode == null) ? null : messageNode.getText();
			nodesParsed.add(messageNode);
			DOM.XmlNode causeNode = responseNode.getChildElement('cause', faultEndpoint);
			if (causeNode == null) {
				this.cause = null;
			} else {
				MailSOAPService.CMSSFaultInfo causeObj = new MailSOAPService.CMSSFaultInfo(causeNode);
				nodesParsed.add(causeNode);
				this.cause = causeObj;
			}
		}
		public void populateXmlNode(Dom.XmlNode outerNode) {
			Dom.XmlNode messageNode = outerNode.addChildElement('message', faultEndpoint, '');
			messageNode.addTextNode((this.message == null) ? '' : this.message);

			MailSOAPService.CMSSFaultInfo causeObj = this.cause;
			Dom.XmlNode causeNode = outerNode.addChildElement('cause', faultEndpoint, '');
			if (causeObj != null) {
				causeObj.populateXmlNode(causeNode);
			}
		}
	}
}
