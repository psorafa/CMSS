//Generated by wsdl2apex

public class ConsentWebService {
    public class ConsentServicePort {
        public String endpoint_x = 'https://ivdr.cmss.cz:443/ConsentServiceWeb_v01/ConsentService'; //'http://wasdevesb.cmss.local/ConsentServiceWeb_v01/ConsentService';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://service.cmss.cz/common/datamodel/basictypes/v02', 'BasicTypes', 'http://service.cmss.cz/person/ConsentService/v01/datatypes', 'ConsentWebServiceDataTypes', 'http://service.cmss.cz/common/CommonMessage/v01', 'CommonMessage', 'http://service.cmss.cz/person/ConsentService/v01', 'ConsentWebService'};
        public ConsentWebServiceDataTypes.GetGeneralConsentByIdNumberResponseBodyType getGeneralConsentByIdNumber(ConsentWebServiceDataTypes.GetGeneralConsentByIdNumberRequestBodyType requestBody) {
            ConsentWebServiceDataTypes.GetGeneralConsentByIdNumberRequestType request_x = new ConsentWebServiceDataTypes.GetGeneralConsentByIdNumberRequestType();
            request_x.requestBody = requestBody;
            ConsentWebServiceDataTypes.GetGeneralConsentByIdNumberResponseType response_x;
            Map<String, ConsentWebServiceDataTypes.GetGeneralConsentByIdNumberResponseType> response_map_x = new Map<String, ConsentWebServiceDataTypes.GetGeneralConsentByIdNumberResponseType>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://service.cmss.cz/person/ConsentService/v01/getGeneralConsentByIdNumber',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'GetGeneralConsentByIdNumberRequest',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'GetGeneralConsentByIdNumberResponse',
              'ConsentWebServiceDataTypes.GetGeneralConsentByIdNumberResponseType'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.responseBody;
        }
        public ConsentWebServiceDataTypes.EnableGeneralConsentResponseBodyType enableGeneralConsent(ConsentWebServiceDataTypes.EnableGeneralConsentRequestBodyType requestBody, SOAPCommonTypes.OutboundRequestHeader requestHeader) {
            ConsentWebServiceDataTypes.EnableGeneralConsentRequestType request_x = new ConsentWebServiceDataTypes.EnableGeneralConsentRequestType();
            request_x.requestHeader = requestHeader;
            request_x.requestBody = requestBody;
            ConsentWebServiceDataTypes.EnableGeneralConsentResponseType response_x;
            Map<String, ConsentWebServiceDataTypes.EnableGeneralConsentResponseType> response_map_x = new Map<String, ConsentWebServiceDataTypes.EnableGeneralConsentResponseType>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://service.cmss.cz/person/ConsentService/v01/enableGeneralConsent',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'EnableGeneralConsentRequest',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'EnableGeneralConsentResponse',
              'ConsentWebServiceDataTypes.EnableGeneralConsentResponseType'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.responseBody;
        }
        public ConsentWebServiceDataTypes.DisableGeneralConsentResponseBodyType disableGeneralConsent(ConsentWebServiceDataTypes.DisableGeneralConsentRequestBodyType requestBody) {
            ConsentWebServiceDataTypes.DisableGeneralConsentRequestType request_x = new ConsentWebServiceDataTypes.DisableGeneralConsentRequestType();
            request_x.requestBody = requestBody;
            ConsentWebServiceDataTypes.DisableGeneralConsentResponseType response_x;
            Map<String, ConsentWebServiceDataTypes.DisableGeneralConsentResponseType> response_map_x = new Map<String, ConsentWebServiceDataTypes.DisableGeneralConsentResponseType>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://service.cmss.cz/person/ConsentService/v01/disableGeneralConsent',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'DisableGeneralConsentRequest',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'DisableGeneralConsentResponse',
              'ConsentWebServiceDataTypes.DisableGeneralConsentResponseType'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.responseBody;
        }
        public ConsentWebServiceDataTypes.EnableInternalConsentResponseBodyType enableInternalConsent(ConsentWebServiceDataTypes.EnableInternalConsentRequestBodyType requestBody, SOAPCommonTypes.OutboundRequestHeader requestHeader) {
            ConsentWebServiceDataTypes.EnableInternalConsentRequestType request_x = new ConsentWebServiceDataTypes.EnableInternalConsentRequestType();
            request_x.requestHeader = requestHeader;
            request_x.requestBody = requestBody;
            ConsentWebServiceDataTypes.EnableInternalConsentResponseType response_x;
            Map<String, ConsentWebServiceDataTypes.EnableInternalConsentResponseType> response_map_x = new Map<String, ConsentWebServiceDataTypes.EnableInternalConsentResponseType>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://service.cmss.cz/person/ConsentService/v01/enableInternalConsent',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'EnableInternalConsentRequest',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'EnableInternalConsentResponse',
              'ConsentWebServiceDataTypes.EnableInternalConsentResponseType'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.responseBody;
        }
        public ConsentWebServiceDataTypes.DisableInternalConsentForPersonResponseBodyType disableInternalConsentForPerson(ConsentWebServiceDataTypes.DisableInternalConsentForPersonRequestBodyType requestBody) {
            ConsentWebServiceDataTypes.DisableInternalConsentForPersonRequestType request_x = new ConsentWebServiceDataTypes.DisableInternalConsentForPersonRequestType();
            request_x.requestBody = requestBody;
            ConsentWebServiceDataTypes.DisableInternalConsentForPersonResponseType response_x;
            Map<String, ConsentWebServiceDataTypes.DisableInternalConsentForPersonResponseType> response_map_x = new Map<String, ConsentWebServiceDataTypes.DisableInternalConsentForPersonResponseType>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://service.cmss.cz/person/ConsentService/v01/disableInternalConsentForPerson',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'DisableInternalConsentForPersonRequest',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'DisableInternalConsentForPersonResponse',
              'ConsentWebServiceDataTypes.DisableInternalConsentForPersonResponseType'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.responseBody;
        }
        public ConsentWebServiceDataTypes.DisableInternalConsentResponseBodyType disableInternalConsent(ConsentWebServiceDataTypes.DisableInternalConsentRequestBodyType requestBody) {
            ConsentWebServiceDataTypes.DisableInternalConsentRequestType request_x = new ConsentWebServiceDataTypes.DisableInternalConsentRequestType();
            request_x.requestBody = requestBody;
            ConsentWebServiceDataTypes.DisableInternalConsentResponseType response_x;
            Map<String, ConsentWebServiceDataTypes.DisableInternalConsentResponseType> response_map_x = new Map<String, ConsentWebServiceDataTypes.DisableInternalConsentResponseType>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://service.cmss.cz/person/ConsentService/v01/disableInternalConsent',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'DisableInternalConsentRequest',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'DisableInternalConsentResponse',
              'ConsentWebServiceDataTypes.DisableInternalConsentResponseType'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.responseBody;
        }
        public ConsentWebServiceDataTypes.EnableChannelConsentResponseBodyType enableChannelConsent(ConsentWebServiceDataTypes.EnableChannelConsentRequestBodyType requestBody, SOAPCommonTypes.OutboundRequestHeader requestHeader) {
            ConsentWebServiceDataTypes.EnableChannelConsentRequestType request_x = new ConsentWebServiceDataTypes.EnableChannelConsentRequestType();
            request_x.requestHeader = requestHeader;
            request_x.requestBody = requestBody;
            ConsentWebServiceDataTypes.EnableChannelConsentResponseType response_x;
            Map<String, ConsentWebServiceDataTypes.EnableChannelConsentResponseType> response_map_x = new Map<String, ConsentWebServiceDataTypes.EnableChannelConsentResponseType>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://service.cmss.cz/person/ConsentService/v01/enableChannelConsent',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'EnableChannelConsentRequest',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'EnableChannelConsentResponse',
              'ConsentWebServiceDataTypes.EnableChannelConsentResponseType'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.responseBody;
        }
        public ConsentWebServiceDataTypes.DisableChannelConsentResponseBodyType disableChannelConsent(ConsentWebServiceDataTypes.DisableChannelConsentRequestBodyType requestBody, SOAPCommonTypes.OutboundRequestHeader requestHeader) {
            ConsentWebServiceDataTypes.DisableChannelConsentRequestType request_x = new ConsentWebServiceDataTypes.DisableChannelConsentRequestType();
            request_x.requestHeader = requestHeader;
            request_x.requestBody = requestBody;
            ConsentWebServiceDataTypes.DisableChannelConsentResponseType response_x;
            Map<String, ConsentWebServiceDataTypes.DisableChannelConsentResponseType> response_map_x = new Map<String, ConsentWebServiceDataTypes.DisableChannelConsentResponseType>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://service.cmss.cz/person/ConsentService/v01/disableChannelConsent',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'DisableChannelConsentRequest',
              'http://service.cmss.cz/person/ConsentService/v01/datatypes',
              'DisableChannelConsentResponse',
              'ConsentWebServiceDataTypes.DisableChannelConsentResponseType'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.responseBody;
        }
    }
}